- en: Appendix. New Features and Changes in Python 3.7 Through 3.11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following tables enumerate language and standard library changes in Python
    versions 3.7 through 3.11 that are most likely to be found in Python code. Use
    these tables to plan your upgrade strategy, as constrained by your exposure to
    breaking changes in your codebase.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following types of changes are considered to be “breaking” and are marked
    with a **!** symbol in the last column:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduces new keywords or built-ins (which may clash with names used in existing
    Python source code)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removes a method from a stdlib module or built-in type
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changes a built-in or stdlib method signature in a way that is not backward-compatible
    (such as removing a parameter, or renaming a named parameter)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New warnings (including DeprecatedWarning) are also shown as “breaking,” but
    marked with a ***** symbol in the last column.
  prefs: []
  type: TYPE_NORMAL
- en: Also see the table of proposed deprecations and removals from the standard library
    (“dead batteries”) in [PEP 594](https://oreil.ly/4Sy73), which lists modules that
    are slated for deprecation or removal, the versions in which these changes are
    scheduled to be made (beginning with Python 3.12), and recommended replacements.
  prefs: []
  type: TYPE_NORMAL
- en: Python 3.7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following table summarizes changes in Python version 3.7\. For further details,
    see “What’s New in Python 3.7” in the [online docs](https://oreil.ly/iIePL).
  prefs: []
  type: TYPE_NORMAL
- en: '| Python 3.7 | Added | Deprecated | Removed | Breaking change |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Functions accept > 255 arguments | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| argparse.ArgumentParser.parse_intermixed_args() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| ast.literal_eval() no longer evaluates addition and subtraction |   |   |
      | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| **async** and **await** become reserved language keywords | **+** |   |  
    | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.all_tasks(), asyncio.create_task(),'
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.current_task(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.get_running_loop(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.Future.get_loop(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.Handle.cancelled(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.loop.sock_recv_into(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.loop.sock_sendfile(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.loop.start_tls(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.ReadTransport.is_reading(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.Server.is_serving(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.Server.get_loop(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.Task.get_loop(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.run() (provisional) | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| asyncio.Server is an async context manager | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.loop.call_soon(), asyncio.loop.call_soon_threadsafe(),'
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.loop.call_later(),
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.loop.call_at(), and
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.Future.add_done_callback() all accept optional named context argument
    | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| asyncio.loop.create_server(), asyncio.loop.create_unix_server(),'
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.Server.start_serving(),
  prefs: []
  type: TYPE_NORMAL
- en: and asyncio.Server.serve_forever() all accept optional named start_serving argument
    | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| asyncio.Task.current_task() and asyncio.Task.all_tasks() are deprecated;
    use asyncio.current_task() and'
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.all_tasks() |   | **—** |   | ***** |
  prefs: []
  type: TYPE_NORMAL
- en: '| binascii.b2a_uu() accepts named backtick argument | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| bool() constructor no longer accepts a named argument (positional only) |
      |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| breakpoint() built-in function | **+** |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| bytearray.isascii() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| bytes.isascii() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| collections.namedtuple supports default values | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| concurrent.Futures.ProcessPoolExecutor and concurrent.Futures.ThreadPoolExecutor
    constructors accept optional initializer and initargs arguments | **+** |   |
      |   |'
  prefs: []
  type: TYPE_TB
- en: '| contextlib.AbstractAsyncContextManager, contextlib.asynccontextmanager(),'
  prefs: []
  type: TYPE_NORMAL
- en: contextlib.AsyncExitStack,
  prefs: []
  type: TYPE_NORMAL
- en: contextlib.nullcontext() | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| contextvars module (similar to thread-local vars, with asyncio support) |
    **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| dataclasses module | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| datetime.datetime.fromisoformat() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| DeprecationWarning shown by default in __main__ module | **+** |   |   |
    ***** |'
  prefs: []
  type: TYPE_TB
- en: '| dict maintaining insertion order now guaranteed; dict.popitem() returns items
    in LIFO order | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| __dir__() at module level | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| dis.dis() method accepts named depth argument | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| float() constructor no longer accepts a named argument (positional only)
    |   |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| fpectl module removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| **from** __future__ **import** annotations enables referencing as-yet-undefined
    types in type annotations without enclosing in quotes | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| gc.freeze() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| __getattr__() at module level | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| hmac.digest() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| http.client.HTTPConnection and http.client.HTTPSConnection constructors accept
    optional blocksize argument | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| http.server.ThreadingHTTPServer | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| importlib.abc.ResourceReader, importlib.resources module,'
  prefs: []
  type: TYPE_NORMAL
- en: importlib.source_hash() | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| int() constructor no longer accepts a named *x* argument (positional only;
    named base argument is still supported) |   |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| io.TextIOWrapper.reconfigure() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| ipaddress.IPv*Network.subnet_of(), ipaddress.IPv*Network.supernet_of() |
    **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| list() constructor no longer accepts a named argument (positional only) |
      |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| logging.StreamHandler.setStream() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| math.remainder() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| multiprocessing.Process.close(), multiprocessing.Process.kill() | **+** |
      |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| ntpath.splitunc() removed; use ntpath.splitdrive() |   |   | **X** | **!**
    |'
  prefs: []
  type: TYPE_TB
- en: '| os.preadv(), os.pwritev(), os.register_at_fork() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| os.stat_float_times() removed (compatibility function with Python 2; all
    timestamps in stat result are floats in Python 3) |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| pathlib.Path.is_mount() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| pdb.set_trace() accepts named header argument | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| plist.Dict, plist.Plist, and'
  prefs: []
  type: TYPE_NORMAL
- en: plist._InternalDict removed |   |   | **X** | **!** |
  prefs: []
  type: TYPE_NORMAL
- en: '| queue.SimpleQueue | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| re compiled expressions and match objects can be copied with copy.copy and
    copy.deepcopy | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| re.sub() no longer supports unknown escapes of \ and an ASCII letter |  
    |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| socket.close(), socket.getblocking(), socket.TCP_CONGESTION,'
  prefs: []
  type: TYPE_NORMAL
- en: socket.TCP_USER_TIMEOUT,
  prefs: []
  type: TYPE_NORMAL
- en: socket.TCP_NOTSENT_LOWAT (Linux platforms only) | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| sqlite3.Connection.backup() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| StopIteration handling in generators | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| str.isascii() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| subprocess.run() named argument capture_output=**True** for simplified stdin/stdout
    capture | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| subprocess.run() and subprocess.Popen() named argument text,'
  prefs: []
  type: TYPE_NORMAL
- en: alias for universal_newlines | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| subprocess.run(), subprocess.call(), and subprocess.Popen() improved'
  prefs: []
  type: TYPE_NORMAL
- en: KeyboardInterrupt handling | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| sys.breakpointhook(), sys.getandroidapilevel(),'
  prefs: []
  type: TYPE_NORMAL
- en: sys.get_coroutine_origin_tracking_depth(),
  prefs: []
  type: TYPE_NORMAL
- en: sys.set_coroutine_origin_tracking_depth() | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| time.clock_gettime_ns(), time.clock_settime_ns(),'
  prefs: []
  type: TYPE_NORMAL
- en: time.monotonic_ns(),
  prefs: []
  type: TYPE_NORMAL
- en: time.perf_counter_ns(),
  prefs: []
  type: TYPE_NORMAL
- en: time.process_time_ns(), time.time_ns(),
  prefs: []
  type: TYPE_NORMAL
- en: time.CLOCK_BOOTTIME, time.CLOCK_PROF,
  prefs: []
  type: TYPE_NORMAL
- en: time.CLOCK_UPTIME | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| time.thread_time() and time.thread_time_ns() for per-thread CPU timing |
    **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| tkinter.ttk.Spinbox | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| tuple() constructor no longer accepts a named argument (positional only)
    |   |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| types.ClassMethodDescriptorType, types.MethodDescriptorType, types.MethodWrapperType,'
  prefs: []
  type: TYPE_NORMAL
- en: types.WrapperDescriptorType | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| types.resolve_bases() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| uuid.UUID.is_safe | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| **yield** and **yield** **from** in comprehensions or generator expressions
    are deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| zipfile.ZipFile constructor accepts named compresslevel argument | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: Python 3.8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following table summarizes changes in Python version 3.8\. For further details,
    see “What’s New in Python 3.8” in the [online docs](https://oreil.ly/wSZXj).
  prefs: []
  type: TYPE_NORMAL
- en: '| Python 3.8 | Added | Deprecated | Removed | Breaking change |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Assignment expressions (:= “walrus” operator) | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| Positional-only and named-only parameters (/ and * arg separators) | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| F-string trailing = for debugging | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| **is** and **is not** tests against str and int literals emit SyntaxWarning
    |   |   |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| ast AST nodes end_lineno and end_col_offset attributes | **+** |   |   |
      |'
  prefs: []
  type: TYPE_TB
- en: '| ast.get_source_segment() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| ast.parse() accepts named arguments type_comments, mode, and feature_version
    | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| **async** REPL can be run using **python -m asyncio** | **+** |   |   |  
    |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio tasks can be named | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.coroutine decorator deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.run() to execute a coroutine directly | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.Task.get_coro() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| bool.as_integer_ratio() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| collections.namedtuple._asdict() returns dict instead of OrderedDict | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| **continue** permitted in **finally** block | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| cgi.parse_qs, cgi.parse_qsl, and cgi.escape removed; import from urllib.parse
    and html modules |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| csv.DictReader returns dicts instead of OrderedDicts | **+** |   |   |  
    |'
  prefs: []
  type: TYPE_TB
- en: '| datetime.date.fromisocalendar(), datetime.datetime.fromisocalendar() | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| dict comprehensions compute key first, value second |   |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| dict and dictviews returned from dict.keys(), dict.values() and dict.items()
    now iterable with reversed() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| fractions.Fraction.as_integer_ratio() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| functools.cached_property() decorator (see cautionary notes [here](https://oreil.ly/s3V1X)
    and [here](https://oreil.ly/svOZb)) | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| functools.lru_cache can be used as a decorator without () | **+** |   |  
    |   |'
  prefs: []
  type: TYPE_TB
- en: '| functools.singledispatchmethod decorator | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| gettext.pgettext() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| importlib.metadata module | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| int.as_integer_ratio() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| itertools.accumulate() accepts named initial argument | **+** |   |   |  
    |'
  prefs: []
  type: TYPE_TB
- en: '| macpath module removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| math.comb(), math.dist(), math.isqrt(), math.perm(), math.prod() | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| math.hypot() added support for > 2 dimensions | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| multiprocessing.shared_memory module | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| namedtuple._asdict() returns dict instead of OrderedDict | **+** |   |  
    |   |'
  prefs: []
  type: TYPE_TB
- en: '| os.add_dll_directory() on Windows | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| os.memfd_create() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| pathlib.Path.link_to() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| platform.popen() removed; use os.popen() |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| pprint.pp() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| pyvenv script removed; use **python -m venv** |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| re regular expression patterns support \N{*name*} escapes | **+** |   |  
    |   |'
  prefs: []
  type: TYPE_TB
- en: '| shlex.join() (inverse of shlex.split()) | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| shutil.copytree() accepts named dirs_exist_ok argument | **+** |   |   |
      |'
  prefs: []
  type: TYPE_TB
- en: '| __slots__ accepts a dict of {*name*: *docstring*} | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| socket.create_server(), socket.has_dualstack_ipv6() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| socket.if_nameindex(), socket.if_nametoindex(), and socket.if_indextoname()
    are all supported on Windows | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| sqlite3 Cache and Statement objects no longer user-visible |   |   | **X**
    | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| ssl.post_handshake_auth(), ssl.verify_client_post_handshake() | **+** |  
    |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| statistics.fmean(), statistics.geometric_mean(),'
  prefs: []
  type: TYPE_NORMAL
- en: statistics.multimode(),
  prefs: []
  type: TYPE_NORMAL
- en: statistics.NormalDist,
  prefs: []
  type: TYPE_NORMAL
- en: statistics.quantiles() | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| sys.get_coroutine_wrapper() and sys.set_coroutine_wrapper() removed |   |
      | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| sys.unraisablehook() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| tarfile.filemode() removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| threading.excepthook(), threading.get_native_id(),'
  prefs: []
  type: TYPE_NORMAL
- en: threading.Thread.native_id | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| time.clock() removed; use time.perf_counter() |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| tkinter.Canvas.moveto(), tkinter.PhotoImage.transparency_get(),'
  prefs: []
  type: TYPE_NORMAL
- en: tkinter.PhotoImage.transparency_set(),
  prefs: []
  type: TYPE_NORMAL
- en: tkinter.Spinbox.selection_from(),
  prefs: []
  type: TYPE_NORMAL
- en: tkinter.Spinbox.selection_present(),
  prefs: []
  type: TYPE_NORMAL
- en: tkinter.Spinbox.selection_range(),
  prefs: []
  type: TYPE_NORMAL
- en: tkinter.Spinbox.selection_to() | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| typing.Final, typing.get_args(), typing.get_origin(), typing.Literal,'
  prefs: []
  type: TYPE_NORMAL
- en: typing.Protocol, typing.SupportsIndex, typing.TypedDict | **+** |   |   |  
    |
  prefs: []
  type: TYPE_NORMAL
- en: '| typing.NamedTuple._field_types deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| unicodedata.is_normalized() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| unittest supports coroutines as test cases | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| unittest.addClassCleanup(), unittest. addModuleCleanup(), unittest.AsyncMock
    | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| xml.etree.Element.getchildren(), xml.etree.Element.getiterator(), xml.etree.ElementTree.getchildren(),
    and'
  prefs: []
  type: TYPE_NORMAL
- en: xml.etree.ElementTree.getiterator() deprecated |   | **—** |   | ***** |
  prefs: []
  type: TYPE_NORMAL
- en: '| XMLParser.doctype() removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| xmlrpc.client.ServerProxy accepts named headers argument | **+** |   |  
    |   |'
  prefs: []
  type: TYPE_TB
- en: '| **yield** and **return** unpacking no longer requires enclosing parentheses
    | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| **yield** and **yield** **from** no longer allowed in comprehensions or generator
    expressions |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: Python 3.9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following table summarizes changes in Python version 3.9\. For further details,
    see “What’s New in Python 3.9” in the [online docs](https://oreil.ly/KIMuX).
  prefs: []
  type: TYPE_NORMAL
- en: '| Python 3.9 | Added | Deprecated | Removed | Breaking change |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Type annotations can now use built-in types in generics (e.g., list[int]
    instead of List[int]) | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| array.array.tostring() and array.array.fromstring() removed;'
  prefs: []
  type: TYPE_NORMAL
- en: use tobytes() and frombytes() |   |   | **X** | **!** |
  prefs: []
  type: TYPE_NORMAL
- en: '| ast.unparse() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.loop.create_datagram_endpoint() argument reuse_address disabled |
      |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.PidfdChild Watcher, asyncio.shutdown_default_executor(),'
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.to_thread() | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| asyncio.Task.all_asks removed; use asyncio.all_tasks() |   |   | **X** |
    **!** |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.Task.current_task removed; use asyncio.current_task() |   |   | **X**
    | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| base64.encodestring() and base64.decodestring() removed; use base64.encodebytes()
    and base64.decodebytes() |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| concurrent.futures.Executor.shutdown() accepts named cancel_futures argument
    | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| curses.get_escdelay(), curses.get_tabsize(),'
  prefs: []
  type: TYPE_NORMAL
- en: curses.set_escdelay(),
  prefs: []
  type: TYPE_NORMAL
- en: curses.set_tabsize() | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| dict supports union operators &#124; and &#124;= | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| fcntl.F_OFD_GETLK, fcntl.F_OFD_SETLK,'
  prefs: []
  type: TYPE_NORMAL
- en: fcntl.F_OFD_SETKLW | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| fractions.gcd() removed; use math.gcd() |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| functools.cache() (lightweight/faster version of lru_cache) | **+** |   |
      |   |'
  prefs: []
  type: TYPE_TB
- en: '| gc.is_finalized() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| graphlib module with TopologicalSorter class | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| html.parser.HTMLParser.unescape() removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| imaplib.IMAP4.unselect() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| importlib.resources.files() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| inspect.BoundArguments.arguments returns dict instead of OrderedDict | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| ipaddress module does not accept leading zeros in IPv4 address strings |
      |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| logging.getLogger(''root'') returns the root logger | **+** |   |   | **!**
    |'
  prefs: []
  type: TYPE_TB
- en: '| math.gcd() accepts multiple arguments | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| math.lcm(), math.nextafter(), math.ulp() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| multiprocessing.SimpleQueue.close() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| nntplib.NNTP.xpath() and nntplib.xgtitle() removed |   |   | **X** | **!**
    |'
  prefs: []
  type: TYPE_TB
- en: '| os.pidfd_open() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| os.unsetenv() available on Windows | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| os.waitstatus_to_exitcode() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| parser module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| pathlib.Path.readlink() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| plistlib API removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| pprint supports types.SimpleNamespace | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| random.choices() with weights argument raises ValueError if weights are all
    0 |   |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| random.Random.randbytes() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| socket.CAN_RAW_JOIN_FILTERS, socket.send_fds(), socket.recv_fds() | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| str.removeprefix(), str.removesuffix() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| symbol module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| sys.callstats(), sys.getcheckinterval(), sys.getcounts(), and sys.setcheckinterval()
    removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| sys.getcheckinterval() and sys.setcheckinterval() removed;'
  prefs: []
  type: TYPE_NORMAL
- en: use sys.getswitchinterval() and
  prefs: []
  type: TYPE_NORMAL
- en: sys.setswitchinterval() |   |   | **X** | **!** |
  prefs: []
  type: TYPE_NORMAL
- en: '| sys.platlibdir attribute | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| threading.Thread.isAlive() removed; use threading.Thread.is_alive() |   |
      | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| tracemalloc.reset_peak() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| typing.Annotated type | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| typing.Literal deduplicates values; equality matching is order independent
    (3.9.1) |   |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| typing.NamedTuple._field_types removed; use __annotations__ |   |   | **X**
    | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| urllib.parse.parse_qs() and urllib.parse.parse_qsl() accept ; or & query
    parameter separator, but not both (3.9.2) |   |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| urllib.parse.urlparse() changed handling of numeric paths; a string like
    ''path:80'' is no longer parsed as a path but as a scheme (''path'') and a path
    (''80'') |   |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| **with** (**await** asyncio.Condition) and **with** (**yield from** asyncio.Condition)
    removed;'
  prefs: []
  type: TYPE_NORMAL
- en: use **async with** condition |   |   | **X** | **!** |
  prefs: []
  type: TYPE_NORMAL
- en: '| **with** (**await** asyncio.lock) and **with** (**yield from** asyncio.lock)
    removed;'
  prefs: []
  type: TYPE_NORMAL
- en: use **async with** lock |   |   | **X** | **!** |
  prefs: []
  type: TYPE_NORMAL
- en: '| **with** (**await** asyncio.Semaphore) and **with** (**yield from** asyncio.Semaphore)
    removed; use **async with** semaphore |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| xml.etree.Element.getchildren(), xml.etree.Element.getiterator(),'
  prefs: []
  type: TYPE_NORMAL
- en: xml.etree.ElementTree.getchildren(), and
  prefs: []
  type: TYPE_NORMAL
- en: xml.etree.ElementTree.getiterator() removed |   |   | **X** | **!** |
  prefs: []
  type: TYPE_NORMAL
- en: '| zoneinfo module for IANA time zone support | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: Python 3.10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following table summarizes changes in Python version 3.10\. For further
    details, see “What’s New in Python 3.10” in the [online docs](https://oreil.ly/TCpF4).
  prefs: []
  type: TYPE_NORMAL
- en: '| Python 3.10 | Added | Deprecated | Removed | Breaking change |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Building requires OpenSSL 1.1.1 or newer | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| Debugging improved with precise line numbers | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| Structural pattern matching using **match**, **case**, and **_** soft keywords^([a](app01.xhtml#ch01fn166))
    | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| aiter() and anext() built-ins | **+** |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| array.array.index() accepts optional arguments start and stop | **+** |  
    |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| ast.literal_eval(*s*) strips leading spaces and tabs from input string *s*
    | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| asynchat module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio functions remove loop parameter |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.connect_accepted_socket() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| asyncore module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| base64.b32hexdecode, base64.b32hexencode | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| bdb.clearBreakpoints() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| bisect.bisect, bisect.bisect_left, bisect.bisect_right, bisect.insort, bisect.insort_left,
    and bisect.insert_right all accept optional key argument | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| cgi.log deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| codecs.unregister() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| collections module compatibility definitions of ABCs removed; use collections.abc
    |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| collections.Counter.total() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| contextlib.aclosing() decorator, contextlib.AsyncContextDecorator | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| curses.has_extended_color_support() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| dataclasses.dataclass() decorator accepts optional slots argument | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| dataclasses.KW_ONLY | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| distutils deprecated, to be removed in Python 3.12 |   | **—** |   | *****
    |'
  prefs: []
  type: TYPE_TB
- en: '| enum.StrEnum | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| fileinput.input() and fileinput.FileInput accept optional encoding and errors
    arguments | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| formatter module removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| glob.glob() and glob.iglob() accept optional root_dir and dir_fd arguments
    to specify root search directory | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| importlib.metadata.package_distributions() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| inspect.get_annotations() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| int.bit_count() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| isinstance(obj, (atype, btype)) can be written isinstance(obj, atype&#124;btype)
    | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| issubclass(cls, (atype, btype)) can be written issubclass(cls, atype&#124;btype)
    | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| itertools.pairwise() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| os.eventfd(), os.splice() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| os.path.realpath() accepts optional strict argument | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| os.EVTONLY, os.O_FSYNC, os.O_SYMLINK, and os.O_NOFOLLOW_ANY all added on
    macOS | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| parser module removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| pathlib.Path.chmod() and pathlib.Path.stat() accept optional'
  prefs: []
  type: TYPE_NORMAL
- en: follow_symlinks keyword argument | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| pathlib.Path.hardlink_to() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| pathlib.Path.link_to() deprecated; use hardlink_to() |   | **—** |   | *****
    |'
  prefs: []
  type: TYPE_TB
- en: '| platform.freedesktop_os_release() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| pprint.pprint() accepts optional underscore_numbers keyword argument | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| smtpd module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| ssl.get_server_certificate accepts optional timeout argument | **+** |  
    |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| statistics.correlation(), statistics.covariance(),'
  prefs: []
  type: TYPE_NORMAL
- en: statistics.linear_regression() | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| SyntaxError.end_line_no and SyntaxError.end_offset attributes | **+** |  
    |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| sys.flags.warn_default_encoding to emit EncodingWarning | **+** |   |   |
    ***** |'
  prefs: []
  type: TYPE_TB
- en: '| sys.orig_argv and sys.stdlib_module_names attributes | **+** |   |   |  
    |'
  prefs: []
  type: TYPE_TB
- en: '| threading.__excepthook__ | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| threading.getprofile(), threading.gettrace() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| threading.Thread appends ''(<target.__name__>)'' to generated thread names
    | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| traceback.format_exception(), traceback.format_exception_only(),'
  prefs: []
  type: TYPE_NORMAL
- en: and traceback.print_exception() signature changes |   |   |   | **!** |
  prefs: []
  type: TYPE_NORMAL
- en: '| types.EllipsisType, types.NoneType, types.NotImplementedType | **+** |  
    |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| typing module includes parameter specification variables for specifying Callable
    types | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| typing.io module deprecated; use typing |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| typing.is_typeddict() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| typing.Literal deduplicates values; equality matching is order-independent
    |   |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| typing.Optional[X] can be written as X &#124; None | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| typing.re module deprecated; use typing |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| typing.TypeAlias for defining explicit type aliases | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| typing.TypeGuard | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| typing.Union[X, Y] can use &#124; operator as X &#124; Y | **+** |   |  
    |   |'
  prefs: []
  type: TYPE_TB
- en: '| unittest.assertNoLogs() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| urllib.parse.parse_qs() and urllib.parse.parse_qsl() accept ; or & query
    parameter separator, but not both |   |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| **with** statement accepts parenthesized context managers: **with**(ctxmgr,
    ctxmgr, ...) | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| xml.sax.handler.LexicalHandler | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| zip built-in accepts optional strict named argument for length-checking |
    **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| zipimport.find_spec(), zipimport.zipimporter.create_module(),'
  prefs: []
  type: TYPE_NORMAL
- en: zipimport.zipimporter.exec_module(),
  prefs: []
  type: TYPE_NORMAL
- en: zipimport.zipimporter.invalidate_caches() | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| ^([a](app01.xhtml#ch01fn166-marker)) Since these are defined as *soft* keywords,
    they do not break existing code using those same names. |'
  prefs: []
  type: TYPE_TB
- en: Python 3.11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following table summarizes changes in Python version 3.11\. For further
    details, see “What’s New in Python 3.11” in the [online docs](https://oreil.ly/4Df8q).
  prefs: []
  type: TYPE_NORMAL
- en: '| Python 3.11 | Added | Deprecated | Removed | Breaking change |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| **Security patch released in Python 3.11.0 and backported to versions 3.7–3.10:**
    int conversion to str and str conversion to'
  prefs: []
  type: TYPE_NORMAL
- en: int in bases other than 2, 4, 8, 16, or 32 raises
  prefs: []
  type: TYPE_NORMAL
- en: ValueError if the resulting string > 4,300 digits (addresses [CVE-2020-10735](https://oreil.ly/lS-gO))
    |   |   |   | **!** |
  prefs: []
  type: TYPE_NORMAL
- en: '| General performance improvements | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| Improved error messages | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| New syntax: **for** *x* **in** **values* | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| aifc module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| asynchat and asyncore modules deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.Barrier, asyncio.start_tls(),'
  prefs: []
  type: TYPE_NORMAL
- en: asyncio.TaskGroup | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| asyncio.coroutine decorator removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.loop.create_datagram_endpoint() argument reuse_address removed |
      |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| asyncio.TimeoutError deprecated; use TimeoutError |   | **—** |   | *****
    |'
  prefs: []
  type: TYPE_TB
- en: '| audioop module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| BaseException.add_note(), BaseException.__notes__ attribute | **+** |   |
      |   |'
  prefs: []
  type: TYPE_TB
- en: '| binascii.a2b_hqx(), binascii.b2a_hqx(),'
  prefs: []
  type: TYPE_NORMAL
- en: binascii.rlecode_hqx(), and
  prefs: []
  type: TYPE_NORMAL
- en: binascii.rledecode_hqx() removed |   |   | **X** | **!** |
  prefs: []
  type: TYPE_NORMAL
- en: '| binhex module removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| cgi and cgitb modules deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| chunk module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| concurrent.futures.ProcessPoolExecutor() max_tasks_per_child argument | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| concurrent.futures.TimeoutError deprecated; use built-in TimeoutError |  
    | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| contextlib.chdir context manager (change current working dir and then restore
    it) | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| crypt module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| dataclasses check for mutable defaults disallows any value that is not hashable
    (formerly allowed any value that was not a dict, list, or set) |   |   |   | **!**
    |'
  prefs: []
  type: TYPE_TB
- en: '| datetime.UTC as a convenience alias for datetime.timezone.utc | **+** |  
    |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| enum.Enum str() output just gives name | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| enum.EnumCheck, enum.FlagBoundary, enum.global_enum() decorator, enum.member()
    decorator, enum.nonmember() decorator, enum.property, enum.ReprEnum, enum.StrEnum,
    and  enum.verify() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| ExceptionGroups and except* | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| fractions.Fraction initialization from string | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| gettext.l*gettext() methods removed |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| glob.glob() and glob.iglob() accept optional include_hidden argument | **+**
    |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| hashlib.file_digest() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| imghdr module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| inspect.formatargspec() and inspect.getargspec() removed; use inspect.signature()
    |   |   | **X** | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| inspect.getmembers_static(), inspect.ismethodwrapper() | **+** |   |   |
      |'
  prefs: []
  type: TYPE_TB
- en: '| locale.getdefaultlocale() and locale.resetlocale() deprecated |   | **—**
    |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| locale.getencoding() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| logging.getLevelNamesMapping() | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| mailcap module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| math.cbrt() (cube root), math.exp2() (computes 2ⁿ) | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| msilib module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| nis module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| nntplib module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| operator.call | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| ossaudiodev module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| pipes module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| re pattern syntax supports *+, ++, ?+, and {m,n}+ possessive quantifiers,
    and (?>...) atomic grouping | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| re.template() deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| smtpd module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| sndhdr module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| spwd module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| sqlite3.Connection.blobopen(), sqlite3.Connection.create_window_function(),
    sqlite3.Connection.deserialize(),'
  prefs: []
  type: TYPE_NORMAL
- en: sqlite3.Connection.getlimit(),
  prefs: []
  type: TYPE_NORMAL
- en: sqlite3.Connection.serialize(),
  prefs: []
  type: TYPE_NORMAL
- en: sqlite3.Connection.setlimit() | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| sre_compile, sre_constants, and sre_parse deprecated |   | **—** |   | *****
    |'
  prefs: []
  type: TYPE_TB
- en: '| statistics.fmean() optional weights argument | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| sunau module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| sys.exception() (equivalent to sys.exc_info()[1]) | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| telnetlib module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| time.nanosleep() (Unix-like systems only) | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| tomllib TOML parser module | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| typing.assert_never(), typing.assert_type(),'
  prefs: []
  type: TYPE_NORMAL
- en: typing.LiteralString, typing.Never,
  prefs: []
  type: TYPE_NORMAL
- en: typing.reveal_type(), typing.Self | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| typing.Text deprecated; use str |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| typing.TypedDict items can be marked as Required or NotRequired | **+** |
      |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| typing.TypedDict(a=int, b=str) form deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| unicodedata updated to Unicode 14.0.0 | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| unittest.enterModuleContext(), unittest.IsolatedAsyncioTestCase.enterAsyncContext(),'
  prefs: []
  type: TYPE_NORMAL
- en: unittest.TestCase.enterClassContext(),
  prefs: []
  type: TYPE_NORMAL
- en: unittest.TestCase.enterContext() | **+** |   |   |   |
  prefs: []
  type: TYPE_NORMAL
- en: '| unittest.findTestCases(), unittest.getTestCaseName(),'
  prefs: []
  type: TYPE_NORMAL
- en: and unittest.makeSuite() deprecated;
  prefs: []
  type: TYPE_NORMAL
- en: use methods of unittest.TestLoader |   | **—** |   | ***** |
  prefs: []
  type: TYPE_NORMAL
- en: '| uu module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| **with** statement now raises TypeError instead of AttributeError for objects
    that do not support the context manager protocol |   |   |   | **!** |'
  prefs: []
  type: TYPE_TB
- en: '| xdrlib module deprecated |   | **—** |   | ***** |'
  prefs: []
  type: TYPE_TB
- en: '| z string format specifier added, for negative sign of values close to zero
    | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| zipfile.ZipFile.mkdir() added | **+** |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '| *Add your own notes here:* |   |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '|   |   |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '|   |   |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '|   |   |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '|   |   |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '|   |   |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '|   |   |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '|   |   |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '|   |   |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '|   |   |   |   |   |'
  prefs: []
  type: TYPE_TB
- en: '|   |   |   |   |   |'
  prefs: []
  type: TYPE_TB
