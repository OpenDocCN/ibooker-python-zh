["```py\npool = Pool(5)\n\ndef special_business(x):\n    def inc(y):\n        return y + x\n    return pool.map(inc, range(0, x))\nray.util.inspect_serializability(special_business)\n```", "```py\n=========================================================================\nChecking Serializability of <function special_business at 0x7f78802820d0>\n=========================================================================\n!!! FAIL serialization: pool objects cannot be passed between processes or pickled\nDetected 1 global variables. Checking serializability...\n    Serializing 'pool' <multiprocessing.pool.Pool state=RUN pool_size=5>...\n    !!! FAIL serialization: pool objects cannot be passed between processes ...\n...\n```", "```py\n@ray.remote\nclass Bloop():\n\n    def __init__(self, dev_host):\n        import pydevd_pycharm\n        # Requires ability to connect to dev from prod.\n        try:\n            pydevd_pycharm.settrace(\n                dev_host, port=7779, stdoutToServer=True, stderrToServer=True)\n        except ConnectionRefusedError:\n            print(\"Skipping debug\")\n            pass\n\n    def dothing(x):\n        return x + 1\n```"]