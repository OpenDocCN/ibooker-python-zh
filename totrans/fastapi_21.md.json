["```py\nimport csv\nimport sys\n\ndef read_csv(fname: str) -> list[tuple]:\n    with open(fname) as file:\n        data = [row for row in csv.reader(file, delimiter=\"|\")]\n    return data\n\nif __name__ == \"__main__\":\n    data = read_csv(sys.argv[1])\n    for row in data[0:5]:\n        print(row)\n```", "```py\n$ python load_csv.py cryptid.psv\n['name', 'country', 'area', 'description', 'aka']\n['Abaia', 'FJ', ' ', 'Lake eel', ' ']\n['Afanc', 'UK', 'CYM', 'Welsh lake monster', ' ']\n['Agropelter', 'US', 'ME', 'Forest twig flinger', ' ']\n['Akkorokamui', 'JP', ' ', 'Giant Ainu octopus', ' ']\n['Albatwitch', 'US', 'PA', 'Apple stealing mini Bigfoot', ' ']\n```", "```py\nfrom tabulate import tabulate\nimport sys\n\ndef read_csv(fname: str) -> list[tuple]:\n    with open(fname) as file:\n        data = [row for row in csv.reader(file, delimiter=\"|\")]\n    return data\n\nif __name__ == \"__main__\":\n    data = read_csv(sys.argv[1])\n    print(tabulate(data[0:5]))\n```", "```py\n$ python load_tabulate.py cryptid.psv\n-----------  -------  ----  -------------------  ---\nName         Country  Area  Description          AKA\nAbaia        FJ             Lake eel\nAfanc        UK       CYM   Welsh lake monster\nAgropelter   US       ME    Forest twig flinger\nAkkorokamui  JP             Giant Ainu octopus\n-----------  -------  ----  -------------------  ---\n```", "```py\nimport pandas\nimport sys\n\ndef read_pandas(fname: str) -> pandas.DataFrame:\n    data = pandas.read_csv(fname, sep=\"|\")\n    return data\n\nif __name__ == \"__main__\":\n    data = read_pandas(sys.argv[1])\n    print(data.head(5))\n```", "```py\n$ python load_pandas.py cryptid.psv\n          name country area                  description aka\n0        Abaia      FJ                          Lake eel\n1        Afanc      UK  CYM           Welsh lake monster\n2   Agropelter      US   ME          Forest twig flinger\n3  Akkorokamui      JP                Giant Ainu octopus\n4   Albatwitch      US   PA  Apple stealing mini Bigfoot\n```", "```py\n$ http -b localhost:8000/creature\n[\n    {\n        \"aka\": \"AKA\",\n        \"area\": \"Area\",\n        \"country\": \"Country\",\n        \"description\": \"Description\",\n        \"name\": \"Name\"\n    },\n    {\n        \"aka\": \" \",\n        \"area\": \" \",\n        \"country\": \"FJ\",\n        \"description\": \"Lake eel\",\n        \"name\": \"Abaia\"\n    },\n...\n]\n```", "```py\n# (insert these lines in web/creature.py)\n\nfrom fastapi import Response\nimport plotly.express as px\n\n@router.get(\"/test\")\ndef test():\n    df = px.data.iris()\n    fig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\", color=\"species\")\n    fig_bytes = fig.to_image(format=\"png\")\n    return Response(content=fig_bytes, media_type=\"image/png\")\n```", "```py\n# (insert these lines in web/creature.py)\n\nfrom collections import Counter\nfrom fastapi import Response\nimport plotly.express as px\nfrom service.creature import get_all\n\n@router.get(\"/plot\")\ndef plot():\n    creatures = get_all()\n    letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    counts = Counter(creature.name[0] for creature in creatures)\n    y = { letter: counts.get(letter, 0) for letter in letters }\n    fig = px.histogram(x=list(letters), y=y, title=\"Creature Names\",\n        labels={\"x\": \"Initial\", \"y\": \"Initial\"})\n    fig_bytes = fig.to_image(format=\"png\")\n    return Response(content=fig_bytes, media_type=\"image/png\")\n```", "```py\n# (insert these lines in web/creature.py)\n\nimport plotly.express as px\nimport country_converter as coco\n\n@router.get(\"/map\")\ndef map():\n    creatures = service.get_all()\n    iso2_codes = set(creature.country for creature in creatures)\n    iso3_codes = coco.convert(names=iso2_codes, to=\"ISO3\")\n    fig = px.choropleth(\n        locationmode=\"ISO-3\",\n        locations=iso3_codes)\n    fig_bytes = fig.to_image(format=\"png\")\n    return Response(content=fig_bytes, media_type=\"image/png\")\n```"]