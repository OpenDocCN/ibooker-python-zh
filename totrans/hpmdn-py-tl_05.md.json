["```py\nimport json\nimport textwrap\nimport urllib.request\n\nAPI_URL = \"https://en.wikipedia.org/api/rest_v1/page/random/summary\" ![1](assets/1.png)\n\ndef main():\n    with urllib.request.urlopen(API_URL) as response: ![2](assets/2.png)\n        data = json.load(response) ![3](assets/3.png)\n\n    print(data[\"title\"], end=\"\\n\\n\") ![4](assets/4.png)\n    print(textwrap.fill(data[\"extract\"])) ![4](assets/4.png)\n\nif __name__ == \"__main__\":\n    main()\n```", "```py\n> py -m random_wikipedia_article\nJägersbleeker Teich\n\nThe Jägersbleeker Teich in the Harz Mountains of central Germany\nis a storage pond near the town of Clausthal-Zellerfeld in the\ncounty of Goslar in Lower Saxony. It is one of the Upper Harz Ponds\nthat were created for the mining industry.\n\n```", "```py\n[project]\nname = \"random-wikipedia-article\"\nversion = \"0.1\"\n\n[project.scripts]\nrandom-wikipedia-article = \"random_wikipedia_article:main\"\n\n[build-system]\nrequires = [\"hatchling\"]\nbuild-backend = \"hatchling.build\"\n```", "```py\n$ pipx run build\n* Creating venv isolated environment...\n* Installing packages in isolated environment... (hatchling)\n* Getting build dependencies for sdist...\n* Building sdist...\n* Building wheel from sdist\n* Creating venv isolated environment...\n* Installing packages in isolated environment... (hatchling)\n* Getting build dependencies for wheel...\n* Building wheel...\nSuccessfully built random_wikipedia_article-0.1.tar.gz\n and random_wikipedia_article-0.1-py2.py3-none-any.whl\n```", "```py\n$ py -m venv buildenv\n$ buildenv/bin/python -m pip install hatchling\n$ buildenv/bin/python\n>>> import hatchling.build as backend\n>>> backend.get_requires_for_build_wheel()\n[]  # no additional build dependencies requested\n>>> backend.build_wheel(\"dist\")\n'random_wikipedia_article-0.1-py2.py3-none-any.whl'\n\n```", "```py\n$ pipx run twine upload --repository=testpypi dist/*\nUploading distributions to https://test.pypi.org/legacy/\nEnter your API token: *********\nUploading random_wikipedia_article-0.1-py2.py3-none-any.whl\nUploading random_wikipedia_article-0.1.tar.gz\n\nView at:\nhttps://test.pypi.org/project/random-wikipedia-article/0.1/\n```", "```py\n$ pipx install --index-url=https://test.pypi.org/simple random-wikipedia-article\n  installed package random-wikipedia-article 0.1, installed using Python 3.12.2\n  These apps are now globally available\n    - random-wikipedia-article\ndone!\n\n```", "```py\n$ random-wikipedia-article\n```", "```py\n$ pipx run build\n$ uv venv\n$ uv pip install dist/*.whl\n```", "```py\n$ uv venv\n$ uv pip install .\n```", "```py\n$ pipx install .\n  installed package random-wikipedia-article 0.1, installed using Python 3.10.8\n  These apps are now globally available\n    - random-wikipedia-article\n```", "```py\n$ uv pip install --editable .\n$ py -m pip install --editable .\n$ pipx install --editable .\n\n```", "```py\ndef main():\n    raise Exception(\"Boom!\")\n```", "```py\n$ pipx run build\n$ uv venv\n$ uv pip install dist/*.whl\n$ py -m random_wikipedia_article\nException: Boom!\n\n```", "```py\n$ py -m random_wikipedia_article\nCystiscus viaderi\n\nCystiscus viaderi is a species of very small sea snail, a marine\ngastropod mollusk or micromollusk in the family Cystiscidae.\n```", "```py\n$ pipx run twine upload dist/*\n```", "```py\nfrom random_wikipedia_article import main\n\nmain()\n```", "```py\nrandom-wikipedia-article\n├── pyproject.toml\n└── src\n    └── random_wikipedia_article\n        ├── __init__.py\n        └── __main__.py\n```", "```py\nfrom random_wikipedia_article.fetch import fetch\n```", "```py\n$ rye init random-wikipedia-article --script\n```", "```py\nrandom-wikipedia-article\n├── .git\n├── .gitignore\n├── .python-version\n├── .venv\n├── README.md\n├── pyproject.toml\n└── src\n    └── random_wikipedia_article\n        ├── __init__.py\n        └── __main__.py\n```", "```py\n$ rye build\n$ rye publish --repository testpypi --repository-url https://test.pypi.org/legacy/\n$ rye sync\n```", "```py\n$ py -m pip download attrs\n$ unzip *.whl\n$ ls -1\nattr\nattrs\nattrs-23.2.0.dist-info\nattrs-23.2.0-py3-none-any.whl\n\n$ head -n4 attrs-23.2.0.dist-info/METADATA\nMetadata-Version: 2.1\nName: attrs\nVersion: 23.2.0\nSummary: Classes Without Boilerplate\n\n```", "```py\n$ uv pip install attrs\n$ py\n>>> from importlib.metadata import metadata\n>>> metadata(\"attrs\")[\"Version\"]\n23.2.0\n>>> metadata(\"attrs\")[\"Summary\"]\nClasses Without Boilerplate\n\n```", "```py\n[project]\nname = \"random-wikipedia-article\"\nversion = \"0.1\"\ndescription = \"Display extracts from random Wikipedia articles\"\nkeywords = [\"wikipedia\"]\nreadme = \"README.md\"  # only if your project has a README.md file\nlicense = { text = \"MIT\" }\nauthors = [{ name = \"Your Name\", email = \"you@example.com\" }]\nclassifiers = [\"Topic :: Games/Entertainment :: Fortune Cookies\"]\nurls = { Homepage = \"https://yourname.dev/projects/random-wikipedia-article\" }\nrequires-python = \">=3.8\"\ndependencies = [\"httpx>=0.27.0\", \"rich>=13.7.1\"]\n```", "```py\n[project]\nname = \"random-wikipedia-article\"\n```", "```py\n[project]\nversion = \"0.1\"\n```", "```py\n[project]\ndynamic = [\"version\", \"readme\"]\n```", "```py\n__version__ = \"0.2\"\n```", "```py\n[project]\nname = \"random-wikipedia-article\"\ndynamic = [\"version\"] ![1](assets/1.png)\n\n[tool.hatch.version]\npath = \"random_wikipedia_article.py\" ![2](assets/2.png)\n\n[build-system]\nrequires = [\"hatchling\"]\nbuild-backend = \"hatchling.build\"\n```", "```py\nfrom importlib.metadata import version\n\n__version__ = version(\"random-wikipedia-article\")\n```", "```py\ndef __getattr__(name):\n    if name != \"__version__\":\n        msg = f\"module {__name__} has no attribute {name}\"\n        raise AttributeError(msg)\n\n    from importlib.metadata import version\n\n    return version(\"random-wikipedia-article\")\n```", "```py\n[project]\nname = \"random-wikipedia-article\"\ndynamic = [\"version\"]\n\n[tool.hatch.version]\nsource = \"vcs\"\n\n[build-system]\nrequires = [\"hatchling\", \"hatch-vcs\"]\nbuild-backend = \"hatchling.build\"\n```", "```py\n[project.scripts]\nrandom-wikipedia-article = \"random_wikipedia_article:main\"\n```", "```py\n$ random-wikipedia-article\n```", "```py\n[project.gui-scripts]\nrandom-wikipedia-article-gui = \"random_wikipedia_article:gui_main\"\n```", "```py\n[project.entry-points.some_application]\nmy-plugin = \"my_plugin\"\n```", "```py\n[project.entry-points.some_application]\nmy-plugin = \"my_plugin.submodule:plugin\"\n```", "```py\n[project]\ndependencies = [\"pytest\"]\n\n[project.entry-points.pytest11]\nrandom-wikipedia-article = \"random_wikipedia_article\"\n```", "```py\nimport json\nimport urllib.request\n\nimport pytest\n\nAPI_URL = \"https://en.wikipedia.org/api/rest_v1/page/random/summary\"\n\n@pytest.fixture\ndef random_wikipedia_article():\n    with urllib.request.urlopen(API_URL) as response:\n        return json.load(response)\n```", "```py\n# test_wikipedia_viewer.py\ndef test_wikipedia_viewer(random_wikipedia_article):\n    print(random_wikipedia_article[\"extract\"]) ![1](assets/1.png)\n    assert False ![2](assets/2.png)\n```", "```py\n$ py -m pip install .\n$ py -m pytest test_wikipedia_viewer.py\n============================= test session starts ==============================\nplatform darwin -- Python 3.12.2, pytest-8.1.1, pluggy-1.4.0\nrootdir: ...\nplugins: random-wikipedia-article-0.1\ncollected 1 item\n\ntest_wikipedia_viewer.py F                                               [100%]\n\n=================================== FAILURES ===================================\n____________________________ test_wikipedia_viewer _____________________________\n\n    def test_wikipedia_viewer(random_wikipedia_article):\n        print(random_wikipedia_article[\"extract\"])\n>       assert False\nE       assert False\n\ntest_wikipedia_viewer.py:4: AssertionError\n----------------------------- Captured stdout call -----------------------------\nHalgerda stricklandi is a species of sea slug, a dorid nudibranch, a shell-less\nmarine gastropod mollusk in the family Discodorididae.\n=========================== short test summary info ============================\nFAILED test_wikipedia_viewer.py::test_wikipedia_viewer - assert False\n============================== 1 failed in 1.10s ===============================\n\n```", "```py\n[project]\nauthors = [{ name = \"Your Name\", email = \"you@example.com\" }]\nmaintainers = [\n  { name = \"Alice\", email = \"alice@example.com\" },\n  { name = \"Bob\", email = \"bob@example.com\" },\n]\n```", "```py\n[project]\ndescription = \"Display extracts from random Wikipedia articles\"\n```", "```py\n[project]\nreadme = \"README.md\"\n```", "```py\n[project]\nreadme = { file = \"README\", content-type = \"text/plain\" }\n```", "```py\n[project.readme]\ncontent-type = \"text/markdown\"\ntext = \"\"\"\n# random-wikipedia-article\n\nDisplay extracts from random Wikipedia articles\n\"\"\"\n```", "```py\n[project]\nkeywords = [\"wikipedia\"]\n```", "```py\n[project]\nclassifiers = [\n    \"Development Status :: 3 - Alpha\",\n    \"Environment :: Console\",\n    \"Topic :: Games/Entertainment :: Fortune Cookies\",\n]\n```", "```py\n[project.urls]\nHomepage = \"https://yourname.dev/projects/random-wikipedia-article\"\nSource = \"https://github.com/yourname/random-wikipedia-article\"\nIssues = \"https://github.com/yourname/random-wikipedia-article/issues\"\nDocumentation = \"https://readthedocs.io/random-wikipedia-article\"\n```", "```py\n[project]\nlicense = { text = \"MIT\" }\nclassifiers = [\"License :: OSI Approved :: MIT License\"]\n```", "```py\n[project]\nlicense = { text = \"proprietary\" }\nclassifiers = [\n    \"License :: Other/Proprietary License\",\n    \"Private :: Do Not Upload\",\n]\n```", "```py\n[project]\nrequires-python = \">=3.8\"\n```"]