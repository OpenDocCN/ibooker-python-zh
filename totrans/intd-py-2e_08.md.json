["```py\n>>> empty_tuple = ()\n>>> empty_tuple\n()\n```", "```py\n>>> one_marx = 'Groucho',\n>>> one_marx\n('Groucho',)\n```", "```py\n>>> one_marx = ('Groucho',)\n>>> one_marx\n('Groucho',)\n```", "```py\n>>> one_marx = ('Groucho')\n>>> one_marx\n'Groucho'\n>>> type(one_marx)\n<class 'str'>\n```", "```py\n>>> marx_tuple = 'Groucho', 'Chico', 'Harpo'\n>>> marx_tuple\n('Groucho', 'Chico', 'Harpo')\n```", "```py\n>>> marx_tuple = ('Groucho', 'Chico', 'Harpo')\n>>> marx_tuple\n('Groucho', 'Chico', 'Harpo')\n```", "```py\n>>> one_marx = 'Groucho',\n>>> type(one_marx)\n<class 'tuple'>\n>>> type('Groucho',)\n<class 'str'>\n>>> type(('Groucho',))\n<class 'tuple'>\n```", "```py\n>>> marx_tuple = ('Groucho', 'Chico', 'Harpo')\n>>> a, b, c = marx_tuple\n>>> a\n'Groucho'\n>>> b\n'Chico'\n>>> c\n'Harpo'\n```", "```py\n>>> password = 'swordfish'\n>>> icecream = 'tuttifrutti'\n>>> password, icecream = icecream, password\n>>> password\n'tuttifrutti'\n>>> icecream\n'swordfish'\n>>>\n```", "```py\n>>> marx_list = ['Groucho', 'Chico', 'Harpo']\n>>> tuple(marx_list)\n('Groucho', 'Chico', 'Harpo')\n```", "```py\n>>> ('Groucho',) + ('Chico', 'Harpo')\n('Groucho', 'Chico', 'Harpo')\n```", "```py\n>>> ('yada',) * 3\n('yada', 'yada', 'yada')\n```", "```py\n>>> a = (7, 2)\n>>> b = (7, 2, 9)\n>>> a == b\nFalse\n>>> a <= b\nTrue\n>>> a < b\nTrue\n```", "```py\n>>> words = ('fresh','out', 'of', 'ideas')\n>>> for word in words:\n...     print(word)\n...\nfresh\nout\nof\nideas\n```", "```py\n>>> t1 = ('Fee', 'Fie', 'Foe')\n>>> t2 = ('Flop,')\n>>> t1 + t2\n('Fee', 'Fie', 'Foe', 'Flop')\n```", "```py\n>>> t1 = ('Fee', 'Fie', 'Foe')\n>>> t2 = ('Flop,')\n>>> t1 += t2\n>>> t1\n('Fee', 'Fie', 'Foe', 'Flop')\n```", "```py\n>>> t1 = ('Fee', 'Fie', 'Foe')\n>>> t2 = ('Flop',)\n>>> id(t1)\n4365405712\n>>> t1 += t2\n>>> id(t1)\n4364770744\n```", "```py\n>>> empty_list = [ ]\n>>> weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']\n>>> big_birds = ['emu', 'ostrich', 'cassowary']\n>>> first_names = ['Graham', 'John', 'Terry', 'Terry', 'Michael']\n>>> leap_years = [2000, 2004, 2008]\n>>> randomness = ['Punxsatawney\", {\"groundhog\": \"Phil\"}, \"Feb. 2\"}\n```", "```py\n>>> another_empty_list = list()\n>>> another_empty_list\n[]\n```", "```py\n>>> list('cat')\n['c', 'a', 't']\n```", "```py\n>>> a_tuple = ('ready', 'fire', 'aim')\n>>> list(a_tuple)\n['ready', 'fire', 'aim']\n```", "```py\n>>> talk_like_a_pirate_day = '9/19/2019'\n>>> talk_like_a_pirate_day.split('/')\n['9', '19', '2019']\n```", "```py\n>>> splitme = 'a/b//c/d///e'\n>>> splitme.split('/')\n['a', 'b', '', 'c', 'd', '', '', 'e']\n```", "```py\n>>> splitme = 'a/b//c/d///e'\n>>> splitme.split('//')\n>>>\n['a/b', 'c/d', '/e']\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> marxes[0]\n'Groucho'\n>>> marxes[1]\n'Chico'\n>>> marxes[2]\n'Harpo'\n```", "```py\n>>> marxes[-1]\n'Harpo'\n>>> marxes[-2]\n'Chico'\n>>> marxes[-3]\n'Groucho'\n>>>\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> marxes[5]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIndexError: list index out of range\n```", "```py\n>>> marxes[-5]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIndexError: list index out of range\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> marxes[0:2]\n['Groucho', 'Chico']\n```", "```py\n>>> marxes[::2]\n['Groucho', 'Harpo']\n```", "```py\n>>> marxes[::-2]\n['Harpo', 'Groucho']\n```", "```py\n>>> marxes[::-1]\n['Harpo', 'Chico', 'Groucho']\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> marxes.reverse()\n>>> marxes\n['Harpo', 'Chico', 'Groucho']\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> marxes[4:]\n[]\n>>> marxes[-6:]\n['Groucho', 'Chico', 'Harpo']\n>>> marxes[-6:-2]\n['Groucho']\n>>> marxes[-6:-4]\n[]\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> marxes.append('Zeppo')\n>>> marxes\n['Groucho', 'Chico', 'Harpo', 'Zeppo']\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> marxes.insert(2, 'Gummo')\n>>> marxes\n['Groucho', 'Chico', 'Gummo', 'Harpo']\n>>> marxes.insert(10, 'Zeppo')\n>>> marxes\n['Groucho', 'Chico', 'Gummo', 'Harpo', 'Zeppo']\n```", "```py\n>>> [\"blah\"] * 3\n['blah', 'blah', 'blah']\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo', 'Zeppo']\n>>> others = ['Gummo', 'Karl']\n>>> marxes.extend(others)\n>>> marxes\n['Groucho', 'Chico', 'Harpo', 'Zeppo', 'Gummo', 'Karl']\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo', 'Zeppo']\n>>> others = ['Gummo', 'Karl']\n>>> marxes += others\n>>> marxes\n['Groucho', 'Chico', 'Harpo', 'Zeppo', 'Gummo', 'Karl']\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo', 'Zeppo']\n>>> others = ['Gummo', 'Karl']\n>>> marxes.append(others)\n>>> marxes\n['Groucho', 'Chico', 'Harpo', 'Zeppo', ['Gummo', 'Karl']]\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> marxes[2] = 'Wanda'\n>>> marxes\n['Groucho', 'Chico', 'Wanda']\n```", "```py\n>>> numbers = [1, 2, 3, 4]\n>>> numbers[1:3] = [8, 9]\n>>> numbers\n[1, 8, 9, 4]\n```", "```py\n>>> numbers = [1, 2, 3, 4]\n>>> numbers[1:3] = [7, 8, 9]\n>>> numbers\n[1, 7, 8, 9, 4]\n```", "```py\n>>> numbers = [1, 2, 3, 4]\n>>> numbers[1:3] = []\n>>> numbers\n[1, 4]\n```", "```py\n>>> numbers = [1, 2, 3, 4]\n>>> numbers[1:3] = (98, 99, 100)\n>>> numbers\n[1, 98, 99, 100, 4]\n```", "```py\n>>> numbers = [1, 2, 3, 4]\n>>> numbers[1:3] = 'wat?'\n>>> numbers\n[1, 'w', 'a', 't', '?', 4]\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo', 'Gummo', 'Karl']\n>>> marxes[-1]\n'Karl'\n>>> del marxes[-1]\n>>> marxes\n['Groucho', 'Chico', 'Harpo', 'Gummo']\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo', 'Gummo']\n>>> del marxes[1]\n>>> marxes\n['Groucho', 'Harpo', 'Gummo']\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> marxes.remove('Groucho')\n>>> marxes\n['Chico', 'Harpo']\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo', 'Zeppo']\n>>> marxes.pop()\n'Zeppo'\n>>> marxes\n['Groucho', 'Chico', 'Harpo']\n>>> marxes.pop(1)\n'Chico'\n>>> marxes\n['Groucho', 'Harpo']\n```", "```py\n>>> work_quotes = ['Working hard?', 'Quick question!', 'Number one priorities!']\n>>> work_quotes\n['Working hard?', 'Quick question!', 'Number one priorities!']\n>>> work_quotes.clear()\n>>> work_quotes\n[]\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo', 'Zeppo']\n>>> marxes.index('Chico')\n1\n```", "```py\n>>> simpsons = ['Lisa', 'Bart', 'Marge', 'Homer', 'Bart']\n>>> simpsons.index('Bart')\n1\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo', 'Zeppo']\n>>> 'Groucho' in marxes\nTrue\n>>> 'Bob' in marxes\nFalse\n```", "```py\n>>> words = ['a', 'deer', 'a' 'female', 'deer']\n>>> 'deer' in words\nTrue\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> marxes.count('Harpo')\n1\n>>> marxes.count('Bob')\n0\n```", "```py\n>>> snl_skit = ['cheeseburger', 'cheeseburger', 'cheeseburger']\n>>> snl_skit.count('cheeseburger')\n3\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> ', '.join(marxes)\n'Groucho, Chico, Harpo'\n```", "```py\n>>> friends = ['Harry', 'Hermione', 'Ron']\n>>> separator = ' * '\n>>> joined = separator.join(friends)\n>>> joined\n'Harry * Hermione * Ron'\n>>> separated = joined.split(separator)\n>>> separated\n['Harry', 'Hermione', 'Ron']\n>>> separated == friends\nTrue\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> sorted_marxes = sorted(marxes)\n>>> sorted_marxes\n['Chico', 'Groucho', 'Harpo']\n```", "```py\n>>> marxes\n['Groucho', 'Chico', 'Harpo']\n```", "```py\n>>> marxes.sort()\n>>> marxes\n['Chico', 'Groucho', 'Harpo']\n```", "```py\n>>> numbers = [2, 1, 4.0, 3]\n>>> numbers.sort()\n>>> numbers\n[1, 2, 3, 4.0]\n```", "```py\n>>> numbers = [2, 1, 4.0, 3]\n>>> numbers.sort(reverse=True)\n>>> numbers\n[4.0, 3, 2, 1]\n```", "```py\n>>> marxes = ['Groucho', 'Chico', 'Harpo']\n>>> len(marxes)\n3\n```", "```py\n>>> a = [1, 2, 3]\n>>> a\n[1, 2, 3]\n>>> b = a\n>>> b\n[1, 2, 3]\n>>> a[0] = 'surprise'\n>>> a\n['surprise', 2, 3]\n```", "```py\n>>> b\n['surprise', 2, 3]\n```", "```py\n>>> b\n['surprise', 2, 3]\n>>> b[0] = 'I hate surprises'\n>>> b\n['I hate surprises', 2, 3]\n>>> a\n['I hate surprises', 2, 3]\n```", "```py\n>>> a = [1, 2, 3]\n>>> b = a.copy()\n>>> c = list(a)\n>>> d = a[:]\n```", "```py\n>>> a[0] = 'integer lists are boring'\n>>> a\n['integer lists are boring', 2, 3]\n>>> b\n[1, 2, 3]\n>>> c\n[1, 2, 3]\n>>> d\n[1, 2, 3]\n```", "```py\n>>> a = [1, 2, [8, 9]]\n>>> b = a.copy()\n>>> c = list(a)\n>>> d = a[:]\n>>> a\n[1, 2, [8, 9]]\n>>> b\n[1, 2, [8, 9]]\n>>> c\n[1, 2, [8, 9]]\n>>> d\n[1, 2, [8, 9]]\n```", "```py\n>>> a[2][1] = 10\n>>> a\n[1, 2, [8, 10]]\n>>> b\n[1, 2, [8, 10]]\n>>> c\n[1, 2, [8, 10]]\n>>> d\n[1, 2, [8, 10]]\n```", "```py\n>>> import copy\n>>> a = [1, 2, [8, 9]]\n>>> b = copy.deepcopy(a)\n>>> a\n[1, 2, [8, 9]]\n>>> b\n[1, 2, [8, 9]]\n>>> a[2][1] = 10\n>>> a\n[1, 2, [8, 10]]\n>>> b\n[1, 2, [8, 9]]\n```", "```py\n>>> a = [7, 2]\n>>> b = [7, 2, 9]\n>>> a == b\nFalse\n>>> a <= b\nTrue\n>>> a < b\nTrue\n```", "```py\n>>> cheeses = ['brie', 'gjetost', 'havarti']\n>>> for cheese in cheeses:\n...     print(cheese)\n...\nbrie\ngjetost\nhavarti\n```", "```py\n>>> cheeses = ['brie', 'gjetost', 'havarti']\n>>> for cheese in cheeses:\n...     if cheese.startswith('g'):\n...         print(\"I won't eat anything that starts with 'g'\")\n...         break\n...     else:\n...         print(cheese)\n...\nbrie\nI won't eat anything that starts with 'g'\n```", "```py\n>>> cheeses = ['brie', 'gjetost', 'havarti']\n>>> for cheese in cheeses:\n...     if cheese.startswith('x'):\n...         print(\"I won't eat anything that starts with 'x'\")\n...         break\n...     else:\n...         print(cheese)\n... else:\n...     print(\"Didn't find anything that started with 'x'\")\n...\nbrie\ngjetost\nhavarti\nDidn't find anything that started with 'x'\n```", "```py\n>>> cheeses = []\n>>> for cheese in cheeses:\n...     print('This shop has some lovely', cheese)\n...     break\n... else:  # no break means no cheese\n...     print('This is not much of a cheese shop, is it?')\n...\nThis is not much of a cheese shop, is it?\n```", "```py\n>>> days = ['Monday', 'Tuesday', 'Wednesday']\n>>> fruits = ['banana', 'orange', 'peach']\n>>> drinks = ['coffee', 'tea', 'beer']\n>>> desserts = ['tiramisu', 'ice cream', 'pie', 'pudding']\n>>> for day, fruit, drink, dessert in zip(days, fruits, drinks, desserts):\n...     print(day, \": drink\", drink, \"- eat\", fruit, \"- enjoy\", dessert)\n...\nMonday : drink coffee - eat banana - enjoy tiramisu\nTuesday : drink tea - eat orange - enjoy ice cream\nWednesday : drink beer - eat peach - enjoy pie\n```", "```py\n>>> english = 'Monday', 'Tuesday', 'Wednesday'\n>>> french = 'Lundi', 'Mardi', 'Mercredi'\n```", "```py\n>>> list( zip(english, french) )\n[('Monday', 'Lundi'), ('Tuesday', 'Mardi'), ('Wednesday', 'Mercredi')]\n```", "```py\n>>> dict( zip(english, french) )\n{'Monday': 'Lundi', 'Tuesday': 'Mardi', 'Wednesday': 'Mercredi'}\n```", "```py\n>>> number_list = []\n>>> number_list.append(1)\n>>> number_list.append(2)\n>>> number_list.append(3)\n>>> number_list.append(4)\n>>> number_list.append(5)\n>>> number_list\n[1, 2, 3, 4, 5]\n```", "```py\n>>> number_list = []\n>>> for number in range(1, 6):\n...     number_list.append(number)\n...\n>>> number_list\n[1, 2, 3, 4, 5]\n```", "```py\n>>> number_list = list(range(1, 6))\n>>> number_list\n[1, 2, 3, 4, 5]\n```", "```py\n[*`expression`* for *`item`* in *`iterable`*]\n```", "```py\n>>> number_list = [number for number in range(1,6)]\n>>> number_list\n[1, 2, 3, 4, 5]\n```", "```py\n>>> number_list = [number-1 for number in range(1,6)]\n>>> number_list\n[0, 1, 2, 3, 4]\n```", "```py\n[*`expression`* for *`item`*\nin *`iterable`* if *`condition`*]\n```", "```py\n>>> a_list = [number for number in range(1,6) if number % 2 == 1]\n>>> a_list\n[1, 3, 5]\n```", "```py\n>>> a_list = []\n>>> for number in range(1,6):\n...     if number % 2 == 1:\n...         a_list.append(number)\n...\n>>>  a_list\n[1, 3, 5]\n```", "```py\n>>> rows = range(1,4)\n>>> cols = range(1,3)\n>>> for row in rows:\n...     for col in cols:\n...         print(row, col)\n...\n1 1\n1 2\n2 1\n2 2\n3 1\n3 2\n```", "```py\n>>> rows = range(1,4)\n>>> cols = range(1,3)\n>>> cells = [(row, col) for row in rows for col in cols]\n>>> for cell in cells:\n...     print(cell)\n...\n(1, 1)\n(1, 2)\n(2, 1)\n(2, 2)\n(3, 1)\n(3, 2)\n```", "```py\n>>> for row, col in cells:\n...     print(row, col)\n...\n1 1\n1 2\n2 1\n2 2\n3 1\n3 2\n```", "```py\n>>> small_birds = ['hummingbird', 'finch']\n>>> extinct_birds = ['dodo', 'passenger pigeon', 'Norwegian Blue']\n>>> carol_birds = [3, 'French hens', 2, 'turtledoves']\n>>> all_birds = [small_birds, extinct_birds, 'macaw', carol_birds]\n```", "```py\n>>> all_birds\n[['hummingbird', 'finch'], ['dodo', 'passenger pigeon', 'Norwegian Blue'], 'macaw',\n[3, 'French hens', 2, 'turtledoves']]\n```", "```py\n>>> all_birds[0]\n['hummingbird', 'finch']\n```", "```py\n>>> all_birds[1]\n['dodo', 'passenger pigeon', 'Norwegian Blue']\n```", "```py\n>>> all_birds[1][0]\n'dodo'\n```", "```py\n>>> number_thing = (number for number in range(1, 6))\n```", "```py\n>>> type(number_thing)\n<class 'generator'>\n```", "```py\nstart1 = [\"fee\", \"fie\", \"foe\"]\nrhymes = [\n    (\"flop\", \"get a mop\"),\n    (\"fope\", \"turn the rope\"),\n    (\"fa\", \"get your ma\"),\n    (\"fudge\", \"call the judge\"),\n    (\"fat\", \"pet the cat\"),\n    (\"fog\", \"walk the dog\"),\n    (\"fun\", \"say we're done\"),\n    ]\nstart2 = \"Someone better\"\n```"]