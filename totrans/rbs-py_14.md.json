["```py\nfrom restaurant import geo\nfrom restaurant import operations as ops\nclass Restaurant:\n    def __init__(self,\n                 name: str,\n                 location: geo.Coordinates,\n                 employees: list[ops.Employee],\n                 inventory: list[ops.Ingredient],\n                 menu: ops.Menu,\n                 finances: ops.Finances):\n        # ... snip ...\n        # note that location refers to where the restaurant is located when\n        # serving food\n\n    def transfer_employees(self,\n                           employees: list[ops.Employee],\n                           restaurant: 'Restaurant'):\n        # ... snip ...\n\n    def order_dish(self, dish: ops.Dish):\n        # ... snip ..\n\n    def add_inventory(self, ingredients: list[ops.Ingredient],\n                      cost_in_cents: int):\n        # ... snip ...\n\n    def register_hours_employee_worked(self,\n                                       employee: Employee,\n                                       minutes_worked: int):\n        # ... snip ...\n\n    def get_restaurant_data(self) -> ops.RestaurantData:\n        # ... snip ...\n\n    def change_menu(self, menu: ops.Menu):\n        self.__menu = menu\n\n    def move_location(self, new_location: geo.Coordinates):\n        # ... snip ...\n```", "```py\nclass FoodTruck(Restaurant):\n    #... snip ...\n\nclass PopUpStall(Restaurant):\n    # ... snip ...\n```", "```py\nfood_truck = FoodTruck(\"Pat's Food Truck\", location, employees,\n                       inventory, menu, finances)\nfood_truck.order_dish(Dish('Pasta with Sausage'))\nfood_truck.move_location(geo.find_coordinates('Huntsville, Alabama'))\n```", "```py\ndef display_restaurant_data(restaurant: Restaurant):\n    data = restaurant.get_restaurant_data()\n    # ... snip drawing code here ...\n\nrestaurants: list[Restaurant] = [food_truck]\nfor restaurant in restaurants:\n    display_restaurant_data(restaurant)\n```", "```py\nfrom restaurant.logging import log_error\nclass FoodTruck(Restaurant):\n    def __init__(self,\n                 name: str,\n                 location: geo.Coordinates,\n                 employees: list[ops.Employee],\n                 inventory: list[ops.Ingredient],\n                 menu: ops: Menu,\n                 finances: ops.Finances):\n        super().__init__(name, location, employees,inventory, menu, finances)\n        self.__gps = initialize_gps()\n\n    def move_location(self, new_location: geo.Coordinates):\n        # schedule a task to drive us to our new location\n        schedule_auto_driving_task(new_location)\n        super().move_location(new_location)\n\n    def get_current_location(self) -> geo.Coordinates:\n        return self.__gps.get_coordinates()\n```", "```py\ndef display_restaurant(restaurant: Restaurant):\n    # ... snip ...\n```", "```py\nclass Rectangle:\n    def __init__(self, height: int, width: int):\n        self._height = height\n        self._width = width\n\n    def set_width(self, new_width):\n        self._width = new_width\n\n    def set_height(self, new_height):\n        self._height = new_height\n\n    def get_width(self) -> int:\n        return self._width\n\n    def get_height(self) -> int:\n        return self._height\n\nclass Square(Rectangle):\n    def __init__(self, length: int):\n        super().__init__(length, length)\n\n    def set_side_length(self, new_length):\n        super().set_width(new_length)\n        super().set_height(new_length)\n\n    def set_width(self, new_width):\n        self.set_side_length(new_width)\n\n    def set_height(self, new_height):\n        self.set_side_length(new_height)\n```", "```py\ndef double_width(rectangle: Rectangle):\n    old_height = rectangle.get_height()\n    rectangle.set_width(rectangle.get_width() * 2)\n    # check that the height is unchanged\n    assert rectangle.get_height() == old_height\n```", "```py\nclass RestrictedMenuRestaurant(Restaurant):\n\n    def __init__(self,\n                 name: str,\n                 location: geo.Coordinates,\n                 employees: list[ops.Employee],\n                 inventory: list[ops.Ingredient],\n                 menu: ops.Menu,\n                 finances: ops.Finances,\n                 restricted_items: list[ops.Ingredient]):\n        super().__init__(name,location,employees,inventory,menu,finances)\n        self.__restricted_items = restricted_items\n\n    def change_menu(self, menu: ops.Menu):\n        if any(not menu.contains(ingredient)\n               for ingredient in self.__restricted_items):\n            # new menus MUST contain restricted ingredients\n            return super().change_menu(menu)\n```", "```py\nclass Restaurant:\n    def __init__(self,\n                 name: str,\n                 location: geo.Coordinates,\n                 employees: list[ops.Employee],\n                 inventory: list[ops.Ingredient],\n                 menu: ops: Menu,\n                 finances: ops.Finances):\n        self.name = name\n        self.location = location\n        self.employees = employees\n        # ... etc etc snip snip ...\n```"]