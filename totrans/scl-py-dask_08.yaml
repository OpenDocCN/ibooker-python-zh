- en: Chapter 8\. How to Evaluate Dask’s Components and Libraries
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 8 章\. 如何评估 Dask 的组件和库
- en: It’s hard, although possible, to build reliable systems out of unreliable components.^([1](ch08.xhtml#id712))
    Dask is a largely community-driven open source project, and its components evolve
    at different rates. Not all parts of Dask are equally mature; even the components
    we cover in this book have different levels of support and development. While
    Dask’s core parts are well maintained and tested, some parts lack the same level
    of maintenance.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可能，但是构建由不可靠组件组成的可靠系统很难。^([1](ch08.xhtml#id712)) Dask 是一个主要由社区驱动的开源项目，其组件的发展速度不同。并非所有的
    Dask 部分都同样成熟；即使是本书涵盖的组件也有不同的支持和发展水平。虽然 Dask 的核心部分得到了良好的维护和测试，但某些部分缺乏同等水平的维护。
- en: Still, there are already dozens of popular libraries specifically for Dask,
    and the open source Dask community is growing around them. This gives us some
    confidence that many of these libraries are here to stay. [Table 8-1](#libraries_used_with_dask_1687806941692)
    shows a non-exhaustive list of foundational libraries in use and their relation
    to the core Dask project. It is meant as a road map for users and is not an endorsement
    of individual projects. Though we haven’t attempted to cover all the projects
    shown here, we offer evaluation of some individual projects throughout the book.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，已有数十个特定于 Dask 的流行库，开源 Dask 社区正在围绕它们不断壮大。这使我们对这些库中的许多将长期存在感到有信心。[表 8-1](#libraries_used_with_dask_1687806941692)
    展示了一些基础库的非详尽列表，及其与核心 Dask 项目的关系。这旨在为用户提供路线图，并不是对个别项目的认可。尽管我们没有尝试涵盖所有显示的项目，但我们在整本书中对一些个别项目进行了评估。
- en: Table 8-1\. Libraries frequently used with Dask
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 表 8-1\. 经常与 Dask 一起使用的库
- en: '| **Category** | **Subcategory** | **Libraries** |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| **类别** | **子类别** | **库** |'
- en: '| --- | --- | --- |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Dask project |  |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| Dask 项目 |  |'
- en: Dask
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dask
- en: Distributed
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分布式
- en: dask-ml
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dask-ml
- en: '|'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **Data structures**: Extend functionality, specific scientific data handling,
    or deployment hardware options of Dask built-in data structures | Functionalities
    and convenience |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| **数据结构**：扩展 Dask 内置数据结构的功能、特定科学数据处理或部署硬件选项 | 功能和便利性 |'
- en: '*xarray*: adds axis labels for Dask array'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*xarray*：为 Dask 数组添加轴标签'
- en: '*sparse*: an efficient implementation for sparse arrays and matrices, often
    found in ML and deep learning'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*sparse*：稀疏数组和矩阵的高效实现，通常用于 ML 和深度学习'
- en: '*pint*: scientific unit conversion'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*pint*：科学单位转换'
- en: '*dask-geopandas*: parallelization of geopandas'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*dask-geopandas*：geopandas 的并行化'
- en: '|'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Hardware |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 硬件 |'
- en: '*RAPIDS project*: NVIDIA-led effort to extend CUDA data structure for Dask'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*RAPIDS 项目*：NVIDIA 领导的项目，扩展了 CUDA 数据结构以用于 Dask'
- en: '*dask-cuda*:^([a](ch08.xhtml#libraries_table_foonote)) provides CUDA cluster,
    an extension of Dask’s cluster that better manages CUDA-enabled Dask workers'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*dask-cuda*:^([a](ch08.xhtml#libraries_table_foonote)) 提供 CUDA 集群，扩展了 Dask
    的集群以更好地管理支持 CUDA 的 Dask 工作节点'
- en: '*cuPY*:^([a](#libraries_table_foonote)) GPU-enabled arrays'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*cuPY*:^([a](#libraries_table_foonote)) GPU 启用的数组'
- en: '*cuDF*:^([a](#libraries_table_foonote)) CUDA DataFrame as partitions in Dask
    DataFrame'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*cuDF*:^([a](#libraries_table_foonote)) CUDA 数据帧作为 Dask 数据帧的分区'
- en: '|'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **Deployment**: Extend deployment options for use with Dask distributed |
    Containers |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| **部署**：扩展部署选项以与 Dask 分布式一起使用 | 容器 |'
- en: '*dask-kubernetes*:^([a](#libraries_table_foonote)) Dask on k8s'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*dask-kubernetes*:^([a](#libraries_table_foonote)) 在 k8s 上的 Dask'
- en: '*dask-helm*:^([a](#libraries_table_foonote)) alternate Dask on k8s and jupyterhub
    on k8s'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*dask-helm*:^([a](#libraries_table_foonote)) 替代 Dask 在 k8s 和 jupyterhub 在 k8s
    上的使用'
- en: '|'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Cloud |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 云 |'
- en: '*dask-cloudprovider*: commodity cloud APIs'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*dask-cloudprovider*：商品云 API'
- en: '*dask-gateway*'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*dask-gateway*'
- en: '*Dask-Yarn*:^([a](#libraries_table_foonote)) for YARN/Hadoop'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Dask-Yarn*:^([a](#libraries_table_foonote)) 用于 YARN/Hadoop'
- en: '|'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| GPU |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| GPU |'
- en: '*dask-cuda*: Dask cluster optimized for GPUs'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*dask-cuda*：优化 GPU 的 Dask 集群'
- en: '|'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| HPC |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| HPC |'
- en: '*Dask-jobqueue*:^([a](#libraries_table_foonote)) deployment for PBS, Slurm,
    MOAB, SGE, LSF, and HTCondor'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Dask-jobqueue*:^([a](#libraries_table_foonote)) 用于 PBS、Slurm、MOAB、SGE、LSF
    和 HTCondor 的部署'
- en: '*dask-mpi*:^([a](#libraries_table_foonote)) deployment for MPI'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*dask-mpi*:^([a](#libraries_table_foonote)) MPI 的部署'
- en: '|'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **ML and analytics**: Extend ML libraries and computation with Dask |  |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| **ML 和分析**：通过 Dask 扩展 ML 库和计算 |  |'
- en: '*dask-ml*:^([a](#libraries_table_foonote)) Distributed implementation of scikit-learn
    and more'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*dask-ml*:^([a](#libraries_table_foonote)) 分布式实现 scikit-learn 及更多'
- en: '*xgboost*:^([a](#libraries_table_foonote)) gradient boosting with native Dask
    support'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*xgboost*:^([a](#libraries_table_foonote)) 具有原生 Dask 支持的梯度提升'
- en: '*light-gbm*:^([a](#libraries_table_foonote)) another tree-based learning algorithm
    with native Dask support'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*light-gbm*:^([a](#libraries_table_foonote)) 另一种基于树的学习算法，具有本地 Dask 支持'
- en: '*Dask-SQL*:^([a](#libraries_table_foonote)) CPU-based SQL engine for Dask (ETL/compute
    logic can be run on SQL context; similar to SparkSQL)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Dask-SQL*:^([a](#libraries_table_foonote)) 基于 CPU 的 Dask SQL 引擎（ETL/计算逻辑可以在
    SQL 上下文中运行；类似于 SparkSQL）'
- en: '*BlazingSQL*:^([a](#libraries_table_foonote)) SQL query on cuDF and Dask'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*BlazingSQL*:^([a](#libraries_table_foonote)) 基于 cuDF 和 Dask 的 SQL 查询'
- en: '*FugueSQL*:^([a](#libraries_table_foonote)) portability between pandas, Dask,
    and Spark, using the same SQL code (downside: requires ANTLR, a JVM-based tool)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*FugueSQL*:^([a](#libraries_table_foonote)) 在 pandas、Dask 和 Spark 之间可移植，使用相同的
    SQL 代码（缺点：需要 ANTLR，一个基于 JVM 的工具）'
- en: '*Dask-on-Ray*:^([a](#libraries_table_foonote)) Dask’s distributed data structures
    and task graphs, run on Ray scheduler'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Dask-on-Ray*:^([a](#libraries_table_foonote)) Dask 的分布式数据结构和任务图，在 Ray 调度器上运行'
- en: '|'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| ^([a](ch08.xhtml#libraries_table_foonote-marker)) Covered in this book. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| ^([a](ch08.xhtml#libraries_table_foonote-marker)) 本书涵盖内容。 |'
- en: It’s essential to understand the state of the components that you are considering
    using. If you need to use a less maintained or developed part of Dask, [defensive
    programming](https://oreil.ly/IDXVs), including thorough code testing, will become
    even more critical. Working on less-established parts of the Dask ecosystem can
    also be an exciting opportunity to become more involved and contribute fixes or
    documentation.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 了解您考虑使用的组件的状态至关重要。如果您需要使用 Dask 的维护较少或开发较少的部分，[防御性编程](https://oreil.ly/IDXVs)，包括彻底的代码测试，将变得更加关键。在较少建立的
    Dask 生态系统部分工作，也可以是参与并贡献修复或文档的激动人心机会。
- en: Note
  id: totrans-50
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This is not to say that closed source software does not suffer from the same
    challenges (e.g., untested components), but we are in a better place to evaluate
    and make informed choices with open source software.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不意味着闭源软件不会遇到相同的挑战（例如，未经测试的组件），但使用开源软件，我们可以更好地评估并做出明智的选择。
- en: Of course, not all of our projects need to be maintainable, but as the saying
    goes, “Nothing is more permanent than a temporary fix.” If something is truly
    a one-time-use project, you can likely skip most of the analysis here and try
    out the libraries to see if they work for you.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，并非所有项目都需要可维护性，但俗话说，“没有比临时解决方案更持久的东西。” 如果某件事确实是一次性项目，您可以跳过这里大部分的分析，试用这些库，看它们是否适合您。
- en: Dask is under rapid development, and any static table of which components are
    production-ready would be out of date by the time it was read. So instead of sharing
    our views on which components of Dask are currently well developed, this chapter
    aims to give you the tools to evaluate the libraries you may be considering. In
    this chapter, we separate metrics that you can measure concretely from the fuzzier
    qualitative metrics. Perhaps counterintuitively, we believe that the “fuzzier”
    qualitative metrics are a better framework for evaluating components and projects.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Dask 正在快速发展，任何关于哪些组件是生产就绪的静态表格，在阅读时都将过时。因此，与其分享我们认为哪些 Dask 组件目前发展良好，本章旨在为您提供评估您可能考虑的库的工具。在本章中，我们将可以具体测量的指标与模糊的质量指标分开。或许反直觉地是，我们认为“模糊”的质量指标更适合评估组件和项目。
- en: Along the way, we’ll look at some projects and how they are measured, but please
    keep in mind that these specific observations may be out of date by the time you
    read this, and you should do your own evaluation with the tools provided here.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在此过程中，我们将查看一些项目及其衡量方式，但请记住，到您阅读本书时，这些具体观察结果可能已经过时，您应该使用本书提供的工具进行自己的评估。
- en: Tip
  id: totrans-55
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: While we focus on the Dask ecosystem in this chapter, you can apply most of
    these techniques throughout software tool selection.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们在本章节中关注 Dask 生态系统，但您可以在软件工具选择的大多数情况下应用这些技术。
- en: Qualitative Considerations for Project Evaluation
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目评估的质量考虑
- en: We start by focusing on qualitative tools since we believe these tools are the
    best for determining the suitability of a particular library for your project.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先关注质量工具，因为我们认为这些工具是确定特定库适合您的项目的最佳工具。
- en: Project Priorities
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目优先级
- en: Some projects prioritize benchmarks or performance numbers, while other projects
    can prioritize correctness and clarity, and still others may prioritize completeness.
    A project’s README or home page is often a good sign of what the project prioritizes.
    Early in its creation, Apache Spark’s home page focused on performance with benchmarks,
    whereas now it shows an ecosystem of tools leading more toward completeness. The
    Dask Kubernetes GitHub README shows a collection of badges indicating the state
    of the code and not much else, revealing a strong developer focus.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有些项目优先考虑基准测试或性能数字，而其他项目可能更注重正确性和清晰度，还有一些项目可能更注重完整性。项目的 README 或主页通常是项目优先考虑内容的一个良好指标。在创建早期，Apache
    Spark 的主页专注于性能和基准测试，而现在显示了一个更加完整的工具生态系统。Dask Kubernetes GitHub README 显示了一系列标记，指示代码的状态，除此之外几乎没有其他内容，显示出强烈的开发者关注。
- en: While there are many arguments for and against focusing on benchmarks, correctness
    should almost never be sacrificed.^([2](ch08.xhtml#id714)) This does not mean
    that libraries will never have bugs; rather, projects should take reports of correctness
    issues seriously and treat them with higher priority than others. An excellent
    way to see whether a project values correctness is to look for reports of correctness
    and observe how the core developers respond.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有许多关于是否专注于基准测试的争论，几乎永远不应牺牲正确性。^([2](ch08.xhtml#id714)) 这并不意味着库永远不会有 bug；相反，项目应认真对待正确性问题的报告，并将其视为更高优先级的问题。了解项目是否重视正确性的一个很好的方法是查看正确性问题的报告，并观察核心开发人员如何回应。
- en: Many Dask ecosystem projects use GitHub’s built-in issue tracker, but if you
    don’t see any activity, check the README and developer guides to see if the project
    uses a different issue tracker. For example, many ASF projects use JIRA. Looking
    into how folks respond to issues gives you a good idea of what issues they consider
    important. You don’t need to look at all of them, but a small sample of 10 will
    often give you a good idea (look at open and not fixed issues as well as closed
    and fixed ones).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 许多 Dask 生态系统项目使用 GitHub 内置的问题跟踪器，但如果您看不到任何活动，请查看 README 和开发者指南，以查看该项目是否使用不同的问题跟踪器。例如，许多
    ASF 项目使用 JIRA。研究人们如何回应问题可以让您了解他们认为哪些问题重要。您不需要查看所有问题，但查看10个小样本通常会给您一个很好的想法（查看未解决和已关闭的问题，以及已修复和未修复的问题）。
- en: Community
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 社区
- en: As one of the unofficial ASF sayings goes, “Community over code.”^([3](ch08.xhtml#id718))
    The [Apache Way website](https://oreil.ly/CcJZ1) describes this as meaning “the
    most successful long-lived projects value a broad and collaborative community
    over the details of the code itself.” This saying matches our experience, in which
    we’ve found that technical improvements are easier to copy from other projects,
    but the community is much harder to move. Measuring community is challenging,
    and it can be tempting to look at the number of developers or users, but we think
    it’s essential to go beyond that.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 正如非官方 ASF 的一句话说的那样，“社区高于代码。”^([3](ch08.xhtml#id718)) [Apache Way 网站](https://oreil.ly/CcJZ1)
    将其描述为“最成功、长期存在的项目重视广泛而协作的社区，而不是代码的细节本身。” 这句话符合我们的经验，我们发现技术改进很容易从其他项目复制，但社区则难以移动。衡量社区是具有挑战性的，人们往往倾向于看开发者或用户的数量，但我们认为必须超越这一点。
- en: Finding the community associated with a particular project can be tricky. Take
    your time to look around at issue trackers, source code, forums (like Discourse),
    and mailing lists. For example, Dask’s [Discourse group](https://oreil.ly/hSVE0)
    is highly active. Some projects use IRC, Slack, or Discord, or their “interactive”
    communication—and in our opinion, some of the best projects put in the effort
    to make the conversations from these communication channels appear in search indexes.
    Sometimes parts of the community may exist on external social media sites, and
    these pose a unique set of challenges to community standards.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 找到与特定项目相关联的社区可能有些棘手。花点时间浏览问题跟踪器、源代码、论坛（如Discourse）和邮件列表。例如，Dask 的 [Discourse
    组](https://oreil.ly/hSVE0) 非常活跃。有些项目使用 IRC、Slack 或 Discord，或者它们的“互动”通信方式——在我们看来，一些最好的项目会努力让这些沟通渠道的对话出现在搜索索引中。有时，社区的部分内容可能存在于外部社交媒体网站上，这对社区标准提出了独特的挑战。
- en: There are multiple types of communities for open source software projects. The
    user community is the people who are using the software to build things. The developer
    community is the group working on improving the library. Some projects have large
    intersections between these communities, but often the user community is much
    larger than the developer community. We are biased toward evaluating the developer
    community, but it’s important to ensure both are healthy. Software projects without
    enough developers will move slowly, and projects without users are frequently
    challenging to use by anyone except the developers.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 开源软件项目有多种类型的社区。用户社区是那些使用软件构建事物的人。开发者社区是致力于改进库的群体。一些项目的这两个社区之间有很大的交集，但通常用户社区远远大于开发者社区。我们倾向于评估开发者社区，但确保两者都健康也很重要。开发者不足的软件项目会进展缓慢，没有用户的项目通常对除了开发者以外的任何人都很难使用。
- en: In many situations, a large community with enough jerks (or a lead jerk) can
    be a much less enjoyable environment than a small community of nice folks. You
    are less likely to be productive if you are not enjoying your work. Sadly, figuring
    out if someone is a jerk or if a community has jerks in it is a complex problem.
    If people are generally rude on the mailing list or in the issue tracker, this
    can be a sign that the community is not as welcoming to new members.^([4](ch08.xhtml#id719))
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，一个拥有足够多混混（或者一个主要的混混）的大社区可能比一个由友善的人组成的小社区环境不那么令人愉快。如果你不喜欢你的工作，你就不太可能是高效的。可悲的是，判断某人是否是混混，或者某个社区是否存在混混，是一个复杂的问题。如果人们在邮件列表或问题跟踪器上通常表现粗鲁，这可能是社区对新成员不那么友好的迹象。（参见
    [4](ch08.xhtml#id719)）
- en: Note
  id: totrans-68
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Some projects, including one of Holden’s projects, have attempted to quantify
    some of these metrics using [sentiment analysis combined with random sampling](https://oreil.ly/ZLJ63),
    but this is a time-consuming process you can probably skip in most cases.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一些项目，包括 Holden 的一个项目，已经尝试使用情感分析结合随机抽样来量化这些指标，但这是一个耗时的过程，在大多数情况下你可能可以跳过。（参见 [sentiment
    analysis combined with random sampling](https://oreil.ly/ZLJ63)）
- en: Even with the nicest people, it can matter which institutions the contributors
    are associated with. If, for example, the top contributors are all grad students
    in the same research lab or work at the same company, the risk that the software
    is abandoned increases. This is not to say that single-company or even single-person
    open source projects are bad,^([5](ch08.xhtml#id720)) but you should adjust your
    expectations to match.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是最友善的人，贡献者所属的机构也可能很重要。例如，如果顶级贡献者都是同一个研究实验室的研究生或在同一家公司工作，软件被遗弃的风险会增加。这并不是说单一公司或甚至单个人的开源项目就是坏事，（参见
    [5](ch08.xhtml#id720)）但你应该调整你的期望来匹配这一点。
- en: Note
  id: totrans-71
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: If you are concerned a project does not meet your current level of maturity
    and you have a budget, this can be an excellent opportunity to support critical
    open source projects. Reach out to maintainers and see what they need; sometimes,
    it’s as simple as writing them a check for new hardware or hiring them to provide
    training for your company.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你担心某个项目不符合你当前的成熟度水平，并且你有预算，这可能是支持关键开源项目的绝佳机会。与维护者联系，看看他们需要什么；有时，简单地给他们写一张新硬件的支票或者雇佣他们为你的公司提供培训就可以了。
- en: Beyond whether people are nice in a community, it can be a positive sign if
    folks are using the project similarly to how you are considering using it. If,
    for example, you are the first person to apply Dask DataFrames to a new domain,
    even though Dask DataFrames themselves are very mature, you are more likely to
    find missing components than if other folks in the same area of application are
    already using Dask.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 除了一个社区中的人是否友好外，如果人们使用项目的方式与你考虑使用的方式类似，这也可能是一个积极的信号。例如，如果你是第一个将 Dask DataFrames
    应用到一个新领域的人，尽管 Dask DataFrames 本身非常成熟，你更有可能发现缺失的组件，而不是如果同一领域的其他人已经在使用 Dask。
- en: Dask-Specific Best Practices
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Dask 特定的最佳实践
- en: When it comes to Dask libraries, there are a number of Dask-specific best practices
    to look for. In general, libraries should not have too much work on the client
    node, and as much work as possible should be delegated to the workers. Sometimes
    the documentation will gloss over which parts happen where, and the fastest way
    to tell in our experience is to simply run the example code and look to see which
    tasks are getting scheduled on the workers. Relatedly, libraries should bring
    back only the smallest bits of data when possible. These best practices are slightly
    different from those for when you are writing your own Dask code, since you can
    know what your data size is beforehand and determine when local compute is the
    best path forward.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到Dask库时，有一些特定于Dask的最佳实践需要注意。总体来说，库不应在客户端节点上做太多的工作，尽可能多的工作应委托给工作节点。有时文档会掩盖哪些部分发生在哪里，而我们的经验中最快的方法是简单地运行示例代码，并查看哪些任务被安排在工作节点上。相关地，库在可能时应尽可能只返回最小的数据块。这些最佳实践与编写自己的Dask代码时略有不同，因为你可以预先知道你的数据大小，并确定何时本地计算是最佳路径。
- en: Up-to-Date Dependencies
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最新的依赖项
- en: If a project pins a dependency at a specific version, it is important that the
    version pinned does not have conflicts with the other packages you want to use
    and, even more importantly, does not have pinned insecure dependencies. What constitutes
    “up to date” is a matter of opinion. If you are the kind of developer who likes
    using the latest version of everything, you’ll probably be happiest with libraries
    that (mostly) provide minimum but not maximum versions. However, this can be mis­leading
    as, especially in the Python ecosystem, many libraries do not use [semantic ver­sioning](https://oreil.ly/RVVI7)—including
    Dask, which [uses CalVer](https://oreil.ly/fTTXZ)—and just because a project does
    not exclude a new version does not mean it will actually work with it.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个项目固定了依赖项的特定版本，重要的是固定的版本不会与你想使用的其他包发生冲突，更重要的是，不会固定不安全的依赖项。什么算是“最新”的是一个主观问题。如果你是喜欢使用一切最新版本的开发者，你可能会最喜欢（大部分）提供最低但不是最高版本的库。然而，这可能会误导，特别是在Python生态系统中，许多库并不使用[语义版本控制](https://oreil.ly/RVVI7)—包括Dask，它使用[CalVer](https://oreil.ly/fTTXZ)—而且仅仅因为一个项目不排除新版本并不意味着它实际上可以与之一起工作。
- en: Note
  id: totrans-78
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Some folks would call this quantitative, but in a CalVer-focused ecosystem,
    we believe this is more qualitative.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人可能会称之为定量的，但在一个以CalVer为中心的生态系统中，我们认为这更多是定性的。
- en: A good check, when considering adding a new library to an existing environment,
    is to try to run the new libraries test suite in the virtual environment that
    you plan to use it in (or in an equivalently configured one).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑将新库添加到现有环境中时，一个好的检查是尝试在你计划使用它的虚拟环境中（或等效配置的环境中）运行新库的测试套件。
- en: Documentation
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档
- en: While not every tool needs a book (although we do hope you find books useful),
    very few libraries are truly self-explanatory. On the low end, for simple libraries,
    a few examples or well-written tests can serve as a stand-in for proper documentation.
    Complete documentation is a good sign of overall project maturity. Not all documentation
    is created equal, and as the saying goes, documentation is normally out of date
    as soon as it is finished (if not before). A good exercise to do, before you dive
    all the way into a new library, is to open up the documentation and try to run
    the examples. If the getting-started examples don’t work (and you can’t figure
    out how to fix them), you will likely be in for a rough ride.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不是每个工具都需要一本书（尽管我们希望你会觉得书籍有用），但真正不需要解释的库却是非常少的。在低端，对于简单的库，一些示例或者写得很好的测试可以代替适当的文档。完整的文档是项目整体成熟的一个良好标志。并非所有的文档都是平等的，正如谚语所说，文档完成时通常已经过时了（如果不是之前）。在你完全深入了解一个新库之前，打开文档并尝试运行示例是一个很好的练习。如果入门示例无法运行（而且你无法弄清楚如何修复它们），你可能会遇到一些麻烦。
- en: Sometimes good documentation exists but is separate from the project (e.g.,
    in books), and some research may be required. If you find a project has good but
    not self-evident documentation, consider trying to improve the visibility of the
    documentation.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 有时存在很好的文档，但与项目分离（例如在书籍中），可能需要进行一些研究。如果发现一个项目有良好但不明显的文档，考虑尝试提高文档的可见性。
- en: Openness to Contributions
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对贡献的开放态度
- en: If you find the library is promising but not all the way there, it’s important
    to be able to contribute your improvements back to the library. This is good for
    the community, and besides, if you can’t upstream your improvements, upgrading
    to new versions will be more challenging.^([6](ch08.xhtml#id736)) Many projects
    nowadays have contribution guides that can give you an idea of how they like to
    work, but nothing beats a real test contribution. A great place to start with
    a project is fixing its documentation with the eyes of a newcomer, especially
    those getting-started examples from the previous section. Documentation often
    becomes out of sync in fast-moving projects, and if you find it difficult to get
    your documentation changes accepted, that is a strong indicator of how challenging
    it will be to contribute more complicated improvements later.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现某个库很有前途但还不够完善，能够贡献你的改进至关重要。这对社区是有益的，此外，如果不能将改进内容贡献给库，将来升级到新版本将更具挑战性。^([6](ch08.xhtml#id736))
    当今许多项目都有贡献指南，可以让你了解他们的工作方式，但是没有什么比真正的测试贡献更好。开始一个项目的好方法是以新手的视角修复其文档，特别是从前一节获取开始的示例。文档在快速发展的项目中往往会变得过时，如果你发现难以让你的文档变更被接受，这表明贡献更复杂的改进将会多么具有挑战性。
- en: Something to pay attention to is what the issue-reporting experience is like.
    Since almost no software is completely free of bugs, you may encounter an issue.
    Whether you have the energy or skills to fix the bug, sharing your experience
    is vital so it can be fixed. Sharing the bug can help the next person encountering
    the same challenge feel not alone, even if the issue is unresolved.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是问题报告体验。由于几乎没有软件是完全没有缺陷的，你可能会遇到问题。无论你是否有精力或技能修复这个错误，分享你的经验至关重要，以便修复它。分享这个问题可以帮助下一个遇到相同挑战的人感到不孤单，即使问题没有解决。
- en: Note
  id: totrans-87
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Pay attention to your experience when trying to report an issue. Most large
    projects with active communities will have some guidance to help you submit your
    issue and ensure it’s not duplicating a previous issue. If that guidance is lacking
    (or if the project has a smaller community associated with it), reporting an issue
    could be more challenging.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试报告问题时，要注意你的体验。大多数有活跃社区的大型项目都会有一些指导，帮助你提交问题并确保不重复之前的问题。如果缺乏这些指导（或者项目的社区规模较小），报告问题可能会更具挑战性。
- en: If you don’t have time to make your own test contribution, you can always take
    a look at a project’s pull requests (or equivalent) and see if the responses seem
    positive or antagonistic.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有时间进行自己的测试贡献，你总可以查看项目的拉取请求（或等效物），看看回应是否积极或对抗性。
- en: Extensibility
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可扩展性
- en: Not all changes to libraries necessarily need to be able to go upstream. If
    a library is appropriately structured, you can add additional functionality without
    changing the underlying code. Part of what makes Dask so powerful is its extensibility.
    For example, adding user-defined functions and aggregations allows Dask to be
    usable by many.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有对库的更改都必须能够上游。如果一个库结构合理，你可以在不更改基础代码的情况下添加额外的功能。Dask之所以强大的一部分原因就是它的可扩展性。例如，添加用户定义的函数和聚合允许Dask被许多人使用。
- en: Quantitative Metrics for Open Source Project Evaluation
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于开源项目评估的定量指标
- en: As software developers and data scientists, we often try to use quantitative
    metrics to make our decisions. Quantitative metrics for software, in both open
    source and closed source, is an area of active research, so we won’t be able to
    cover all of the quantitative metrics. A large challenge with all of the quantitative
    metrics for open source projects is that, especially once money gets involved,
    the metrics can be influenced. We instead recommend focusing on qualitative factors,
    which, while more difficult to measure, are also more difficult to game.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 作为软件开发人员和数据科学家，我们经常试图使用定量指标来做出决策。软件的定量指标，无论是开源还是闭源，都是一个活跃研究领域，因此我们无法覆盖所有的定量指标。所有开源项目的一个重大挑战是，特别是一旦涉及到资金，这些指标可能会受到影响。我们建议集中精力关注定性因素，虽然这些因素更难以衡量，但也更难以被操纵。
- en: Here we cover a few common metrics that folks commonly attempt to use, and there
    are many other frameworks for evaluating open source projects for use, including
    the [OSSM](https://oreil.ly/4lvK6), [OpenSSF Security Metrics](https://oreil.ly/Pcioq),
    and [many more](https://oreil.ly/6mmHu). Some of these frameworks ostensibly produce
    automated scores (like the OpenSSF), but in our experience, not only are the metrics
    collected gameable, they are often collected incorrectly.^([7](ch08.xhtml#id741))
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们涵盖了一些人们常常试图使用的常见指标，还有许多其他评估开源项目可用性的框架，包括[OSSM](https://oreil.ly/4lvK6)、[OpenSSF
    安全度量](https://oreil.ly/Pcioq)，和[更多](https://oreil.ly/6mmHu)。其中一些框架表面上产生了自动化评分（如
    OpenSSF），但根据我们的经验，这些度量不仅可被操纵，而且通常被错误地收集。^([7](ch08.xhtml#id741))
- en: Release History
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布历史
- en: Frequent releases can be a sign of a healthy library. If a project has not been
    released for a long time, you are more likely to run into conflicts with other
    libraries. For libraries built on top of tools like Dask, one detail to check
    is how many months (or days) it takes for a new version of the library to be released
    on top of the latest version of Dask. Some libraries do not do traditional releases,
    but rather suggest installing directly from the source repo. This is often a sign
    of a project earlier in the development phase, which can be more challenging to
    take on as a dependency.^([8](ch08.xhtml#id743))
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 频繁的发布可能是一个健康库的标志。如果一个项目很长时间没有发布过，你更有可能与其他库发生冲突。对于建立在诸如 Dask 之类的工具之上的库，要检查的一个细节是新版本库在最新版本
    Dask 之上发布需要多长时间（或者是多少天）。有些库不会进行传统的发布，而是建议直接从源代码仓库安装。这通常是一个项目处于开发早期阶段的迹象，这样的项目作为一个依赖项更具挑战性。^([8](ch08.xhtml#id743))
- en: Release history is one of the easiest metrics to game, as all it requires is
    the developers making a release. Some development styles will automatically create
    releases after every successful check-in, which in our opinion is an anti-pattern,^([9](ch08.xhtml#id744))
    as you often want some additional level of human testing or checking before a
    full release.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 发布历史是最容易被操纵的指标之一，因为它只需要开发人员发布一个版本。某些开发风格会在每次成功提交后自动创建发布版本，而在我们看来，这通常是一种反模式，^([9](ch08.xhtml#id744))
    因为你通常希望在全面发布之前进行一些额外的人工测试或检查。
- en: Commit Frequency (and Volume)
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提交频率（和数量）
- en: Another popular metric people consider is commit frequency or volume. This metric
    is far from perfect, as the frequency and volume can vary widely depending on
    coding styles, which lack correlation with software quality. For example, developers
    who tend to squash commits can have lower commit volume, whereas developers who
    use rebases primarily will have a higher volume of commits.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 人们考虑的另一个流行指标是提交频率或数量。这个指标远非完美，因为频率和数量可能会因编码风格而异，而编码风格与软件质量没有相关性。例如，倾向于压缩提交的开发人员可能会具有较低的提交数量，而主要使用
    rebase 的开发人员则会有更高的提交数量。
- en: On the flip side, the complete lack of recent commits can be a sign that a project
    has become abandoned, and if you decide to use it, you will end up having to maintain
    a fork.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，最近提交完全缺乏可能是项目已经被抛弃的迹象，如果你决定使用它，最终会不得不维护一个分支。
- en: Library Usage
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 库的使用情况
- en: One of the simplest metrics to check is if people are using a package, which
    you can see by looking at the installs. You can check PyPI package install stats
    on the [PyPI Stats website](https://oreil.ly/1HHL8) (see [Figure 8-1](#dask-kubernetes-install-stats))
    or on [Google’s BigQuery](https://oreil.ly/83RIO), and conda installs using the
    [condastats library](https://oreil.ly/4STsP).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的指标之一是人们是否在使用某个包，你可以通过查看安装情况来判断。你可以在[PyPI 统计网站](https://oreil.ly/1HHL8)（见[图 8-1](#dask-kubernetes-install-stats)）或[Google
    的 BigQuery](https://oreil.ly/83RIO)上检查 PyPI 包的安装统计数据，以及使用[condastats 库](https://oreil.ly/4STsP)检查
    conda 安装情况。
- en: Unfortunately, installation counts are a noisy metric, as PyPI downloads can
    come from anything from CI pipelines to even someone spinning up a new cluster
    with the library installed but never used. Not only is this metric unintentionally
    noisy, but the same techniques can also be used to increase the numbers artificially.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，安装计数是一个嘈杂的指标，因为 PyPI 下载可能来自于任何地方，从 CI 管道到甚至有人启动了一个安装了库但从未使用过的新集群。这个指标不仅是无意的嘈杂，而且相同的技术也可以被用来人为地增加数字。
- en: Instead of depending heavily on the number of package installs, we like to see
    if we can find examples of people using the libraries—such as by searching for
    imports on GitHub or [Sourcegraph](https://oreil.ly/FrPTE). For example, we can
    try to get an approximate number of people using Streamz or cuDF with Dask by
    searching [`(file:requirements.txt OR file:setup.py) cudf AND dask`](https://oreil.ly/gQWZY)
    and [`(file:requirements.txt OR file:setup.py) streamz AND dask`](https://oreil.ly/tYIJu)
    with Sourcegraph, which yields 72 and 33, respectively. This captures only a few,
    but when we compare this to the same query for Dask (which yields 500+), it suggests
    that Streamz has lower usage than cuDF in the Dask ecosystem.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不希望过于依赖包安装数量，而是希望能找到人们使用库的实际例子，比如在 GitHub 或 [Sourcegraph](https://oreil.ly/FrPTE)
    上搜索导入情况。例如，我们可以尝试通过在 Sourcegraph 上搜索 [`(file:requirements.txt OR file:setup.py)
    cudf AND dask`](https://oreil.ly/gQWZY) 和 [`(file:requirements.txt OR file:setup.py)
    streamz AND dask`](https://oreil.ly/tYIJu) 来获取使用 Streamz 或 cuDF 与 Dask 的人数近似值，分别为
    72 和 33。这只能捕捉到一部分情况，但当我们将其与 Dask 的相同查询比较时（得到 500+），这表明在 Dask 生态系统中，Streamz 的使用率低于
    cuDF。
- en: '![spwd 0801](Images/spwd_0801.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![spwd 0801](Images/spwd_0801.png)'
- en: Figure 8-1\. Dask Kubernetes install stats from PyPI Stats
  id: totrans-106
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-1\. Dask Kubernetes 安装统计数据来自 PyPI 统计
- en: Looking for examples of people using a library has its limitations, especially
    with data processing. Since data and machine learning pipelines are not as frequently
    open sourced, finding examples can be harder for libraries used for those purposes.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找人们使用某个库的例子有其局限性，特别是在数据处理方面。由于数据和机器学习管道并不经常开源，因此对于用于这些目的的库，找到例子可能更加困难。
- en: Another proxy for usage you can look at is the frequency of issues or mailing
    list posts. If a project is hosted on something like GitHub, stars can also be
    an interesting way of measuring usage—but since people can now buy GitHub stars
    just like Instagram likes (as shown in [Figure 8-2](#fig_ghstarsforsale)), you
    shouldn’t weigh this metric too heavily.^([10](ch08.xhtml#id746))
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可以参考使用情况的指标是问题或邮件列表帖子的频率。如果项目托管在类似 GitHub 的平台上，星星数量也可以作为衡量使用情况的一种有趣方式——但由于人们现在可以像购买
    Instagram 点赞一样购买 GitHub 星星（如图 [8-2](#fig_ghstarsforsale) 所示），因此不应过分依赖此指标。^([10](ch08.xhtml#id746))
- en: Even setting aside people purchasing stars, what constitutes a project worth
    starring varies from person to person. Some projects will, while not purchasing
    stars, ask many individuals to star their projects, which can quickly inflate
    this metric.^([11](ch08.xhtml#id748))
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 即使不考虑购买星星的情况，什么样的项目值得加星也因人而异。一些项目会请求许多人加星，虽然没有购买星星，但这可能会快速增加此指标。^([11](ch08.xhtml#id748))
- en: '![spwd 0802](Images/spwd_0802.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![spwd 0802](Images/spwd_0802.png)'
- en: Figure 8-2\. Someone selling GitHub stars
  id: totrans-111
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-2\. 有人在出售 GitHub 星星
- en: Code and Best Practices
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码和最佳实践
- en: Software testing is second nature to many software engineers, but sometimes
    projects are created hastily without tests. If a project does not have tests,
    and tests that are mostly passing, then it’s much harder to have confidence in
    how the project will behave. Even in the most professional of projects, corners
    sometimes get cut when it comes to testing, and adding more tests to a project
    can be a great way to ensure that it continues to function in the ways you need
    it to. A good question is if the tests cover the parts that are important to you.
    If a project does have relevant tests, the next natural question is if they are
    being used. If it’s too difficult to run tests, human nature often takes over,
    and the tests may not be run. So a good step is to see if you can run the tests
    in the project.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 软件测试对许多软件工程师来说是本能反应，但有时项目是匆忙创建的，没有测试。如果一个项目没有测试，或者测试大部分不通过，那么很难对项目的行为有信心。即使是最专业的项目，有时在测试方面也会偷懒，增加更多的测试是确保项目继续按您需要的方式运行的好方法。一个好问题是测试是否覆盖了对您重要的部分。如果一个项目确实有相关的测试，下一个自然的问题是它们是否被使用。如果运行测试太困难，人性往往会占上风，测试可能就不会被运行。因此，一个好的步骤是尝试运行项目中的测试。
- en: Note
  id: totrans-114
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Test coverage numbers can be especially informative, but unfortunately, for
    projects built on top of systems like Dask,^([12](ch08.xhtml#id749)) getting accurate
    test coverage information is a challenge. Instead, a more qualitative approach
    is often needed here. In single-machine systems, test coverage can be an excellent
    automatically computed quantitative metric.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 测试覆盖率数字可以是特别有信息量的，但不幸的是，对于建立在像 Dask 这样的系统之上的项目，^([12](ch08.xhtml#id749)) 获得准确的测试覆盖信息是一个挑战。在单机系统中，测试覆盖率可以是一个很好的自动计算的定量指标。
- en: We believe that most good libraries will have some form of continuous integration
    (CI) or automated testing, including proposed changes (or when a pull request
    is created). You can check if a GitHub project has continuous integration by looking
    at the pull-requests tab. CI can be very helpful for reducing bugs overall, especially
    regressions.^([13](ch08.xhtml#id752)) Historically, use of CI was somewhat a matter
    of project preference, but with the creation of free tools, including GitHub actions,
    many multi-person software projects now have some form of CI. This is a common
    software engineering practice, and we consider it essential for libraries that
    we depend on.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们认为大多数优秀的库都会有某种形式的持续集成（CI）或自动化测试，包括对提议更改的检查（或创建拉取请求时）。您可以通过查看拉取请求标签来检查 GitHub
    项目是否有持续集成。CI 对于总体上减少错误尤其是回归错误非常有帮助。^([13](ch08.xhtml#id752)) 历史上，使用 CI 在某种程度上取决于项目的偏好，但随着包括
    GitHub actions 在内的免费工具的创建，许多多人软件项目现在都有某种形式的 CI。这是一种常见的软件工程实践，我们认为对于我们依赖的库来说是必不可少的。
- en: Static typing is frequently considered a programming best practice, though there
    are some detractors. While the arguments for and against static types inside data
    pipelines are complex, we believe *some* typing at the library level is something
    one should expect.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 静态类型经常被认为是编程的最佳实践，尽管也有一些反对者。虽然关于数据流水线内部的静态类型的争论是复杂的，但我们认为在库级别至少应该期待*一些*类型。
- en: Conclusion
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: When building data (or other) applications on Dask, you will likely need many
    different tools from the ecosystem. The ecosystem evolves at different rates,
    with some parts requiring more investment by you before you can use them effectively.
    Choosing the right tools, and transitively the right people, is key to whether
    your project will succeed and, in our experience, to how enjoyable your work will
    be. It’s important to remember that these decisions are not set in stone, but
    changing a library tends to get harder the longer you’ve been using it in your
    project. In this chapter, you’ve learned how to evaluate the different components
    of the ecosystem for project maturity. You can use this knowledge to decide when
    to use a library versus writing the functionality you need yourself.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建基于 Dask 的数据（或其他）应用程序时，您可能需要来自生态系统的许多不同工具。生态系统以不同的速度发展，其中一些部分需要更多的投资，才能有效地使用它们。选择正确的工具，以及因果关系正确的人员，是决定您的项目是否成功以及在我们的经验中，您的工作愉快程度的关键因素。重要的是要记住，这些决定并不是一成不变的，但随着在项目中使用库的时间越长，更改库变得更加困难。在本章中，您已经学会了如何评估生态系统不同组件的项目成熟度。您可以利用这些知识来决定何时使用库而不是自己编写所需的功能。
- en: ^([1](ch08.xhtml#id712-marker)) Although, in many ways, distributed systems
    have evolved to overcome their unreliable components. For example, fault tolerance
    is something a single machine cannot achieve but distributed systems can accomplish
    with replication.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch08.xhtml#id712-marker)) 尽管在许多方面，分布式系统已经发展到可以克服其不可靠的组件。例如，容错性是单台机器无法实现的，但分布式系统可以通过复制来实现。
- en: ^([2](ch08.xhtml#id714-marker)) Sacrificing correctness means producing incorrect
    results. An example correctness issue is `set_index` in Dask-on-Ray causing rows
    to disappear; this issue took about a month to fix, which in our opinion is quite
    reasonable [given the challenges in reproducing it](https://oreil.ly/P1L1W). Sometimes
    correctness fixes, like security fixes, can result in slower processing; for example,
    MongoDB’s defaults are very fast but can lose data.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch08.xhtml#id714-marker)) 牺牲正确性意味着产生不正确的结果。一个正确性问题的例子是 Dask-on-Ray 中的
    `set_index` 导致行消失；这个问题花了大约一个月的时间来修复，在我们看来是相当合理的，[考虑到复现这个问题的挑战](https://oreil.ly/P1L1W)。有时，像安全修复一样，正确性修复可能导致处理速度变慢；例如，MongoDB
    的默认设置非常快，但可能会丢失数据。
- en: ^([3](ch08.xhtml#id718-marker)) We are uncertain of exactly whom or where this
    quote originates from; it’s appeared in the ASF director’s position statement
    as well as in the Apache Way documentation.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch08.xhtml#id718-marker)) 我们不确定这句引文确切的来源和出处；它出现在ASF董事的立场声明中，也出现在Apache
    Way文档中。
- en: ^([4](ch08.xhtml#id719-marker)) The Linux kernel is a classic example of a somewhat
    [more challenging community](https://oreil.ly/tXjhn).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch08.xhtml#id719-marker)) Linux 内核是一个典型的稍微[更具挑战性的社区](https://oreil.ly/tXjhn)的例子。
- en: ^([5](ch08.xhtml#id720-marker)) One example of a small community developing
    a very popular and successful project is homebrew.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: ^([5](ch08.xhtml#id720-marker)) 一个小社区开发了一个非常受欢迎和成功的项目的例子是homebrew。
- en: ^([6](ch08.xhtml#id736-marker)) Changes from upstream open source that you are
    unable to contribute back mean that you need to reapply those changes every time
    you upgrade. While modern tools like Git simplify the mechanics of this a little
    bit, it can be a time-consuming process.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: ^([6](ch08.xhtml#id736-marker)) 从上游开源项目中无法贡献回来的更改意味着每次升级都需要重新应用这些更改。虽然现代工具如Git简化了这一过程的机制，但这可能是一个耗时的过程。
- en: ^([7](ch08.xhtml#id741-marker)) For example, the OpenSSF reports that Apache
    Spark has unsigned releases, but all of the releases are signed. Projects that
    are highly critical (like log4j) incorrectly have low criticality scores, illustrating
    some of the limits of these metrics.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: ^([7](ch08.xhtml#id741-marker)) 例如，OpenSSF 报告称 Apache Spark 有未签名的发布版本，但所有发布版本均已签名。像
    log4j 这样的关键项目错误地被低估了关键性评分，说明这些指标的局限性。
- en: ^([8](ch08.xhtml#id743-marker)) In these cases it’s good to pick a tag or a
    commit to install from so you don’t end up with mismatched versions.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: ^([8](ch08.xhtml#id743-marker)) 在这些情况下，最好选择一个标签或提交来安装，以免出现版本不匹配的情况。
- en: ^([9](ch08.xhtml#id744-marker)) Snapshot artifacts are OK.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: ^([9](ch08.xhtml#id744-marker)) 快照工件是可以接受的。
- en: ^([10](ch08.xhtml#id746-marker)) There are some tools that can help you dig
    deeper into the star data, including [ghrr](https://oreil.ly/eKBdi), but we still
    think it’s better to not spend too much time on or give too much weight to stars.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: ^([10](ch08.xhtml#id746-marker)) 有一些工具可以帮助你更深入地挖掘星级数据，包括[ghrr](https://oreil.ly/eKBdi)，但我们仍认为不要花太多时间或者给予星级太多的权重。
- en: ^([11](ch08.xhtml#id748-marker)) For example, we might ask you to star our [example
    repo](https://oreil.ly/u6S0H), and by doing this, we (hopefully) increase the
    number of stars without actually needing to increase our quality.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: ^([11](ch08.xhtml#id748-marker)) 例如，我们可能要求你为我们的[示例仓库](https://oreil.ly/u6S0H)点赞，通过这样做，我们（希望）能增加星级数量，而无需实际上提高我们的质量。
- en: ^([12](ch08.xhtml#id749-marker)) This is because most of the Python tools that
    check code coverage assume that there is only one Python VM they need to attach
    to and see what parts of code are executed. However, in a distributed system,
    this is no longer the case, and many of these automated tools do not work.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: ^([12](ch08.xhtml#id749-marker)) 这是因为大多数检查代码覆盖率的Python工具假定只有一个Python虚拟机需要附加并查看执行的代码部分。然而，在分布式系统中，情况不再如此，许多这些自动化工具无法正常工作。
- en: ^([13](ch08.xhtml#id752-marker)) Where something that used to work stops working
    in a newer release.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: ^([13](ch08.xhtml#id752-marker)) 当某些在较新版本中工作正常的东西停止工作时。
