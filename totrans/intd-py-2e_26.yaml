- en: Appendix B. Install Python 3
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 B. 安装Python 3
- en: 'Most of the examples in this book were written and tested with Python 3.7,
    the most recent stable version at the time of writing. The [What’s New in Python
    page](https://docs.python.org/3/whatsnew) presents what was added in each version.
    There are many sources of Python and many ways to install a new version. In this
    appendix, I describe a few of these ways:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中大多数示例都是使用Python 3.7编写和测试的，这是当时最新的稳定版本。[Python的新功能页面](https://docs.python.org/3/whatsnew)介绍了每个版本的新增内容。有许多Python的来源和安装方式。在本附录中，我描述了其中的一些方式：
- en: A standard installation downloads Python from *python.org*, and adds the helper
    programs `pip` and `virtualenv`.
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准安装会从*python.org*下载Python，并添加辅助程序`pip`和`virtualenv`。
- en: If your work is heavily scientific, you may prefer to get Python bundled with
    many scientific packages from Anaconda and use its package installer `conda` instead
    of `pip`.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你的工作涉及科学领域，你可能更喜欢从Anaconda获取预装有许多科学包的Python，并使用其包安装程序`conda`而不是`pip`。
- en: Windows doesn’t have Python at all, and macOS, Linux, and Unix tend to have
    old versions. Until they catch up, you may need to install Python 3 yourself.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Windows根本没有安装Python，而macOS、Linux和Unix则倾向于安装旧版本。在它们赶上之前，你可能需要自行安装Python 3。
- en: Check Your Python Version
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查你的Python版本
- en: 'In a terminal or terminal window, type `python -V`:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端或终端窗口中输入`python -V`：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Depending on your operating system, if you don’t have Python or the operating
    system can’t find it, you’ll get some error message like *command not found*.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的操作系统，如果没有安装Python或操作系统找不到它，你将会收到一些类似*command not found*的错误消息。
- en: If you do have Python and it’s version 2, you may want to install Python 3—either
    system wide, or just for yourself in a virtualenv (see [“Use virtualenv”](ch19.html#virtualenv),
    or [“Install virtualenv”](#install_virtualenv)). In this appendix, I show how
    to install Python 3 system wide.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经安装了Python且是版本 2，你可能想要安装Python 3 —— 可以是系统范围的，也可以只安装在虚拟环境中（见[“使用virtualenv”](ch19.html#virtualenv)，或者[“安装virtualenv”](#install_virtualenv)）。在本附录中，我展示了如何在系统范围内安装Python
    3。
- en: Install Standard Python
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装标准Python
- en: 'Go to the official Python [download page](https://www.python.org/downloads)
    with your web browser. It tries to guess your operating system and present the
    appropriate choices, but if it guesses wrong, you can use these:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 打开官方Python[下载页面](https://www.python.org/downloads)。它会尝试猜测你的操作系统并显示适当的选择，但如果猜错了，你可以使用以下信息：
- en: '[Python Releases for Windows](https://www.python.org/downloads/windows)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Windows的Python发布版本](https://www.python.org/downloads/windows)'
- en: '[Python Releases for macOS](https://www.python.org/downloads/mac-osx)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[macOS下的Python发布版本](https://www.python.org/downloads/mac-osx)'
- en: '[Python Source Releases (Linux and Unix)](https://www.python.org/downloads/source)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python源代码发布版（Linux和Unix）](https://www.python.org/downloads/source)'
- en: You’ll see a page similar to that shown in [Figure B-1](#fig_download_top).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到一个类似于[图 B-1](#fig_download_top)所示的页面。
- en: '![inp2 ab01](assets/inp2_ab01.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![inp2 ab01](assets/inp2_ab01.png)'
- en: Figure B-1\. Sample download page
  id: totrans-17
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: B-1\. 示例下载页面
- en: If you click the yellow Download Python 3.7.3 button, it will download that
    version for your operating system. If you’d like to learn a little about it first,
    click the blue link text Python 3.7.3 in the first column of the table at the
    bottom, under Release version. This takes you to an information page like the
    one shown in [Figure B-2](#fig_download_specific).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你点击黄色的Download Python 3.7.3按钮，它将为你的操作系统下载该版本。如果你想先了解一些关于它的信息，点击表格底部第一列中蓝色链接文字Python
    3.7.3，这会带你到一个类似于[图 B-2](#fig_download_specific)所示的信息页面。
- en: '![inp2 ab02](assets/inp2_ab02.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![inp2 ab02](assets/inp2_ab02.png)'
- en: Figure B-2\. Detail page for download
  id: totrans-20
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: B-2\. 下载详细页面
- en: You need to scroll down the page to see the actual download links ([Figure B-3](#fig_download_payload)).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要向下滚动页面才能看到实际的下载链接（[图 B-3](#fig_download_payload)）。
- en: '![inp2 ab03](assets/inp2_ab03.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![inp2 ab03](assets/inp2_ab03.png)'
- en: Figure B-3\. Bottom of page offering downloads
  id: totrans-23
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: B-3\. 页面底部提供下载
- en: macOS
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: macOS
- en: Click the [macOS 64-bit/32-bit installer](https://oreil.ly/54lG8) link to download
    a Mac *.pkg* file. Double-click it to see an introductory dialog box ([Figure B-4](#fig_install_mac_1)).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 点击[macOS 64位/32位安装程序](https://oreil.ly/54lG8)链接来下载一个Mac的*.pkg*文件。双击打开它，你会看到一个介绍性的对话框（[图 B-4](#fig_install_mac_1)）。
- en: '![inp2 ab04](assets/inp2_ab04.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![inp2 ab04](assets/inp2_ab04.png)'
- en: Figure B-4\. Mac install dialog 1
  id: totrans-27
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: B-4\. Mac安装对话框 1
- en: Click Continue. You’ll go through a succession of other dialog boxes.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 点击继续。你将会通过一系列其他对话框。
- en: When it’s all done, you should see the dialog shown in [Figure B-5](#fig_install_mac_9).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当一切完成时，您应该看到 [图 B-5](#fig_install_mac_9) 中显示的对话框。
- en: '![inp2 ab05](assets/inp2_ab05.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![inp2 ab05](assets/inp2_ab05.png)'
- en: Figure B-5\. Mac install dialog 9
  id: totrans-31
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 B-5\. Mac 安装对话框 9
- en: Python 3 will be installed as */usr/local/bin/python3*, leaving any existing
    Python 2 on your computer unchanged.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Python 3 将安装为 */usr/local/bin/python3*，不会更改计算机上的任何现有 Python 2。
- en: Windows
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows
- en: Windows has never included Python, but recently made it easier to install. The
    [May 2019 update](https://oreil.ly/G8Abf) for Windows 10 includes *python.exe*
    and *python3.exe* files. These aren’t the Python interpreter, but links to a new
    [Python 3.7 page](https://oreil.ly/Lky_h) at the Microsoft Store. You can use
    this link to download and install Python in the same way you get other Windows
    software.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 从未包含 Python，但最近已经更容易安装。Windows 10 的 [2019 年 5 月更新](https://oreil.ly/G8Abf)
    包括 *python.exe* 和 *python3.exe* 文件。这些不是 Python 解释器，而是指向 Microsoft Store 的新 [Python
    3.7 页面](https://oreil.ly/Lky_h) 的链接。您可以使用此链接下载和安装 Python，方式与获取其他 Windows 软件相同。
- en: 'Or you can download and install Python from the official Python site:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 或者您可以从官方 Python 网站下载并安装 Python：
- en: '[Windows x86 MSI installer (32-bit)](http://bit.ly/win-x86)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Windows x86 MSI 安装程序（32 位）](http://bit.ly/win-x86)'
- en: '[Windows x86-64 MSI installer (64-bit)](http://bit.ly/win-x86-64)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Windows x86-64 MSI 安装程序（64 位）](http://bit.ly/win-x86-64)'
- en: 'To determine whether you have a 32-bit or 64-bit version of Windows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定您的 Windows 版本是 32 位还是 64 位：
- en: Click the Start button.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单击“开始”按钮。
- en: Right-click Computer.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右键单击“计算机”。
- en: Click Properties and find the bit value.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单击属性并查找位数值。
- en: Click the appropriate installer (*.msi* file). After it’s downloaded, double-click
    it and follow the installer directions.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 单击适当的安装程序（*.msi* 文件）。下载完成后，双击并按照安装程序的指示操作。
- en: Linux or Unix
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux 或 Unix
- en: 'Linux and Unix users get a choice of compressed source formats:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 和 Unix 用户可以选择压缩的源代码格式：
- en: '[XZ compressed source tarball](http://bit.ly/xz-tarball)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[XZ 压缩源代码压缩包](http://bit.ly/xz-tarball)'
- en: '[Gzipped source tarball](http://bit.ly/gzip-tarball)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Gzipped 源代码压缩包](http://bit.ly/gzip-tarball)'
- en: Download either one. Decompress it by using `tar xJ` (*.xz* file) or `tar xz`
    (*.tgz* file) and then run the resulting shell script.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 选择其中一个进行下载。通过使用 `tar xJ` (*.xz* 文件) 或 `tar xz` (*.tgz* 文件) 解压缩它，然后运行生成的 shell
    脚本。
- en: Install the pip Package Manager
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 pip 包管理器
- en: 'Beyond the standard Python installation, two tools are almost essential for
    Python development: `pip` and `virtualenv`.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 除了标准 Python 安装外，对于 Python 开发，两个工具几乎是必不可少的：`pip` 和 `virtualenv`。
- en: The `pip` package is the most popular way to install third-party (nonstandard)
    Python packages. It has been annoying that such a useful tool isn’t part of standard
    Python and that you’ve needed to download and install it yourself. As a friend
    of mine used to say, it’s a cruel hazing ritual. The good news is that `pip` is
    a standard part of Python, starting with the 3.4 release.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip` 包是安装非标准 Python 包的最流行方式。一个如此有用的工具没有成为标准 Python 的一部分，需要你自己下载和安装，实在令人恼火。正如我的一个朋友曾经说过的，这是一种残酷的入门仪式。好消息是，从
    3.4 版本开始，`pip` 已经成为 Python 的标准部分。'
- en: 'If you have Python 3 but only the Python 2 version of `pip`, here’s how to
    get the Python 3 version on Linux or macOS:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您安装了 Python 3，但只有 Python 2 版本的 `pip`，那么在 Linux 或 macOS 上获取 Python 3 版本的方法如下：
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This installs `pip-3.3` in the `bin` directory of your Python 3 installation.
    Then, use `pip-3.3` to install third-party Python packages rather than Python
    2’s `pip`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在您的 Python 3 安装的 `bin` 目录中安装 `pip-3.3`。然后，使用 `pip-3.3` 安装第三方 Python 包，而不是
    Python 2 的 `pip`。
- en: Install virtualenv
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 virtualenv
- en: Often used with `pip`, the `virtualenv` program is a way to install Python packages
    in a specified directory (folder) to avoid interactions with any preexisting system
    Python packages. This lets you use whatever Python goodies you want, even if you
    don’t have permission to change the existing installation.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 经常与 `pip` 一起使用，`virtualenv` 程序是在指定目录（文件夹）中安装 Python 包的一种方式，以避免与任何现有系统 Python
    包的交互。这使您可以使用任何您想要的 Python 工具，即使您没有更改现有安装的权限。
- en: 'Some good guides to `pip` and `virtualenv` are:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一些关于 `pip` 和 `virtualenv` 的好指南包括：
- en: '[A Non-Magical Introduction to Pip and Virtualenv for Python Beginners](http://bit.ly/jm-pip-vlenv)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python 初学者的 Pip 和 Virtualenv 非神秘入门](http://bit.ly/jm-pip-vlenv)'
- en: '[The Hitchhiker’s Guide to Packaging: Pip](http://bit.ly/hhgp-pip)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[打包指南：Pip 的《银河系漫游指南》](http://bit.ly/hhgp-pip)'
- en: Other Packaging Solutions
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他打包解决方案
- en: As you’ve seen, Python’s packaging techniques vary, and none work well for every
    problem. The [PyPA](https://www.pypa.io) (Python Packaging Authority) is a volunteer
    working group (not part of the official Python development core group) that’s
    trying to simplify Python packaging. The group wrote the [Python Packaging User’s
    Guide](https://packaging.python.org), which discusses problems and solutions.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经看到，Python 的打包技术各有千秋，没有一种方法适用于所有问题。[PyPA](https://www.pypa.io)（Python 打包管理权威组织）是一个志愿工作团队（并非官方
    Python 开发核心组的一部分），旨在简化 Python 的打包过程。该团队编写了[Python 打包用户指南](https://packaging.python.org)，讨论了相关问题及其解决方案。
- en: 'The most popular tools are `pip` and `virtualenv`, and I’ve used these throughout
    this book. If they fall short for you, or if you like trying new things, here
    are some alternatives:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最流行的工具是 `pip` 和 `virtualenv`，我在本书中一直使用它们。如果它们对你来说不够用，或者你喜欢尝试新事物，这里还有一些替代方案：
- en: '[`pipenv`](https://pipenv.readthedocs.io) combines `pip` and `virtualenv` and
    adds more features. See also some [criticism](https://oreil.ly/NQ3pH) and threaded
    [discussion](https://oreil.ly/psWa-).'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`pipenv`](https://pipenv.readthedocs.io) 结合了 `pip` 和 `virtualenv` 并添加了更多功能。还可以参考一些
    [批评](https://oreil.ly/NQ3pH) 和相关的 [讨论](https://oreil.ly/psWa-)。'
- en: '[`poetry`](https://poetry.eustace.io/) is a rival that addresses some of the
    problems with `pipenv`.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`poetry`](https://poetry.eustace.io/) 是一个竞争对手，解决了 `pipenv` 的一些问题。'
- en: But the most prominent packaging alternative, especially for scientific and
    data-heavy applications, is `conda`. You can get it as part of the Anaconda Python
    distribution, which I talk about next, or by itself ([“Install Anaconda’s Package
    Manager conda”](#install_conda)).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 但是最流行的打包工具，尤其是在科学和数据密集型应用中，是 `conda`。你可以作为 Anaconda Python 发行版的一部分获得它，下面我将详细介绍，或者单独获取它（[“安装
    Anaconda 的包管理器 conda”](#install_conda)）。
- en: Install Anaconda
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Anaconda
- en: '[Anaconda](https://docs.anaconda.com/anaconda) is an all-in-one distribution
    with an emphasis on science. The latest version, Anaconda3, includes Python 3.7
    and its standard library as well as the R language for data science. Other goodies
    include libraries that we’ve talked about in this book: `beautifulsoup4`, `flask`,
    `ipython`, `matplotlib`, `nose`, `numpy`, `pandas`, `pillow`, `pip`, `scipy`,
    `tables`, `zmq`, and many others. It also has a cross-platform installation program
    called `conda`, which I get to in the next section.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[Anaconda](https://docs.anaconda.com/anaconda) 是一个以科学为重点的一体化发行版。最新版本 Anaconda3
    包括 Python 3.7 及其标准库，以及用于数据科学的 R 语言。其他有用的库包括我们在本书中讨论过的：`beautifulsoup4`, `flask`,
    `ipython`, `matplotlib`, `nose`, `numpy`, `pandas`, `pillow`, `pip`, `scipy`,
    `tables`, `zmq` 等。它还有一个跨平台的安装程序称为 `conda`，我将在下一节介绍。'
- en: 'To install Anaconda3, go to the [download page](https://www.anaconda.com/distribution)
    for the Python 3 versions. Click the appropriate link for your platform (version
    numbers might have changed since this was written, but you can figure it out):'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Anaconda3，请访问[下载页面](https://www.anaconda.com/distribution)获取 Python 3 版本。点击适合你平台的链接（版本号可能会有所变化，但你可以找到对应的版本）：
- en: The macOS installer will install everything to the *anaconda* directory under
    your home directory.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS 安装程序将所有内容安装到你主目录下的 *anaconda* 目录。
- en: For Windows, double-click the *.exe* file after it downloads.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Windows，在下载完成后，双击 *.exe* 文件。
- en: For Linux, choose the 32-bit version or the 64-bit version. After it has downloaded,
    execute it (it’s a big shell script).
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Linux，选择32位或64位版本。下载完成后，执行它（这是一个大型的 Shell 脚本）。
- en: Note
  id: totrans-71
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Ensure that the name of the file you download starts with *Anaconda3*. If it
    starts with just *Anaconda*, that’s the Python 2 version.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你下载的文件名以 *Anaconda3* 开头。如果只以 *Anaconda* 开头，那就是 Python 2 版本。
- en: Anaconda installs everything in its own directory (*anaconda* under your home
    directory). This means that it won’t interfere with any versions of Python that
    might already be on your computer. It also means that you don’t need any special
    permission (account names like `admin` or `root`) to install it either.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda 将所有内容安装在自己的目录下（在你的主目录下的 *anaconda* 目录）。这意味着它不会干扰你计算机上可能已安装的任何 Python
    版本。同时也意味着你无需特殊权限（如 `admin` 或 `root` 账户）来安装它。
- en: Anaconda now includes more than 1,500 open source packages. Visit the Anaconda
    [docs](https://docs.anaconda.com/anaconda/packages/pkg-docs) page and click the
    link for your platform and Python version.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda 现在包含超过1500个开源包。访问 Anaconda [文档](https://docs.anaconda.com/anaconda/packages/pkg-docs)
    页面，点击适合你平台和 Python 版本的链接。
- en: After installing Anaconda3, you can see what Santa put on your computer by typing
    the command `conda list`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完 Anaconda3 后，你可以输入命令 `conda list` 查看圣诞老人给你装了什么东西在你的电脑上。
- en: Install Anaconda’s Package Manager conda
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Anaconda 的包管理器 conda
- en: The Anaconda developers built [`conda`](https://docs.conda.io) to address the
    problems they’ve seen with `pip` and other tools. `pip` is a Python package manager,
    but `conda` works with any software and language. `conda` also avoids the need
    for something like `virtualenv` to keep installations from stepping on one another.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda 的开发者们构建了 [`conda`](https://docs.conda.io) 来解决他们在使用 `pip` 和其他工具时遇到的问题。`pip`
    是一个 Python 包管理器，但 `conda` 可以与任何软件和语言一起使用。`conda` 还避免了像 `virtualenv` 这样的工具，以避免安装互相冲突的问题。
- en: If you installed the Anaconda distribution, you already have the `conda` program.
    If not, you can get Python 3 and `conda` from the [miniconda](https://docs.conda.io/en/latest/miniconda.html)
    page. As with Anaconda, make sure the file you download starts with `Miniconda3`;
    if it starts with `Miniconda` alone, it’s the Python 2 version.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你安装了 Anaconda 发行版，你已经拥有 `conda` 程序了。如果没有，你可以从 [miniconda](https://docs.conda.io/en/latest/miniconda.html)
    页面获取 Python 3 和 `conda`。和 Anaconda 一样，确保你下载的文件以 `Miniconda3` 开头；如果只是以 `Miniconda`
    开头，那就是 Python 2 版本。
- en: '`conda` works with `pip`. Although it has its own public [package repository](https://anaconda.org/anaconda/repo),
    commands like `conda search` will also search the [PyPi repository](http://pypi.python.org).
    If you have problems with `pip`, `conda` might be a good alternative.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`conda` 可以和 `pip` 一起工作。虽然它有自己的公共 [包仓库](https://anaconda.org/anaconda/repo)，但像
    `conda search` 这样的命令也会搜索 [PyPi 仓库](http://pypi.python.org)。如果你在使用 `pip` 时遇到问题，`conda`
    可能是一个不错的选择。'
