["```py\n$ dd if=/dev/zero of=/dev/sdc count=10 bs=100M\n10+0 records in\n10+0 records out\n1048576000 bytes (1.0 GB, 1000 MiB) copied, 1.01127 s, 1.0 GB/s\n```", "```py\n$ iostat -d /dev/sdc 1\n\nDevice             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn\nsdc            6813.00         0.00   1498640.00          0    1498640\n\nDevice             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn\nsdc            6711.00         0.00   1476420.00          0    1476420\n```", "```py\n$ while true; do clear && iostat -d /dev/sdc && sleep 1; done\n```", "```py\n$ fio --name=sdc-performance --filename=/dev/sdc --ioengine=libaio \\\n  --iodepth=1 --rw=randrw --bs=32k --direct=0 --size=64m\nsdc-performance: (g=0): rw=randwrite, bs=(R) 32.0KiB-32.0KiB,\n(W) 32.0KiB-32.0KiB, (T) 32.0KiB-32.0KiB, ioengine=libaio, iodepth=1\nfio-3.1\nStarting 1 process\n\nsdc-performance: (groupid=0, jobs=1): err= 0: pid=2879:\n   read: IOPS=1753, BW=54.8MiB/s (57.4MB/s)(31.1MiB/567msec)\n...\n   iops        : min= 1718, max= 1718, avg=1718.00, stdev= 0.00, samples=1\n  write: IOPS=1858, BW=58.1MiB/s (60.9MB/s)(32.9MiB/567msec)\n...\n   iops        : min= 1824, max= 1824, avg=1824.00, stdev= 0.00, samples=1\n```", "```py\n$ sudo fdisk /dev/sds\n\nCommand (m for help): n\nPartition type:\n   p   primary (0 primary, 0 extended, 4 free)\n   e   extended\nSelect (default p): p\nPartition number (1-4, default 1):\nFirst sector (2048-22527999, default 2048):\nUsing default value 2048\nLast sector, +sectors or +size{K,M,G} (2048-22527999, default 22527999): +4G\nPartition 1 of type Linux and of size 4 GiB is set\n\nCommand (m for help): w\nThe partition table has been altered!\n\nCalling ioctl() to re-read partition table.\nSyncing disks.\n```", "```py\n$ sudo parted /dev/sdaa\nGNU Parted 3.1\nUsing /dev/sdaa\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) mklabel\nNew disk label type? gpt\n(parted) mkpart\nPartition name?  []?\nFile system type?  [ext2]?\nStart? 0\nEnd? 40%\n```", "```py\n$ parted --script /dev/sdaa mklabel gpt\n$ parted --script /dev/sdaa mkpart primary 1 40%\n$ parted --script /dev/sdaa print\nDisk /dev/sdaa: 11.5GB\nSector size (logical/physical): 512B/512B\nPartition Table: gpt\nDisk Flags:\n\nNumber  Start   End     Size    File system  Name     Flags\n 1      1049kB  4614MB  4613MB\n```", "```py\n$ fdisk -l /dev/sda\nfdisk: cannot open /dev/sda: Permission denied\n\n$ sudo fdisk -l /dev/sda\n\nDisk /dev/sda: 42.9 GB, 42949672960 bytes, 83886080 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x0009d9ce\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/sda1   *        2048    83886079    41942016   83  Linux\n```", "```py\n$ blkid /dev/sda\n\n$ sudo blkid /dev/sda\n/dev/sda: PTTYPE=\"dos\"\n```", "```py\n$ lsblk /dev/sda\nNAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT\nsda      8:0    0  40G  0 disk\n└─sda1   8:1    0  40G  0 part /\n$ sudo lsblk /dev/sda\nNAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT\nsda      8:0    0  40G  0 disk\n└─sda1   8:1    0  40G  0 part /\n```", "```py\n$ blkid -p /dev/sda1\nUUID=\"8e4622c4-1066-4ea8-ab6c-9a19f626755c\" TYPE=\"xfs\" USAGE=\"filesystem\"\nPART_ENTRY_SCHEME=\"dos\" PART_ENTRY_TYPE=\"0x83\" PART_ENTRY_FLAGS=\"0x80\"\nPART_ENTRY_NUMBER=\"1\" PART_ENTRY_OFFSET=\"2048\" PART_ENTRY_SIZE=\"83884032\"\n```", "```py\n$ lsblk -P /dev/nvme0n1p1\nNAME=\"nvme0n1p1\" MAJ:MIN=\"259:1\" RM=\"0\" SIZE=\"512M\" RO=\"0\" TYPE=\"part\"\n```", "```py\nlsblk -P -o SIZE /dev/nvme0n1p1\nSIZE=\"512M\"\n```", "```py\n$ ssh -L 9998:localhost:15672 -p 2223 adeza@prod1.rabbitmq.ceph.internal -N\n```", "```py\n$ ab -c 100 -n 10000 http://localhost/\n```", "```py\nBenchmarking localhost (be patient)\n...\nCompleted 10000 requests\nFinished 10000 requests\n\nServer Software:        nginx/1.15.9\nServer Hostname:        localhost\nServer Port:            80\n\nDocument Path:          /\nDocument Length:        612 bytes\n\nConcurrency Level:      100\nTime taken for tests:   0.624 seconds\nComplete requests:      10000\nFailed requests:        0\nTotal transferred:      8540000 bytes\nHTML transferred:       6120000 bytes\nRequests per second:    16015.37 [#/sec] (mean)\nTime per request:       6.244 [ms] (mean)\nTime per request:       0.062 [ms] (mean, across all concurrent requests)\nTransfer rate:          13356.57 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    3   0.6      3       5\nProcessing:     0    4   0.8      3       8\nWaiting:        0    3   0.8      3       6\nTotal:          0    6   1.0      6       9\n```", "```py\n...\nBenchmarking prod1.ceph.internal (be patient)\n\nServer Software:        nginx\nServer Hostname:        prod1.ceph.internal\nServer Port:            443\nSSL/TLS Protocol:       TLSv1.2,ECDHE-RSA-AES256-GCM-SHA384,2048,256\nServer Temp Key:        ECDH P-256 256 bits\nTLS Server Name:        prod1.ceph.internal\n\nComplete requests:      200\nFailed requests:        0\nTotal transferred:      212600 bytes\nHTML transferred:       175000 bytes\nRequests per second:    83.94 [#/sec] (mean)\nTime per request:       1191.324 [ms] (mean)\nTime per request:       11.913 [ms] (mean, across all concurrent requests)\nTransfer rate:          87.14 [Kbytes/sec] received\n....\n```", "```py\nimport molotov\n\n@molotov.scenario(100)\nasync def scenario_one(session):\n    async with session.get(\"http://localhost:5000\") as resp:\n        assert resp.status == 200\n```", "```py\nfrom flask import Flask, redirect, request\n\napp = Flask('basic app')\n\n@app.route('/', methods=['GET', 'POST'])\ndef index():\n    if request.method == 'POST':\n        redirect('https://www.google.com/search?q=%s' % request.args['q'])\n    else:\n        return '<h1>GET request from Flask!</h1>'\n```", "```py\n$ molotov -v -r 100 load_test.py\n**** Molotov v1.6\\. Happy breaking! ****\nPreparing 1 worker...\nOK\nSUCCESSES: 100 | FAILURES: 0 WORKERS: 0\n*** Bye ***\n```", "```py\n@molotov.scenario(100)\nasync def scenario_post(session):\n    resp = await session.post(\"http://localhost:5000\", params={'q': 'devops'})\n    redirect_status = resp.history[0].status\n    error = \"unexpected redirect status: %s\" % redirect_status\n    assert redirect_status == 301, error\n```", "```py\n$ molotov -v -r 1 --processes 1 load_test.py\n**** Molotov v1.6\\. Happy breaking! ****\nPreparing 1 worker...\nOK\nAssertionError('unexpected redirect status: 302',)\n  File \".venv/lib/python3.6/site-packages/molotov/worker.py\", line 206, in step\n    **scenario['kw'])\n  File \"load_test.py\", line 12, in scenario_two\n    assert redirect_status == 301, error\nSUCCESSES: 0 | FAILURES: 1\n*** Bye ***\n```", "```py\nimport molotov\n\n@molotov.scenario()\nasync def scenario_one(session):\n    async with session.get(\"http://localhost:5000/\") as resp:\n        assert resp.status == 200\n\n@molotov.scenario(80)\nasync def scenario_two(session):\n    resp = await session.post(\"http://localhost:5000\", params={'q': 'devops'})\n    redirect_status = resp.history[0].status\n    error = \"unexpected redirect status: %s\" % redirect_status\n    assert redirect_status == 301, error\n```", "```py\n127.0.0.1 - - [04/Sep/2019 12:10:54] \"POST /?q=devops HTTP/1.1\" 302 -\n127.0.0.1 - - [04/Sep/2019 12:10:56] \"POST /?q=devops HTTP/1.1\" 302 -\n127.0.0.1 - - [04/Sep/2019 12:10:57] \"POST /?q=devops HTTP/1.1\" 302 -\n127.0.0.1 - - [04/Sep/2019 12:10:58] \"GET / HTTP/1.1\" 200 -\n127.0.0.1 - - [04/Sep/2019 12:10:58] \"POST /?q=devops HTTP/1.1\" 302 -\n127.0.0.1 - - [04/Sep/2019 12:10:59] \"POST /?q=devops HTTP/1.1\" 302 -\n127.0.0.1 - - [04/Sep/2019 12:11:00] \"POST /?q=devops HTTP/1.1\" 302 -\n127.0.0.1 - - [04/Sep/2019 12:11:01] \"GET / HTTP/1.1\" 200 -\n127.0.0.1 - - [04/Sep/2019 12:11:01] \"POST /?q=devops HTTP/1.1\" 302 -\n127.0.0.1 - - [04/Sep/2019 12:11:02] \"POST /?q=devops HTTP/1.1\" 302 -\n```", "```py\n$ ps -eo pcpu,pid,user,args | sort -r | head -10\n%CPU   PID USER     COMMAND\n 0.3   719 vagrant  -bash\n 0.1   718 vagrant  sshd: vagrant@pts/0\n 0.1   668 vagrant  /lib/systemd/systemd --user\n 0.0     9 root     [rcu_bh]\n 0.0    95 root     [ipv6_addrconf]\n 0.0    91 root     [kworker/u4:3]\n 0.0     8 root     [rcu_sched]\n 0.0    89 root     [scsi_tmf_1]\n```", "```py\n$ cat /etc/skel/.zshrc\nautoload -U compinit\ncompinit\n\nsetopt COMPLETE_IN_WORD\n```", "```py\nexport PYTHONSTARTUP=$HOME/dotfiles/pythonstartup.py\n```", "```py\nimport types\nimport uuid\n\nhelpers = types.ModuleType('helpers')\nhelpers.uuid4 = uuid.uuid4()\n```", "```py\n$ PYTHONSTARTUP=pythonstartup.py python\nPython 3.7.3 (default, Apr  3 2019, 06:39:12)\n[GCC 8.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> helpers\n<module 'helpers'>\n>>> helpers.uuid4()\nUUID('966d7dbe-7835-4ac7-bbbf-06bf33db5302')\n```", "```py\n$ ls **/*.py\n```", "```py\n$ shopt -s globstar\n```", "```py\n:%s/original term/replacement term/gc\n```", "```py\nreplace with replacement term (y/n/a/q/l/^E/^Y)?\n```", "```py\n:%s/needs_root/needs_root()/gc\n```", "```py\nvim -c \"bufdo! set eventignore-=Syntax | %s/needs_root/needs_root()/gce\" **/*.py\n```", "```py\nvsed() {\n  search=$1\n  replace=$2\n  shift\n shift\n  vim -c \"bufdo! set eventignore-=Syntax| %s/$search/$replace/gce\" $*\n}\n```", "```py\n$ vsed needs_root needs_root() **/*.py\n```", "```py\nalias pyclean='find . \\\n \\( -type f -name \"*.py[co]\" -o -type d -name \"__pycache__\" \\) -delete &&\n echo \"Removed pycs and __pycache__\"'\n```", "```py\n$ ps auxw\n```", "```py\n$ ps auxw | grep nginx\nroot     29640  1536 ?        Ss   10:11   0:00 nginx: master process\nwww-data 29648  5440 ?        S    10:11   0:00 nginx: worker process\nalfredo  30024   924 pts/14   S+   10:12   0:00 grep nginx\n```", "```py\n$ ps auxw | grep apache\nalfredo  31351  0.0  0.0   8856   912 pts/13   S+   10:15   0:00 grep apache\n```", "```py\n$ ps auxw | grep apache | grep -v grep\n```", "```py\nalias pg='ps aux | grep -v grep | grep $1'\n```", "```py\n$ pg vim\nalfredo  31585  77836 20624 pts/3    S+   18:39   0:00 vim /home/alfredo/.zshrc\n```", "```py\nIn [1]: import time\n\nIn [2]: int(time.time())\nOut[2]: 1566168361\n```", "```py\nalias timestamp='date -j -f \"%a %b %d %T %Z %Y\" \"`date`\" \"+%s\"'\n```", "```py\nalias timestamp='date \"+%s\"'\n```", "```py\nIn [1]: import os\n\nIn [2]: import base64\n\nIn [3]: print(base64.b64encode(os.urandom(64)).decode('utf-8'))\ngHHlGXnqnbsALbAZrGaw+LmvipTeFi3tA/9uBltNf9g2S9qTQ8hTpBYrXStp+i/o5TseeVo6wcX2A==\n```", "```py\nmpass() {\n    if [ $1 ]; then\n        length=$1\n    else\n        length=12\n    fi\n    _hash=`python3 -c \"\nimport os,base64\nexec('print(base64.b64encode(os.urandom(64))[:${length}].decode(\\'utf-8\\'))')\n \"`\n    echo $_hash | xclip -selection clipboard\n    echo \"new password copied to the system clipboard\"\n}\n```", "```py\ntry() {\n    python -c \"\nexec('''\ntry:\n import ${1} as _\n print(_.__file__)\nexcept Exception as e:\n print(e)\n''')\"\n}\n```", "```py\nIn [1]: import os\n\nIn [2]: print(os)\n<module 'os' from '.virtualenvs/python-devops/lib/python3.6/os.py'>\n```", "```py\ncdp() {\n    MODULE_DIRECTORY=`python -c \"\nexec('''\ntry:\n import os.path as _, ${module}\n print(_.dirname(_.realpath(${module}.__file__)))\nexcept Exception as e:\n print(e)\n''')\"`\n    if  [[ -d $MODULE_DIRECTORY ]]; then\n        cd $MODULE_DIRECTORY\n    else\n        echo \"Module ${1} not found or is not importable: $MODULE_DIRECTORY\"\n    fi\n}\n```", "```py\n    module=$(sed 's/-/_/g' <<< $1)\n```", "```py\n$ cdp pkg-resources\n$ pwd\n/usr/lib/python2.7/dist-packages/pkg_resources\n```", "```py\nJohn,Doe,120 Main St.,Riverside, NJ, 08075\nJack,Jhonson,220 St. Vernardeen Av.,Phila, PA,09119\nJohn,Howards,120 Monroe St.,Riverside, NJ,08075\nAlfred, Reynolds, 271 Terrell Trace Dr., Marietta, GA, 30068\nJim, Harrison, 100 Sandy Plains Plc., Houston, TX, 77005\n```", "```py\n>>> import csv\n>>> import json\n>>> contents = open(\"addresses.csv\").readlines()\n>>> json.dumps(list(csv.reader(contents)))\n'[[\"John\", \"Doe\", \"120 Main St.\", \"Riverside\", \" NJ\", \" 08075\"],\n[\"Jack\", \"Jhonson\", \"220 St. Vernardeen Av.\", \"Phila\", \" PA\", \"09119\"],\n[\"John\", \"Howards\", \"120 Monroe St.\", \"Riverside\", \" NJ\", \"08075\"],\n[\"Alfred\", \" Reynolds\", \" 271 Terrell Trace Dr.\", \" Marietta\", \" GA\", \" 30068\"],\n[\"Jim\", \" Harrison\", \" 100 Sandy Plains Plc.\", \" Houston\", \" TX\", \" 77005\"]]'\n```", "```py\ncsv2json () {\n\tpython3 -c \"\nexec('''\nimport csv,json\nprint(json.dumps(list(csv.reader(open(\\'${1}\\')))))\n''')\n\"\n}\n```", "```py\n$ csv2json addresses.csv\n[[\"John\", \"Doe\", \"120 Main St.\", \"Riverside\", \" NJ\", \" 08075\"],\n[\"Jack\", \"Jhonson\", \"220 St. Vernardeen Av.\", \"Phila\", \" PA\", \"09119\"],\n[\"John\", \"Howards\", \"120 Monroe St.\", \"Riverside\", \" NJ\", \"08075\"],\n[\"Alfred\", \" Reynolds\", \" 271 Terrell Trace Dr.\", \" Marietta\", \" GA\", \" 30068\"],\n[\"Jim\", \" Harrison\", \" 100 Sandy Plains Plc.\", \" Houston\", \" TX\", \" 77005\"]]\n```", "```py\nimport pdb;pdb.set_trace()\n```", "```py\nimport ipdb;ipdb.set_trace()\n```", "```py\nimport IPython; IPython.embed()\n```", "```py\nIn [1]: def f(x):\n   ...:     return x*x\n   ...:\n\nIn [2]: %timeit for x in range(100): f(x)\n100000 loops, best of 3: 20.3 us per loop\n```", "```py\n>>> array = []\n>>> def appending():\n...     for i in range(100):\n...         array.append(i)\n...\n>>> timeit.repeat(\"appending()\", \"from __main__ import appending\")\n[5.298534262983594, 5.32031941099558, 5.359099322988186]\n>>> timeit.repeat(\"[i for i in range(100)]\")\n[2.2052824340062216, 2.1648171059787273, 2.1733458579983562]\n```", "```py\nIn [1]: def appending():\n   ...:     array = []\n   ...:     for i in range(100):\n   ...:         array.append(i)\n   ...:\n\nIn [2]: %timeit appending()\n5.39 µs ± 95.1 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\n\nIn [3]: %timeit [i for i in range(100)]\n2.1 µs ± 15.2 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\n```", "```py\nstat(\"/var/lib/ceph/osd/block.db\", 0x7fd) = -1 EACCES (Permission denied)\nlstat(\"/var/lib/ceph/osd/block.db\", {st_mode=S_IFLNK|0777, st_size=22}) = 0\n```", "```py\nimport subprocess\n\nsubprocess.call(['ls', '-alh'])\n```", "```py\n$ strace python follow.py\n```", "```py\nstat(\"/home/alfredo/go/bin/python\", 0x7ff) = -1 ENOENT (No such file)\nstat(\"/usr/local/go/bin/python\", 0x7ff) = -1 ENOENT (No such file)\nstat(\"/usr/local/bin/python\", 0x7ff) = -1 ENOENT (No such file)\nstat(\"/home/alfredo/bin/python\", 0x7ff) = -1 ENOENT (No such file)\nstat(\"/usr/local/sbin/python\", 0x7ff) = -1 ENOENT (No such file)\nstat(\"/usr/local/bin/python\", 0x7ff) = -1 ENOENT (No such file)\nstat(\"/usr/sbin/python\", 0x7ff) = -1 ENOENT (No such file)\nstat(\"/usr/bin/python\", {st_mode=S_IFREG|0755, st_size=3691008, ...}) = 0\nreadlink(\"/usr/bin/python\", \"python2\", 4096) = 7\nreadlink(\"/usr/bin/python2\", \"python2.7\", 4096) = 9\nreadlink(\"/usr/bin/python2.7\", 0x7ff, 4096) = -1 EINVAL (Invalid argument)\nstat(\"/usr/bin/Modules/Setup\", 0x7ff) = -1 ENOENT (No such file)\nstat(\"/usr/bin/lib/python2.7/os.py\", 0x7ffd) = -1 ENOENT (No such file)\nstat(\"/usr/bin/lib/python2.7/os.pyc\", 0x7ff) = -1 ENOENT (No such file)\nstat(\"/usr/lib/python2.7/os.py\", {st_mode=S_IFREG|0644, ...}) = 0\nstat(\"/usr/bin/pybuilddir.txt\", 0x7ff) = -1 ENOENT (No such file)\nstat(\"/usr/bin/lib/python2.7/lib-dynload\", 0x7ff) = -1 ENOENT (No such file)\nstat(\"/usr/lib/python2.7/lib-dynload\", {st_mode=S_IFDIR|0755, ...}) = 0\n```", "```py\n[pid 30127] lstat(\".vimrc\", {st_mode=S_IFLNK|0777, st_size=29, ...}) = 0\n[pid 30127] lgetxattr(\".vimrc\", \"security.selinux\", 0x55c5a36f4720, 255)\n[pid 30127] readlink(\".vimrc\", \"/home/alfredo/dotfiles/.vimrc\", 30) = 29\n[pid 30127] lstat(\".config\", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0\n```", "```py\n$ strace -o output.txt python follow.py\n```"]