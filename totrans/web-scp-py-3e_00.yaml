- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To those who have not developed the skill, computer programming can seem like
    a kind of magic. If programming is magic, *web scraping* is wizardry: the application
    of magic for particularly impressive and useful—yet surprisingly effortless—feats.'
  prefs: []
  type: TYPE_NORMAL
- en: In my years as a software engineer, I’ve found that few programming practices
    capture the excitement of both programmers and laypeople alike quite like web
    scraping. The ability to write a simple bot that collects data and streams it
    down a terminal or stores it in a database, while not difficult, never fails to
    provide a certain thrill and sense of possibility, no matter how many times you
    might have done it before.
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, when I speak to other programmers about web scraping, there’s
    a lot of misunderstanding and confusion about the practice. Some people aren’t
    sure it’s legal (it is), or how to handle problems like JavaScript-heavy pages
    or required logins. Many are confused about how to start a large web scraping
    project, or even where to find the data they’re looking for. This book seeks to
    put an end to many of these common questions and misconceptions about web scraping,
    while providing a comprehensive guide to most common web scraping tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Web scraping is a diverse and fast-changing field, and I’ve tried to provide
    both high-level concepts and concrete examples to cover just about any data collection
    project you’re likely to encounter. Throughout the book, code samples are provided
    to demonstrate these concepts and allow you to try them out. The code samples
    themselves can be used and modified with or without attribution (although acknowledgment
    is always appreciated). All code samples are available on [GitHub](https://github.com/REMitchell/python-scraping) for
    viewing and downloading.
  prefs: []
  type: TYPE_NORMAL
- en: What Is Web Scraping?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The automated gathering of data from the internet is nearly as old as the internet
    itself. Although *web scraping* is not a new term, in years past the practice
    has been more commonly known as *screen scraping*, *data mining*, *web harvesting*, or
    similar variations. General consensus today seems to favor *web scraping*, so
    that is the term I use throughout the book, although I also refer to programs
    that specifically traverse multiple pages as *web crawlers* or refer to the web
    scraping programs themselves as *bots*.
  prefs: []
  type: TYPE_NORMAL
- en: In theory, web scraping is the practice of gathering data through any means
    other than a program interacting with an API (or, obviously, through a human using
    a web browser). This is most commonly accomplished by writing an automated program
    that queries a web server, requests data (usually in the form of HTML and other
    files that compose web pages), and then parses that data to extract needed information.
  prefs: []
  type: TYPE_NORMAL
- en: In practice, web scraping encompasses a wide variety of programming techniques
    and technologies, such as data analysis, natural language parsing, and information
    security. Because the scope of the field is so broad, this book covers the fundamental
    basics of web scraping and crawling in [Part I](part01.html#part-1) and delves
    into advanced topics in [Part II](part02.html#part-2). I suggest that all readers
    carefully study the first part and delve into the more specific in the second
    part as needed.
  prefs: []
  type: TYPE_NORMAL
- en: Why Web Scraping?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If the only way you access the internet is through a browser, you’re missing
    out on a huge range of possibilities. Although browsers are handy for executing
    JavaScript, displaying images, and arranging objects in a more human-readable
    format (among other things), web scrapers are excellent at gathering and processing
    large amounts of data quickly. Rather than viewing one page at a time through
    the narrow window of a monitor, you can view databases spanning thousands or even
    millions of pages at once.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, web scrapers can go places that traditional search engines cannot.
    A Google search for “cheapest flights to Boston” will result in a slew of advertisements
    and popular flight search sites. Google knows only what these websites say on
    their content pages, not the exact results of various queries entered into a flight
    search application. However, a well-developed web scraper can chart the cost of
    a flight to Boston over time, across a variety of websites, and tell you the best
    time to buy your ticket.
  prefs: []
  type: TYPE_NORMAL
- en: 'You might be asking: “Isn’t data gathering what APIs are for?” (If you’re unfamiliar
    with APIs, see [Chapter 15](ch15.html#c-15).) Well, APIs can be fantastic, if
    you find one that suits your purposes. They are designed to provide a convenient
    stream of well-formatted data from one computer program to another. You can find
    an API for many types of data you might want to use, such as Twitter posts or
    Wikipedia pages. In general, it is preferable to use an API (if one exists), rather
    than build a bot to get the same data. However, an API might not exist or be useful
    for your purposes for several reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: You are gathering relatively small, finite sets of data across a large collection
    of websites without a cohesive API.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The data you want is fairly small or uncommon, and the creator did not think
    it warranted an API.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The source does not have the infrastructure or technical ability to create an
    API.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The data is valuable and/or protected and not intended to be spread widely.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Even when an API *does* exist, the request volume and rate limits, the types
    of data, or the format of data that it provides might be insufficient for your
    purposes.
  prefs: []
  type: TYPE_NORMAL
- en: This is where web scraping steps in. With few exceptions, if you can view data
    in your browser, you can access it via a Python script. If you can access it in
    a script, you can store it in a database. And if you can store it in a database,
    you can do virtually anything with that data.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are obviously many extremely practical applications of having access
    to nearly unlimited data: market forecasting, machine-language translation, and
    even medical diagnostics have benefited tremendously from the ability to retrieve
    and analyze data from news sites, translated texts, and health forums, respectively.'
  prefs: []
  type: TYPE_NORMAL
- en: Even in the art world, web scraping has opened up new frontiers for creation.
    The 2006 project [“We Feel Fine”](http://wefeelfine.org/) by Jonathan Harris and
    Sep Kamvar scraped a variety of English-language blog sites for phrases starting
    with “I feel” or “I am feeling.” This led to a popular data visualization, describing
    how the world was feeling day by day and minute by minute.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of your field, web scraping almost always provides a way to guide
    business practices more effectively, improve productivity, or even branch off
    into a brand-new field entirely.
  prefs: []
  type: TYPE_NORMAL
- en: About This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is designed to serve not only as an introduction to web scraping but
    also as a comprehensive guide to collecting, transforming, and using data from
    uncooperative sources. Although it uses the Python programming language and covers
    many Python basics, it should not be used as an introduction to the language.
  prefs: []
  type: TYPE_NORMAL
- en: If you don’t know any Python at all, this book might be a bit of a challenge. Please
    do not use it as an introductory Python text. With that said, I’ve tried to keep
    all concepts and code samples at a beginning-to-intermediate Python programming
    level in order to make the content accessible to a wide range of readers. To this
    end, there are occasional explanations of more advanced Python programming and
    general computer science topics where appropriate. If you are a more advanced
    reader, feel free to skim these parts!
  prefs: []
  type: TYPE_NORMAL
- en: If you’re looking for a more comprehensive Python resource, [*Introducing Python*](http://bit.ly/1CbHTcE)
    by Bill Lubanovic (O’Reilly) is a good, if lengthy, guide. For those with shorter
    attention spans, the video series [*Introduction to Python*](http://oreil.ly/2HOqSNM)
    by Jessica McKellar (O’Reilly) is an excellent resource. I’ve also enjoyed *[Think
    Python](http://oreil.ly/2fjbT2F)* by a former professor of mine, Allen Downey
    (O’Reilly). This last book in particular is ideal for those new to programming,
    and teaches computer science and software engineering concepts along with the
    Python language.
  prefs: []
  type: TYPE_NORMAL
- en: Technical books often focus on a single language or technology, but web scraping
    is a relatively disparate subject, with practices that require the use of databases,
    web servers, HTTP, HTML, internet security, image processing, data science, and
    other tools. This book attempts to cover all of these, and other topics, from
    the perspective of “data gathering.” It should not be used as a complete treatment
    of any of these subjects, but I believe they are covered in enough detail to get
    you started writing web scrapers!
  prefs: []
  type: TYPE_NORMAL
- en: '[Part I](part01.html#part-1) covers the subject of web scraping and web crawling
    in depth, with a strong focus on a small handful of libraries used throughout
    the book. [Part I](part01.html#part-1) can easily be used as a comprehensive reference
    for these libraries and techniques (with certain exceptions, where additional
    references will be provided). The skills taught in the first part will likely
    be useful for everyone writing a web scraper, regardless of their particular target
    or application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Part II](part02.html#part-2) covers additional subjects that the reader might
    find useful when writing web scrapers, but that might not be useful for all scrapers
    all the time. These subjects are, unfortunately, too broad to be neatly wrapped
    up in a single chapter.  Because of this, frequent references are made to other
    resources for additional information.'
  prefs: []
  type: TYPE_NORMAL
- en: The structure of this book enables you to easily jump around among chapters
    to find only the web scraping technique or information that you are looking for.
    When a concept or piece of code builds on another mentioned in a previous chapter,
    I explicitly reference the section that it was addressed in.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '`Constant width`'
  prefs: []
  type: TYPE_NORMAL
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '**`Constant width bold`**'
  prefs: []
  type: TYPE_NORMAL
- en: Shows commands or other text that should be typed by the user.
  prefs: []
  type: TYPE_NORMAL
- en: '*`Constant width italic`*'
  prefs: []
  type: TYPE_NORMAL
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element indicates a warning or caution.
  prefs: []
  type: TYPE_NORMAL
- en: Using Code Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Supplemental material (code examples, exercises, etc.) is available for download
    at [*https://github.com/REMitchell/python-scraping*](https://github.com/REMitchell/python-scraping).
  prefs: []
  type: TYPE_NORMAL
- en: This book is here to help you get your job done. If the example code in this
    book is useful to you, you may use it in your programs and documentation. You
    do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing a CD-ROM
    of examples from O’Reilly books does require permission. Answering a question
    by citing this book and quoting example code does not require permission. Incorporating
    a significant amount of example code from this book into your product’s documentation
    does require permission.
  prefs: []
  type: TYPE_NORMAL
- en: 'We appreciate, but do not require, attribution. An attribution usually includes
    the title, author, publisher, and ISBN. For example: “*Web Scraping with Python*,
    Third Edition, by Ryan Mitchell (O’Reilly). Copyright 2024 Ryan Mitchell, 978-1-098-14535-4.”'
  prefs: []
  type: TYPE_NORMAL
- en: If you feel your use of code examples falls outside fair use or the permission
    given here, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, printed books are difficult to keep up-to-date. With web scraping,
    this provides an added challenge, as the many libraries and websites that the
    book references and that the code often depends on may occasionally be modified,
    and code samples may fail or produce unexpected results. If you choose to run
    the code samples, please run them from the GitHub repository rather than copying
    from the book directly. I, and readers of this book who choose to contribute (including,
    perhaps, you!), will strive to keep the repository up-to-date with required modifications.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to code samples, terminal commands are often provided to illustrate
    how to install and run software. In general, these commands are geared toward
    Linux-based operating systems but will usually be applicable for Windows users
    with a properly configured Python environment and pip installation. When this
    is not the case, I have provided instructions for all major operating systems,
    or external references for Windows users to accomplish the task.
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](https://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-889-8969 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-7019 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*support@oreilly.com*](mailto:support@oreilly.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://www.oreilly.com/about/contact.html*](https://www.oreilly.com/about/contact.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*https://oreil.ly/web_scraping_with_python*](https://oreil.ly/web_scraping_with_python).
  prefs: []
  type: TYPE_NORMAL
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on LinkedIn: [*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*https://youtube.com/oreillymedia*](https://youtube.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Just as some of the best products arise out of a sea of user feedback, this
    book never could have existed in any useful form without the help of many collaborators,
    cheerleaders, and editors. Thank you to the O’Reilly staff and their amazing support
    for this somewhat unconventional subject; to my friends and family who have offered
    advice and put up with impromptu readings; and to my coworkers at the Gerson Lehrman
    Group, whom I now likely owe many hours of work.
  prefs: []
  type: TYPE_NORMAL
- en: 'Thank you to my editors: Sara Hunter, John Obelenus, and Tracey Larvenz. Their
    feedback, guidance, and occasional tough love were invaluable. Quite a few sections
    and code samples were written as a direct result of their suggestions.'
  prefs: []
  type: TYPE_NORMAL
- en: The inspiration for the first two chapters, as well as many new inclusions throughout
    the third edition, are thanks to Bryan Specht. The legacy he left is more broad
    and vast than even he knew, but the hole he left to be filled by that legacy is
    even bigger.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, thanks to Jim Waldo, who started this whole project many years ago
    when he mailed a Linux box and *The Art and Science of C* by Eric Roberts (Addison-Wesley)
    to a young, impressionable teenager.
  prefs: []
  type: TYPE_NORMAL
