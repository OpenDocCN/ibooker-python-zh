- en: Appendix E. Cheat Sheets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I find myself looking up certain things a little too often. Here are some tables
    that I hope you’ll find useful.
  prefs: []
  type: TYPE_NORMAL
- en: Operator Precedence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This table is a remix of the official documentation on precedence in Python
    3, with the *highest* precedence operators at the top.
  prefs: []
  type: TYPE_NORMAL
- en: '| Operator | Description and examples |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| ``[*`v`*``, `…]`, ``{*`v1`*``, `…}`, ``{*`k1`*:*`v1`*``, `…}`, `(…)` | List/set/dict/generator
    creation or comprehension, parenthesized expression |'
  prefs: []
  type: TYPE_TB
- en: '| ``*`seq`*[*`n`*]``, ``*`seq`*[*`n`*:*`m`*]``, ``*`func`*(*`args`*…)``, ``*`obj`*.*`attr`*``
    | Index, slice, function call, attribute reference |'
  prefs: []
  type: TYPE_TB
- en: '| `**` | Exponentiation |'
  prefs: []
  type: TYPE_TB
- en: '| `+`*`n`*, `–`*`n`*, `~`*`n`* | Positive, negative, bitwise `not` |'
  prefs: []
  type: TYPE_TB
- en: '| `*`, `/`, `//`, `%` | Multiplication, float division, int division, remainder
    |'
  prefs: []
  type: TYPE_TB
- en: '| `+`, `-` | Addition, subtraction |'
  prefs: []
  type: TYPE_TB
- en: '| `<<`, `>>` | Bitwise left, right shifts |'
  prefs: []
  type: TYPE_TB
- en: '| `&` | Bitwise `and` |'
  prefs: []
  type: TYPE_TB
- en: '| `&#124;` | Bitwise `or` |'
  prefs: []
  type: TYPE_TB
- en: '| `in`, `not in`, `is`, `is not`, `<`, `<=`, `>`, `>=`, `!=`, `==` | Membership
    and equality tests |'
  prefs: []
  type: TYPE_TB
- en: '| `not` *x* | Boolean (logical) `not` |'
  prefs: []
  type: TYPE_TB
- en: '| `and` | Boolean `and` |'
  prefs: []
  type: TYPE_TB
- en: '| `or` | Boolean `or` |'
  prefs: []
  type: TYPE_TB
- en: '| `if` … `else` | Conditional expression |'
  prefs: []
  type: TYPE_TB
- en: '| `lambda` … | `lambda` expression |'
  prefs: []
  type: TYPE_TB
- en: String Methods
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Python offers both string *methods* (can be used with any `str` object) and
    a `string` module with some useful definitions. Let’s use these test variables:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: In the following examples, the Python shell prints the result of the method
    call, but the original variables `s` and `t` are not changed.
  prefs: []
  type: TYPE_NORMAL
- en: Change Case
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Search
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Modify
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Format
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: String Type
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: String Module Attributes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These are class attributes that are used as constant definitions.
  prefs: []
  type: TYPE_NORMAL
- en: '| Attribute | Example |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `ascii_letters` | `''abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ''`
    |'
  prefs: []
  type: TYPE_TB
- en: '| `ascii_lowercase` | `''abcdefghijklmnopqrstuvwxyz''` |'
  prefs: []
  type: TYPE_TB
- en: '| `ascii_uppercase` | `''ABCDEFGHIJKLMNOPQRSTUVWXYZ''` |'
  prefs: []
  type: TYPE_TB
- en: '| `digits` | `''0123456789''` |'
  prefs: []
  type: TYPE_TB
- en: '| `hexdigits` | `''0123456789abcdefABCDEF''` |'
  prefs: []
  type: TYPE_TB
- en: '| `octdigits` | `''01234567''` |'
  prefs: []
  type: TYPE_TB
- en: '| `punctuation` | `''!"#$%&\''()*+,-./:;<=>?@[\\]^_\`{&#124;}~''` |'
  prefs: []
  type: TYPE_TB
- en: '| `printable` | digits + ascii_letters + punctuation + whitespace |'
  prefs: []
  type: TYPE_TB
- en: '| `whitespace` | `'' \t\n\r\x0b\x0c''` |'
  prefs: []
  type: TYPE_TB
- en: Coda
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chester wants to express his appreciation for your diligence. If you need him,
    he’s taking a nap…
  prefs: []
  type: TYPE_NORMAL
- en: '![inp2 ae01](assets/inp2_ae01.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure E-1\. Chester^([1](app05.html#idm45794949505080))
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: …but Lucy is available to answer any questions.
  prefs: []
  type: TYPE_NORMAL
- en: '![inp2 ae02](assets/inp2_ae02.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure E-2\. Lucy
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: ^([1](app05.html#idm45794949505080-marker)) He’s moved about a foot to the right
    since [Figure 3-1](ch03.html#img_chester).
  prefs: []
  type: TYPE_NORMAL
