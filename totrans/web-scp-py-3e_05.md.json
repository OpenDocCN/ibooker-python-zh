["```py\n$ pip install notebook\n```", "```py\n$ jupyter notebook\n```", "```py\nfrom urllib.request import urlopen\n\nhtml = urlopen('http://pythonscraping.com/pages/page1.html')\nprint(html.read())\n```", "```py\n$ python scrapetest.py\n```", "```py\n$ python3 scrapetest.py\n\n```", "```py\nfrom urllib.request import urlopen\n```", "```py\n$ pip\n```", "```py\n$ python get-pip.py\n\n```", "```py\n$ python3 get-pip.py\n```", "```py\n$ pip install bs4\n```", "```py\n$ pip3 install bs4\n\n```", "```py\n$ python\n> from bs4 import BeautifulSoup\n\n```", "```py\nfrom urllib.request import urlopen\nfrom bs4 import BeautifulSoup\n\nhtml = urlopen('http://www.pythonscraping.com/pages/page1.html')\nbs = BeautifulSoup(html.read(), 'html.parser')\nprint(bs.h1)\n```", "```py\n<h1>An Interesting Title</h1>\n\n```", "```py\nbs = BeautifulSoup(html, 'html.parser')\n```", "```py\nbs.h1\n```", "```py\nbs.html.body.h1\nbs.body.h1\nbs.html.h1\n```", "```py\nbs = BeautifulSoup(html.read(), 'html.parser')\n```", "```py\n$ pip install lxml\n```", "```py\nbs = BeautifulSoup(html.read(), 'lxml')\n```", "```py\nbs = BeautifulSoup(html.read(), 'html5lib')\n```", "```py\nhtml = urlopen('http://www.pythonscraping.com/pages/page1.html') \n```", "```py\nfrom urllib.request import urlopen\nfrom urllib.error import HTTPError\n\ntry:\n    html = urlopen('http://www.pythonscraping.com/pages/page1.html')\nexcept HTTPError as e:\n    print(e)\n    # return null, break, or do some other \"Plan B\"\nelse:\n    # program continues. Note: If you return or break in the \n    # exception catch, you do not need to use the \"else\" statement\n```", "```py\nfrom urllib.request import urlopen\nfrom urllib.error import HTTPError\nfrom urllib.error import URLError\n\ntry:\n    html = urlopen('https://pythonscrapingthisurldoesnotexist.com')\nexcept HTTPError as e:\n    print(e)\nexcept URLError as e:\n    print('The server could not be found!')\nelse:\n    print('It Worked!')\n\n```", "```py\nprint(bs.nonExistentTag)\n```", "```py\nprint(bs.nonExistentTag.someTag)\n```", "```py\nAttributeError: 'NoneType' object has no attribute 'someTag'\n```", "```py\ntry:\n    badContent = bs.nonExistingTag.anotherTag\nexcept AttributeError as e:\n    print('Tag was not found')\nelse:\n    if badContent == None:\n        print ('Tag was not found')\n    else:\n        print(badContent)\n```", "```py\nfrom urllib.request import urlopen\nfrom urllib.error import HTTPError\nfrom bs4 import BeautifulSoup\n\ndef getTitle(url):\n    try:\n        html = urlopen(url)\n    except HTTPError as e:\n        return None\n    try:\n        bs = BeautifulSoup(html.read(), 'html.parser')\n        title = bs.body.h1\n    except AttributeError as e:\n        return None\n    return title\n\ntitle = getTitle('http://www.pythonscraping.com/pages/page1.html')\nif title == None:\n    print('Title could not be found')\nelse:\n    print(title)\n```"]