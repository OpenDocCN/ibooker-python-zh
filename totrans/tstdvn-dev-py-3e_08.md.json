["```py\n$ python functional_tests.py\nF\n======================================================================\nFAIL: test_can_start_a_todo_list\n(__main__.NewVisitorTest.test_can_start_a_todo_list)\n ---------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"...goat-book/functional_tests.py\", line 21, in\ntest_can_start_a_todo_list\n    self.fail(\"Finish the test!\")\nAssertionError: Finish the test!\n\n ---------------------------------------------------------------------\nRan 1 test in 1.609s\n\nFAILED (failures=1)\n```", "```py\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\nimport time\nimport unittest\n\nclass NewVisitorTest(unittest.TestCase):\n    def setUp(self):\n        self.browser = webdriver.Firefox()\n\n    def tearDown(self):\n        self.browser.quit()\n\n    def test_can_start_a_todo_list(self):\n        # Edith has heard about a cool new online to-do app.\n        # She goes to check out its homepage\n        self.browser.get(\"http://localhost:8000\")\n\n        # She notices the page title and header mention to-do lists\n        self.assertIn(\"To-Do\", self.browser.title)\n        header_text = self.browser.find_element(By.TAG_NAME, \"h1\").text  ![1](assets/1.png)\n        self.assertIn(\"To-Do\", header_text)\n\n        # She is invited to enter a to-do item straight away\n        inputbox = self.browser.find_element(By.ID, \"id_new_item\")  ![1](assets/1.png)\n        self.assertEqual(inputbox.get_attribute(\"placeholder\"), \"Enter a to-do item\")\n\n        # She types \"Buy peacock feathers\" into a text box\n        # (Edith's hobby is tying fly-fishing lures)\n        inputbox.send_keys(\"Buy peacock feathers\")  ![2](assets/2.png)\n\n        # When she hits enter, the page updates, and now the page lists\n        # \"1: Buy peacock feathers\" as an item in a to-do list table\n        inputbox.send_keys(Keys.ENTER)  ![3](assets/3.png)\n        time.sleep(1)  ![4](assets/4.png)\n\n        table = self.browser.find_element(By.ID, \"id_list_table\")\n        rows = table.find_elements(By.TAG_NAME, \"tr\")  ![1](assets/1.png)\n        self.assertTrue(any(row.text == \"1: Buy peacock feathers\" for row in rows))\n\n        # There is still a text box inviting her to add another item.\n        # She enters \"Use peacock feathers to make a fly\"\n        # (Edith is very methodical)\n        self.fail(\"Finish the test!\")\n\n        # The page updates again, and now shows both items on her list\n        [...]\n```", "```py\n$ python functional_tests.py\n[...]\nselenium.common.exceptions.NoSuchElementException: Message: Unable to locate\nelement: h1\n```", "```py\n$ git diff  # should show changes to functional_tests.py\n$ git commit -am \"Functional test now checks we can input a to-do item\"\n```", "```py\nwibble = 3\n```", "```py\nfrom myprogram import wibble\nassert wibble == 3\n```", "```py\n$ python manage.py test\n[...]\nOK\n```", "```py\n<html>\n  <title>To-Do lists</title>\n</html>\n```", "```py\nfrom django.shortcuts import render\n\ndef home_page(request):\n    return render(request, \"home.xhtml\")\n```", "```py\n$ python manage.py test\n[...]\n======================================================================\nERROR: test_home_page_returns_correct_html\n(lists.tests.HomePageTest.test_home_page_returns_correct_html)  ![2](assets/2.png)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"...goat-book/lists/tests.py\", line 7, in test_home_page_returns_correct_html\n    response = self.client.get(\"/\")  ![3](assets/3.png)\n               ^^^^^^^^^^^^^^^^^^^^\n[...]\n  File \"...goat-book/lists/views.py\", line 4, in home_page\n    return render(request, \"home.xhtml\")  ![4](assets/4.png)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \".../django/shortcuts.py\", line 24, in render\n    content = loader.render_to_string(template_name, context, request, using=using)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \".../django/template/loader.py\", line 61, in render_to_string\n    template = get_template(template_name, using=using)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \".../django/template/loader.py\", line 19, in get_template\n    raise TemplateDoesNotExist(template_name, chain=chain)\ndjango.template.exceptions.TemplateDoesNotExist: home.xhtml  ![1](assets/1.png)\n\n----------------------------------------------------------------------\nRan 1 test in 0.074s\n```", "```py\n# Application definition\n\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"lists\",\n]\n```", "```py\n$ python manage.py test\n[...]\nOK\n```", "```py\ndef test_home_page_returns_correct_html(self):\n    response = self.client.get(\"/\")\n    self.assertContains(response, \"<title>To-Do lists</title>\")  ![1](assets/1.png)\n    self.assertContains(response, \"<html>\")\n    self.assertContains(response, \"</html>\")\n    self.assertTemplateUsed(response, \"home.xhtml\")  ![2](assets/2.png)\n```", "```py\nRan 1 tests in 0.016s\n\nOK\n```", "```py\nself.assertTemplateUsed(response, \"wrong.xhtml\")\n```", "```py\nAssertionError: False is not true : Template 'wrong.xhtml' was not a template\nused to render the response. Actual template(s) used: home.xhtml\n```", "```py\nfrom django.test import TestCase\n\nclass HomePageTest(TestCase):\n    def test_uses_home_template(self):\n        response = self.client.get(\"/\")\n        self.assertTemplateUsed(response, \"home.xhtml\")\n```", "```py\n$ git status # see tests.py, views.py, settings.py, + new templates folder\n$ git add .  # will also add the untracked templates folder\n$ git diff --staged # review the changes we're about to commit\n$ git commit -m \"Refactor home page view to use a template\"\n```", "```py\n<html>\n  <head>\n    <title>To-Do lists</title>\n  </head>\n  <body>\n    <h1>Your To-Do list</h1>\n  </body>\n</html>\n```", "```py\nselenium.common.exceptions.NoSuchElementException: Message: Unable to locate\nelement: [id=\"id_new_item\"]\n```", "```py\n  [...]\n  <body>\n    <h1>Your To-Do list</h1>\n    <input id=\"id_new_item\" />\n  </body>\n</html>\n```", "```py\nAssertionError: '' != 'Enter a to-do item'\n```", "```py\n    <input id=\"id_new_item\" placeholder=\"Enter a to-do item\" />\n```", "```py\nselenium.common.exceptions.NoSuchElementException: Message: Unable to locate\nelement: [id=\"id_list_table\"]\n```", "```py\n    <input id=\"id_new_item\" placeholder=\"Enter a to-do item\" />\n    <table id=\"id_list_table\">\n    </table>\n  </body>\n```", "```py\n  File \"...goat-book/functional_tests.py\", line 40, in\ntest_can_start_a_todo_list\n    self.assertTrue(any(row.text == \"1: Buy peacock feathers\" for row in rows))\nAssertionError: False is not true\n```", "```py\n    self.assertTrue(\n        any(row.text == \"1: Buy peacock feathers\" for row in rows),\n        \"New to-do item did not appear in table\",\n    )\n```", "```py\nAssertionError: False is not true : New to-do item did not appear in table\n```", "```py\n$ git diff\n$ git commit -am \"Front page HTML now generated from a template\"\n```"]