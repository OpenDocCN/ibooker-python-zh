["```py\ndef best_word(word_list):\n \"\"\"\n word_list is a list of words.\n\n Return the word worth the most points.\n \"\"\"\n    best_word = \"\"\n    best_points = 0\n    for word in word_list:       **#1\n        points = num_points(word)\n        if points > best_points:\n            best_word = word\n            best_points = points\n    return best_word**\n```", "```py\n>>> s = 'vacation'\n>>> for char in s:       #1\n...     print('Next letter is', char)    #2\n...\nNext letter is v\nNext letter is a\nNext letter is c\nNext letter is a\nNext letter is t\nNext letter is i\nNext letter is o\nNext letter is n\n```", "```py\n>>> lst = ['cat', 'dog', 'bird', 'fish']\n>>> for animal in lst:               #1\n...     print('Got', animal)       #2\n...     print('Hello,', animal)   ** #2\n...\nGot cat\nHello, cat\nGot dog\nHello, dog\nGot bird\nHello, bird\nGot fish\nHello, fish**\n```", "```py\n>>> list(range(3, 9))     #1\n[3, 4, 5, 6, 7, 8]\n```", "```py\n>>> lst\n['cat', 'dog', 'bird', 'fish'] \n>>> list(range(0, len(lst)))      #1\n[0, 1, 2, 3]\n```", "```py\n>>> for index in range(0, len(lst)):        #1\n...     print('Got', lst[index])        #2\n...     print('Hello,', lst[index])    ** #2\n...\nGot cat\nHello, cat\nGot dog\nHello, dog\nGot bird\nHello, bird\nGot fish\nHello, fish**\n```", "```py\nfor index in range(len(lst)):    #1\n    print('Got', lst[index])\n    print('Hello,', lst[index])\n```", "```py\ndef get_strong_password():\n \"\"\"\n Keep asking the user for a password until itâ€™s a strong password,\n and return that strong password.\n \"\"\"\n    password = input(\"Enter a strong password: \")\n    while not is_strong_password(password):           #1\n        password = input(\"Enter a strong password: \")\n    return password\n```", "```py\n>>> lst\n['cat', 'dog', 'bird', 'fish'] \n>>> index = 0\n>>> while index < len(lst):        #1\n...     print('Got', lst[index])\n...     print('Hello,', lst[index])\n...     index += 1          #2\n...\nGot cat\nHello, cat\nGot dog\nHello, dog\nGot bird\nHello, bird\nGot fish\nHello, fish\n```", "```py\nhour = int(input('Please enter the current hour from 0 to 23: '))\n\nif hour < 12:\n    print('Good morning!')\n    print('Have a nice day.')\nelif hour < 18:\n    print('Good afternoon!')\nelse:\n    print('Good evening!')\nprint('Have a good night.')     #1\n```", "```py\ndef larger(num1, num2):\n    if num1 > num2:       #1\n        return num1    #2\n    else:                 #3\n        return num2       #4\n```", "```py\ndef num_points(word): \n \"\"\" \n Each letter is worth the following points: \n a, e, i, o, u, l, n, s, t, r: 1 point \n d, g: 2 points \n b, c, m, p: 3 points \n f, h, v, w, y: 4 points \n k: 5 points \n j, x: 8 points \n q, z: 10 points \n\n word is a word consisting of lowercase characters. \n Return the sum of points for each letter in word. \n \"\"\"\n    points = 0\n    for char in word:            #1\n        if char in \"aeioulnstr\":     #2\n            points += 1          #3\n        elif char in \"dg\":\n            points += 2\n        elif char in \"bcmp\":\n            points += 3\n        elif char in \"fhvwy\":\n            points += 4\n        elif char == \"k\":\n            points += 5\n        elif char in \"jx\":\n            points += 8\n        elif char in \"qz\":\n            points += 10\n    return points\n```", "```py\ndef is_strong_password(password):\n \"\"\"\n A strong password has at least one uppercase character,\n at least one number, and at least one punctuation.\n\n Return True if the password is a strong password, \n False if not.\n \"\"\"\n    return any(char.isupper() for char in password) and \\     #1\n           any(char.isdigit() for char in password) and \\     #2\n           any(char in string.punctuation for char in password)\n```", "```py\n def num_points(word): \n \"\"\" \n Each letter is worth the following points: \n a, e, i, o, u, l, n, s, t, r: 1 point \n d, g: 2 points \n b, c, m, p: 3 points \n f, h, v, w, y: 4 points \n k: 5 points \n j, x: 8 points \n q, z: 10 points \n\n word is a word consisting of lowercase characters. \n Return the sum of points for each letter in word. \n \"\"\" \n    points = {'a': 1, 'e': 1, 'i': 1, 'o': 1, 'u': 1, 'l': 1,     #1\n              'n': 1, 's': 1, 't': 1, 'r': 1,        #2\n              'd': 2, 'g': 2,\n              'b': 3, 'c': 3, 'm': 3, 'p': 3,\n              'f': 4, 'h': 4, 'v': 4, 'w': 4, 'y': 4,\n              'k': 5,\n              'j': 8, 'x': 8,\n              'q': 10, 'z': 10}\n    return sum(points[char] for char in word)\n```", "```py\n>>> countries = ['Canada', 'USA', 'Japan']\n>>> for country in countries:       #1\n...     print(country)\n...\nCanada\nUSA\nJapan\n>>> for country in countries:      #2\n...     print(country)\n...\nCanada\nUSA\nJapan\n```", "```py\n>>> for country1 in countries:            #1\n...     for country2 in countries:        #2\n...         print(country1, country2)    #3\n...\nCanada Canada\nCanada USA\nCanada Japan\nUSA Canada\nUSA USA\nUSA Japan\nJapan Canada\nJapan USA\nJapan Japan\n```", "```py\n>>> medals = [[2, 0, 2],\n...           [1, 2, 0],\n...           [1, 1, 0],\n...           [0, 1, 0],\n...           [1, 0, 0]]\n```", "```py\n>>> medals[0]    #1\n[2, 0, 2]\n>>> medals[1]    **#2\n[1, 2, 0]\n>>> medals[-1]    **#3\n[1, 0, 0]****\n```", "```py\n>>> for country_medals in medals:     #1\n...     print(country_medals)\n...\n[2, 0, 2]\n[1, 2, 0]\n[1, 1, 0]\n[0, 1, 0]\n[1, 0, 0]\n```", "```py\n>>> medals[0][0]   #1\n2\n>>> medals[0][1]    #2\n0\n>>> medals[1][0]    #3\n1\n```", "```py\n>>> for i in range(len(medals)):          #1\n...     for j in range(len(medals[i])):      #2\n...             print(i, j, medals[i][j])\n...\n0 0 2\n0 1 0\n0 2 2\n1 0 1\n1 1 2\n1 2 0\n2 0 1\n2 1 1\n2 2 0\n3 0 0\n3 1 1\n3 2 0\n4 0 1\n4 1 0\n4 2 0\n```", "```py\n>>> freq = {'DNA': 11, 'acquire': 11, 'Taxxon': 13, \\\n... 'Controller': 20, 'morph': 41}\n```", "```py\n>>> freq\n{'DNA': 11, 'acquire': 11, 'Taxxon': 13, 'Controller': 20, 'morph': 41}\n>>> freq.keys()                **#1\ndict_keys(['DNA', 'acquire', 'Taxxon', 'Controller', 'morph'])\n>>> freq.values()                   #2\ndict_values([11, 11, 13, 20, 41])\n>>> freq.pop('Controller')         #3\n20\n>>> freq\n{'DNA': 11, 'acquire': 11, 'Taxxon': 13, 'morph': 41}**\n```", "```py\n>>> freq['dna']  # Oops, wrong key name because it is case sensitive\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nKeyError: 'dna'\n>>> freq['DNA']       #1\n11\n>>> freq['morph']\n41\n```", "```py\n>>> freq['morph'] = 6     #1\n>>> freq\n{'DNA': 11, 'acquire': 11, 'Taxxon': 13, 'morph': 6}\n```", "```py\n>>> for word in freq:                         #1\n...     print('Word', word, 'has frequency', freq[word])    #2\n...\nWord DNA has frequency 11\nWord acquire has frequency 11\nWord Taxxon has frequency 13\nWord morph has frequency 6\n```", "```py\n>>> nfl_file = open('nfl_offensive_stats.csv')\n```", "```py\n>>> nfl_file = open('nfl_offensive_stats.csv', 'r')\n```", "```py\n>>> line = nfl_file.readline()     #1\n>>> line\n'game_id,player_id,position,player,team,pass_cmp,pass_att,pass_yds,pass_td,pass_int,pass_sacked,pass_sacked_yds,pass_long,pass_rating,rush_att,\nrush_yds,rush_td,rush_long,targets,rec,rec_yds,rec_td,rec_long,\nfumbles_lost,rush_scrambles,designed_rush_att,comb_pass_rush_play,\ncomb_pass_play,comb_rush_play,Team_abbrev,Opponent_abbrev,two_point_conv,\ntotal_ret_td,offensive_fumble_recovery_td,pass_yds_bonus,rush_yds_bonus,\nrec_yds_bonus,Total_DKP,Off_DKP,Total_FDP,Off_FDP,Total_SDP,Off_SDP,\npass_target_yds,pass_poor_throws,pass_blitzed,pass_hurried,\nrush_yds_before_contact,rush_yac,rush_broken_tackles,rec_air_yds,rec_yac,\nrec_drops,offense,off_pct,vis_team,home_team,vis_score,home_score,OT,Roof,\nSurface,Temperature,Humidity,Wind_Speed,Vegas_Line,Vegas_Favorite,\nOver_Under,game_date\\n'\n```", "```py\n>>> lst = line.split(',')    #1\n>>> len(lst)\n69\n```", "```py\n>>> lst[0]\n'game_id'\n>>> lst[1]\n'player_id'\n>>> lst[2]\n'position '     #1\n>>> lst[3]\n'player'\n>>> lst[7]\n'pass_yds'\n```", "```py\n>>> line = nfl_file.readline()\n>>> lst = line.split(',')\n>>> lst[3]\n'Aaron Rodgers'\n>>> lst[7]\n'203'\n```", "```py\n>>> nfl_file.close()\n```", "```py\nnfl_file = open('nfl_offensive_stats.csv')\npassing_yards = {}                    #1\n\nfor line in nfl_file:                #2\n    lst = line.split(',')\n    if lst[2] == 'QB':               #3\n        if lst[3] in passing_yards:                   #4\n            passing_yards[lst[3]] += int(lst[7])      #5\n        else:                                         #6\n            passing_yards[lst[3]] = int(lst[7])       #7\n\nnfl_file.close()\n\nfor player in sorted(passing_yards, \n                     key=passing_yards.get, \n                     reverse=True):         #8\n    print(player, passing_yards[player])\n```", "```py\n# import the csv module\nimport csv\n\n# open the csv file\nwith open('nfl_offensive_stats.csv', 'r') as f:    #1\n    # read the csv data\n    data = list(csv.reader(f))    #2\n\n# create a dictionary to hold the player name and passing yards\npassing_yards = {}\n\n# loop through the data\nfor row in data:                  #3\n    # check if the player is a quarterback\n    if row[2] == 'QB':\n        # check if the player is already in the dictionary\n        if row[3] in passing_yards:\n            # add the passing yards to the existing value\n            passing_yards[row[3]] += int(row[7])\n        else:\n            # add the player to the dictionary\n            passing_yards[row[3]] = int(row[7])\n\nfor player in sorted(passing_yards, key=passing_yards.get, reverse=True):\n    print(player, passing_yards[player])\n```", "```py\nActor Name, Age\nAnne Hathaway, 40\nDaniel Radcliffe, 33\n```", "```py\nChore, Finished?\nClean dishes, Yes\nRead Chapter 6, No\n```", "```py\n>>> import zipfile\n>>> zf = zipfile.ZipFile('my_stuff.zip', 'w',\n    â†ª zipfile.ZIP_DEFLATED)     **#1\n>>> zf.write('nfl_offensive_stats.csv')       #2\n>>> zf.write('actors.csv')       #3\n>>> zf.write('chores.csv')   #4\n>>> zf.close()**\n```", "```py\nlst = ['cat', 'dog', 'bird', 'fish']\n\nfor index in range(len(lst)):\n    print('Got', lst[index])\n    if lst[index] == 'bird':\n        print('Found the bird!')\n    print('Hello,', lst[index])\n```", "```py\nlst = ['cat', 'dog', 'bird', 'fish']\n\nindex = 0\nwhile index < len(lst):\n    print('Got', lst[index])\n    print('Hello,', lst[index])\n```", "```py\n index += 1\n while index < len(numbers) and numbers[index] != 7:\n index = 0\n numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n print(numbers[index])\n```", "```py\ndef print_quarterbacks():\n    nfl_file = open('nfl_offensive_stats.csv')\n    for line in nfl_file:\n        lst = line.split(',')\n        if lst[2] == 'QB':\n            print(f\"{lst[3]}: {lst[7]} passing yards\")\n    nfl_file.close()\n```", "```py\n                          Actor Name, Age\n                          Anne Hathaway, 40\n                          Daniel Radcliffe, 33\n\n            ```", "```py\n                          Chore, Finished?\n                          Clean dishes, Yes\n                          Read Chapter 6, No\n\n            ```"]