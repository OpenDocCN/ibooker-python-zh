["```py\ndef print_lyrics():\n    print(\"I'm a lumberjack, and I'm okay.\")\n    print(\"I sleep all night and I work all day.\") \n```", "```py\nprint_lyrics \n```", "```py\n<function __main__.print_lyrics()> \n```", "```py\nprint_lyrics() \n```", "```py\nI'm a lumberjack, and I'm okay.\nI sleep all night and I work all day. \n```", "```py\ndef print_twice(string):\n    print(string)\n    print(string) \n```", "```py\nprint_twice('Dennis Moore, ') \n```", "```py\nDennis Moore, \nDennis Moore, \n```", "```py\nstring = 'Dennis Moore, '\nprint(string)\nprint(string) \n```", "```py\nDennis Moore, \nDennis Moore, \n```", "```py\nline = 'Dennis Moore, '\nprint_twice(line) \n```", "```py\nDennis Moore, \nDennis Moore, \n```", "```py\ndef repeat(word, n):\n    print(word * n) \n```", "```py\nspam = 'Spam, '\nrepeat(spam, 4) \n```", "```py\nSpam, Spam, Spam, Spam, \n```", "```py\ndef first_two_lines():\n    repeat(spam, 4)\n    repeat(spam, 4) \n```", "```py\nfirst_two_lines() \n```", "```py\nSpam, Spam, Spam, Spam, \nSpam, Spam, Spam, Spam, \n```", "```py\ndef last_three_lines():\n    repeat(spam, 2)\n    print('(Lovely Spam, Wonderful Spam!)')\n    repeat(spam, 2) \n```", "```py\nlast_three_lines() \n```", "```py\nSpam, Spam, \n(Lovely Spam, Wonderful Spam!)\nSpam, Spam, \n```", "```py\ndef print_verse():\n    first_two_lines()\n    last_three_lines() \n```", "```py\nprint_verse() \n```", "```py\nSpam, Spam, Spam, Spam, \nSpam, Spam, Spam, Spam, \nSpam, Spam, \n(Lovely Spam, Wonderful Spam!)\nSpam, Spam, \n```", "```py\nfor i in range(2):\n    print(i) \n```", "```py\n0\n1 \n```", "```py\nfor i in range(2):\n    print(\"Verse\", i)\n    print_verse()\n    print() \n```", "```py\nVerse 0\nSpam, Spam, Spam, Spam, \nSpam, Spam, Spam, Spam, \nSpam, Spam, \n(Lovely Spam, Wonderful Spam!)\nSpam, Spam, \n\nVerse 1\nSpam, Spam, Spam, Spam, \nSpam, Spam, Spam, Spam, \nSpam, Spam, \n(Lovely Spam, Wonderful Spam!)\nSpam, Spam, \n```", "```py\ndef print_n_verses(n):\n    for i in range(n):\n        print_verse()\n        print() \n```", "```py\ndef cat_twice(part1, part2):\n    cat = part1 + part2\n    print_twice(cat) \n```", "```py\nline1 = 'Always look on the '\nline2 = 'bright side of life.'\ncat_twice(line1, line2) \n```", "```py\nAlways look on the bright side of life.\nAlways look on the bright side of life. \n```", "```py\nprint(cat) \n```", "```py\nNameError: name 'cat' is not defined \n```", "```py\ndef print_twice(string):\n    print(cat)            # NameError\n    print(cat) \n```", "```py\n# This cell tells Jupyter to provide detailed debugging information\n# when a runtime error occurs, including a traceback.\n\n%xmode Verbose \n```", "```py\nException reporting mode: Verbose \n```", "```py\ncat_twice(line1, line2) \n```", "```py\n---------------------------------------------------------------------------\nNameError  Traceback (most recent call last)\nCell In[27], line 1\n----> 1 cat_twice(line1, line2)\n        line1 = 'Always look on the '\n        line2 = 'bright side of life.'\n\nCell In[20], line 3, in cat_twice(part1='Always look on the ', part2='bright side of life.')\n  1 def cat_twice(part1, part2):\n  2     cat = part1 + part2\n----> 3     print_twice(cat)\n        cat = 'Always look on the bright side of life.'\n\nCell In[25], line 2, in print_twice(string='Always look on the bright side of life.')\n  1 def print_twice(string):\n----> 2     print(cat)            # NameError\n  3     print(cat)\n\nNameError: name 'cat' is not defined \n```", "```py\n# This cell tells Jupyter to provide detailed debugging information\n# when a runtime error occurs. Run it before working on the exercises.\n\n%xmode Verbose \n```", "```py\nException reporting mode: Verbose \n```", "```py\n    def print_twice(string):\n        print(cat)\n        print(cat) \n    ```", "```py\nprint_right(\"Monty\")\nprint_right(\"Python's\")\nprint_right(\"Flying Circus\") \n```", "```py\n Monty\n                                Python's\n                           Flying Circus \n```", "```py\ntriangle('L', 5) \n```", "```py\nL\nLL\nLLL\nLLLL\nLLLLL \n```", "```py\nrectangle('H', 5, 4) \n```", "```py\nHHHHH\nHHHHH\nHHHHH\nHHHHH \n```", "```py\nbottle_verse(99) \n```", "```py\n99 bottles of beer on the wall\n99 bottles of beer \nTake one down, pass it around\n98 bottles of beer on the wall \n```", "```py\nfor n in range(99, 0, -1):\n    bottle_verse(n)\n    print() \n```"]