- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Python programming language reconciles many apparent contradictions: elegant
    yet pragmatic, simple yet powerful, it’s very high-level yet doesn’t get in your
    way when you need to fiddle with bits and bytes, and it’s suitable for novice
    programmers and great for experts, too.'
  prefs: []
  type: TYPE_NORMAL
- en: This book is intended for programmers with some previous exposure to Python,
    as well as experienced programmers coming to Python for the first time from other
    languages. It provides a quick reference to Python itself, the most commonly used
    parts of its vast standard library, and a few of the most popular and useful third-party
    modules and packages. The Python ecosystem has grown so much in richness, scope,
    and complexity that a single volume can no longer reasonably hope to be encyclopedic.
    Still, the book covers a wide range of application areas, including web and network
    programming, XML handling, database interactions, and high-speed numeric computing.
    It also explores Python’s cross-platform capabilities and the basics of extending
    Python and embedding it in other applications.
  prefs: []
  type: TYPE_NORMAL
- en: How To Use This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While you can read this volume linearly from the beginning, we also aim for
    it to be a useful reference for the working programmer. You may choose to use
    the index to locate items of interest, or to read specific chapters for coverage
    of their particular topics. However you use it, we sincerely hope you enjoy reading
    what represents the fruit of the best part of a year’s work for the team.
  prefs: []
  type: TYPE_NORMAL
- en: The book has five parts, as follows.
  prefs: []
  type: TYPE_NORMAL
- en: Part I, Getting Started with Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 1, “Introduction to Python”](ch01.xhtml#introduction_to_python)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers the general characteristics of the Python language, its implementations,
    where to get help and information, how to participate in the Python community,
    and how to obtain and install Python on your computer(s) or run it in your browser.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2, “The Python Interpreter”](ch02.xhtml#the_python_interpreter)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers the Python interpreter program, its command-line options, and how to
    use it to run Python programs and in interactive sessions. The chapter mentions
    text editors for editing Python programs and auxiliary programs for checking your
    Python sources, along with some full-fledged integrated development environments,
    including IDLE, which comes free with standard Python. The chapter also covers
    running Python programs from the command line.
  prefs: []
  type: TYPE_NORMAL
- en: Part II, Core Python Language and Built-ins
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 3, “The Python Language”](ch03.xhtml#the_python_language)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers Python syntax, built-in data types, expressions, statements, control
    flow, and how to write and call functions.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4, “Object-Oriented Python”](ch04.xhtml#object_oriented_python)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers object-oriented programming in Python.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5, “Type Annotations”](ch05.xhtml#type_annotations)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers how to add type information to your Python code, to gain type hinting
    and autocomplete help from modern code editors and support static type checking
    from type checkers and linters.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6, “Exceptions”](ch06.xhtml#exceptions)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers how to use exceptions for errors and special situations, logging, and
    how to write code to automatically clean up when exceptions occur.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7, “Modules and Packages”](ch07.xhtml#modules_and_packages)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers how Python lets you group code into modules and packages, how to define
    and import modules, and how to install third-party Python packages. This chapter
    also covers working with virtual environments to isolate project dependencies.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8, “Core Built-ins and Standard Library Modules”](ch08.xhtml#core_built_ins_and_standard_library_mod)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers built-in data types and functions, and some of the most fundamental modules
    in the Python standard library (roughly speaking, the set of modules supplying
    functionality that, in some other languages, is built into the language itself).
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9, “Strings and Things”](ch09.xhtml#strings_and_things)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers Python’s facilities for processing strings, including Unicode strings,
    bytestrings, and string literals.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10, “Regular Expressions”](ch10.xhtml#regular_expressions)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers Python’s support for regular expressions.
  prefs: []
  type: TYPE_NORMAL
- en: Part III, Python Library and Extension Modules
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 11, “File and Text Operations”](ch11.xhtml#file_and_text_operations)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers dealing with files and text with many modules from Python’s standard
    library and platform-specific extensions for rich text I/O. This chapter also
    covers issues regarding internationalization and localization.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12, “Persistence and Databases”](ch12.xhtml#persistence_and_databases)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers Python’s serialization and persistence mechanisms and its interfaces
    to DBM databases and relational (SQL-based) databases, particularly the handy
    SQLite that comes with Python’s standard library.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13, “Time Operations”](ch13.xhtml#time_operations)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers dealing with times and dates in Python, with the standard library and
    third-party extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14, “Customizing Execution”](ch14.xhtml#customizing_execution)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers ways to achieve advanced execution control in Python, including execution
    of dynamically generated code and control of garbage collection. This chapter
    also covers some Python internal types, and the specific issue of registering
    “cleanup” functions to execute at program termination time.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15, “Concurrency: Threads and Processes”](ch15.xhtml#concurrency_threads_and_processes)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers Python’s functionality for concurrent execution, both via multiple threads
    running within one process and via multiple processes running on a single machine.^([1](preface01.xhtml#ch01fn1))
    This chapter also covers how to access the process’s environment, and how to access
    files via memory-mapping mechanisms.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 16, “Numeric Processing”](ch16.xhtml#numeric_processing)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers Python’s features for numeric computations, both in standard library
    modules and in third-party extension packages; in particular, how to use decimal
    numbers or fractions instead of the default binary floating-point numbers. This
    chapter also covers how to get and use pseudorandom and truly random numbers,
    and how to speedily process whole arrays (and matrices) of numbers.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 17, “Testing, Debugging, and Optimizing”](ch17.xhtml#testingcomma_debuggingcomma_and_optimiz)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers Python tools and approaches that help you make sure that your programs
    are correct (i.e., that they do what they’re meant to do), find and fix errors
    in your programs, and check and enhance your programs’ performance. This chapter
    also covers the concept of warnings and the Python library module that deals with
    them.
  prefs: []
  type: TYPE_NORMAL
- en: Part IV, Network and Web Programming
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 18, “Networking Basics”](ch18.xhtml#networking_basics)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers the basics of networking with Python.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 19, “Client-Side Network Protocol Modules”](ch19.xhtml#client_side_network_protocol_modules)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers modules in Python’s standard library to write network client programs,
    particularly for dealing with various network protocols from the client side,
    sending and receiving emails, and handling URLs.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 20, “Serving HTTP”](ch20.xhtml#serving_http)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers how to serve HTTP for web applications in Python, using popular third-party
    lightweight Python frameworks leveraging Python’s WSGI standard interface to web
    servers.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 21, “Email, MIME, and Other Network Encodings”](ch21.xhtml#emailcomma_mimecomma_and_other_network)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers how to process email messages and other network-structured and encoded
    documents in Python.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 22, “Structured Text: HTML”](ch22.xhtml#structured_text_html)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers popular third-party Python extension modules to process, modify, and
    generate HTML documents.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 23, “Structured Text: XML”](ch23.xhtml#structured_text_xml)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers Python library modules and popular extensions to process, modify, and
    generate XML documents.
  prefs: []
  type: TYPE_NORMAL
- en: Part V, Extending, Distributing, and Version Upgrade and Migration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Chapters 24 and 25 are included in summary form in the print edition of this
    book. You will find the full content of these chapters in the supporting online
    repository, described in [“How to Contact Us”](#how_to_contact_us).
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 24, “Packaging Programs and Extensions”](ch24.xhtml#packaging_programs_and_extensions)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers tools and modules to package and share Python modules and applications.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 25, “Extending and Embedding Classic Python”](ch25.xhtml#extending_and_embedding_classic_python)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers how to code Python extension modules using Python’s C API, Cython, and
    other tools.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 26, “v3.7 to v3.n Migration”](ch26.xhtml#vthreedotsevenen_dashvthreedotn_migrati)'
  prefs: []
  type: TYPE_NORMAL
- en: Covers topics and best practices for planning and deploying version upgrades
    for Python users ranging from individuals to library maintainers to enterprise-wide
    deployment and support staff.
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix, “New Features and Changes in Python 3.7 Through 3.11”](app01.xhtml#new_features_and_changes_in)'
  prefs: []
  type: TYPE_NORMAL
- en: Provides a detailed list of features and changes in Python language syntax and
    the standard library, by version.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following conventions are used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: Reference Conventions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the function/method reference entries, when feasible, each optional parameter
    is shown with a default value using the Python syntax *name=value*. Built-in functions
    need not accept named parameters, so parameter names may not be significant. Some
    optional parameters are best explained in terms of their presence or absence,
    rather than through default values. In such cases, we indicate that a parameter
    is optional by enclosing it in brackets ([]). When more than one argument is optional,
    brackets can be nested.
  prefs: []
  type: TYPE_NORMAL
- en: Version Conventions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This book covers changes and features in Python versions 3.7 through 3.11.
  prefs: []
  type: TYPE_NORMAL
- en: 'Python 3.7 serves as the base version for all tables and code examples, unless
    otherwise noted.^([2](preface01.xhtml#ch01fn2)) You will see these notations to
    indicate changes or features added and removed across the range of covered versions:'
  prefs: []
  type: TYPE_NORMAL
- en: 3.x+ marks a feature introduced in version 3.x, not available in prior versions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: -3.x marks a feature removed in version 3.x, available only in prior versions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Typographic Conventions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Please note that, for display reasons, our code snippets and samples may sometimes
    depart from [PEP 8](https://oreil.ly/u0RLL). We do not recommend taking such liberties
    in your code. Instead, use a utility like [black](https://oreil.ly/BM68x) to adopt
    a canonical layout style.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Used for file and directory names, program names, URLs, and to introduce new
    terms.
  prefs: []
  type: TYPE_NORMAL
- en: Constant width
  prefs: []
  type: TYPE_NORMAL
- en: Used for command-line output and code examples, as well as for code elements
    that appear in the text, including methods, functions, classes, and modules.
  prefs: []
  type: TYPE_NORMAL
- en: '*Constant width italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Used to show text to be replaced with user-supplied values in code examples
    and commands.
  prefs: []
  type: TYPE_NORMAL
- en: '**Constant width bold**'
  prefs: []
  type: TYPE_NORMAL
- en: Used for commands to be typed at a system command line and to indicate code
    output in Python interpreter session examples. Also used for Python keywords.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element indicates a warning or caution.
  prefs: []
  type: TYPE_NORMAL
- en: Using Code Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  prefs: []
  type: TYPE_NORMAL
- en: 'We appreciate, but do not require, attribution. An attribution usually includes
    the title, author, publisher, and ISBN. For example: “*Python in a Nutshell*,
    4th ed., by Alex Martelli, Anna Martelli Ravenscroft, Steve Holden, and Paul McGuire.
    Copyright 2023, 978-1-098-11355-1.”'
  prefs: []
  type: TYPE_NORMAL
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [permissions@oreilly.com](mailto:permissions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](https://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-998-9938 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0515 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The book has its own GitHub repository, where we list errata, examples, and
    any additional information. The repository also contains the full content of Chapters
    [24](ch24.xhtml#packaging_programs_and_extensions) and [25](ch25.xhtml#extending_and_embedding_classic_python),
    for which there was insufficient space in the printed volume. You will find it
    at [*https://github.com/pynutshell/pynut4*](https://github.com/pynutshell/pynut4).
  prefs: []
  type: TYPE_NORMAL
- en: We have tested and verified the information in this book to the best of our
    ability, but you may find that features have changed (or even that we have made
    mistakes!). Please let the publisher know about any errors you find, as well as
    your suggestions for future editions.
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly has a web page for this book, where they list errata, examples, and
    any additional information. You can access this page at [*https://oreil.ly/python-nutshell-4e*](https://oreil.ly/python-nutshell-4e).
  prefs: []
  type: TYPE_NORMAL
- en: To comment or ask technical questions about this book, send email to [pynut4@gmail.com](mailto:pynut4@gmail.com).
  prefs: []
  type: TYPE_NORMAL
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on LinkedIn: [*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*https://www.youtube.com/oreillymedia*](https://www.youtube.com/oreillymedia).'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many thanks to O’Reilly editors and staff Amanda Quinn, Brian Guerin, Zan McQuade,
    and Kristen Brown. Special thanks to our editor, Angela Rufino, who did the heavy
    lifting to keep us on track to get this book completed on time! Also, thanks to
    our excellent copyeditor Rachel Head for helping us to seem more erudite than
    we are, and to our production editor, Christopher Faucher, for helping ensure
    the book looked its best in both printed and electronic formats.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks to our hardworking tech reviewers, David Mertz, Mark Summerfield, and
    Pankaj Gaijar, who read through every explanation and example in the book’s draft.
    Without them, this book would not have been as accurate.^([3](preface01.xhtml#ch01fn3))
    All errors that remain are entirely our own.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks also to Luciano Ramalho, the whole PyPy team, Sebastián Ramírez, Fabio
    Pliger, Miguel Grinberg, and the Python Packaging Authority team for their help
    on selected portions of the book, and to Google for its useful Workspace online
    collaboration tools, without which our intense communication (and coordination
    among authors on different continents!) would have been far less easy and efficient.
  prefs: []
  type: TYPE_NORMAL
- en: Last but by no means least, the authors and all readers of this book owe a huge
    debt of thanks to the core developers of the Python language itself, without whose
    heroic efforts there would be no need for this book.
  prefs: []
  type: TYPE_NORMAL
- en: ^([1](preface01.xhtml#ch01fn1-marker)) The separate chapter on asynchronous
    programming in the third edition has been dropped in this edition, deferring to
    more thorough coverage of this growing topic in references found in [Chapter 15](ch15.xhtml#concurrency_threads_and_processes).
  prefs: []
  type: TYPE_NORMAL
- en: ^([2](preface01.xhtml#ch01fn2-marker)) For example, to accommodate the widespread
    changes in Python 3.9 and 3.10 in type annotations, most of [Chapter 5](ch05.xhtml#type_annotations)
    uses Python 3.10 as the base version for features and examples.
  prefs: []
  type: TYPE_NORMAL
- en: ^([3](preface01.xhtml#ch01fn3-marker)) Nor would it have so many footnotes!
  prefs: []
  type: TYPE_NORMAL
