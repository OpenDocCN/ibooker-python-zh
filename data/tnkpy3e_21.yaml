- en: 19\. Final thoughts#
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 19. 最后的思考#
- en: 原文：[https://allendowney.github.io/ThinkPython/chap19.html](https://allendowney.github.io/ThinkPython/chap19.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://allendowney.github.io/ThinkPython/chap19.html](https://allendowney.github.io/ThinkPython/chap19.html)
- en: Learning to program is not easy, but if you made it this far, you are off to
    a good start. Now I have some suggestions for ways you can keep learning and apply
    what you have learned.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 学习编程并不容易，但如果你已经走到了这一步，你已经打下了一个良好的基础。现在，我有一些建议，可以帮助你继续学习并应用所学的知识。
- en: This book is meant to be a general introduction to programming, so we have not
    focused on specific applications. Depending on your interests, there are any number
    of areas where you can apply your new skills.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在为编程提供一个通用的入门介绍，因此我们没有专注于具体应用。根据你的兴趣，使用你新学到的技能可以应用到任何领域。
- en: 'If you are interested in Data Science, there are three books of mine you might
    like:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对数据科学感兴趣，我有三本书你可能会喜欢：
- en: '*Think Stats: Exploratory Data Analysis*, O’Reilly Media, 2014.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Think Stats: Exploratory Data Analysis*，O''Reilly Media，2014年。'
- en: '*Think Bayes: Bayesian Statistics in Python*, O’Reilly Media, 2021.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Think Bayes: Bayesian Statistics in Python*，O''Reilly Media，2021年。'
- en: '*Think DSP: Digital Signal Processing in Python*, O’Reilly Media, 2016.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Think DSP: Digital Signal Processing in Python*，O''Reilly Media，2016年。'
- en: 'If you are interested in physical modeling and complex systems, you might like:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对物理建模和复杂系统感兴趣，你可能会喜欢：
- en: '*Modeling and Simulation in Python: An Introduction for Scientists and Engineers*,
    No Starch Press, 2023.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Modeling and Simulation in Python: An Introduction for Scientists and Engineers*，No
    Starch Press，2023年。'
- en: '*Think Complexity: Complexity Science and Computational Modeling*, O’Reilly
    Media, 2018.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Think Complexity: Complexity Science and Computational Modeling*，O''Reilly
    Media，2018年。'
- en: These use NumPy, SciPy, pandas, and other Python libraries for data science
    and scientific computing.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这些书籍使用了NumPy、SciPy、pandas以及其他用于数据科学和科学计算的Python库。
- en: 'This book tries to find a balance between general principles of programming
    and details of Python. As a result, it does not include every feature of the Python
    language. For more about Python, and good advice about how to use it, I recommend
    *Fluent Python: Clear, Concise, and Effective Programming*, second edition by
    Luciano Ramalho, O’Reilly Media, 2022.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '本书试图在编程的通用原则和Python的细节之间找到平衡。因此，它并没有涵盖Python语言的所有特性。关于Python的更多内容以及使用它的良好建议，我推荐由Luciano
    Ramalho编写的*Fluent Python: Clear, Concise, and Effective Programming*，第二版，O''Reilly
    Media，2022年。'
- en: After an introduction to programming, a common next step is to learn about data
    structures and algorithms. I have a work in progress on this topic, called *Data
    Structures and Information Retrieval in Python*. A free electronic version is
    available from Green Tea Press at [https://greenteapress.com](https://greenteapress.com).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习编程之后，一个常见的下一步是学习数据结构和算法。我目前正在进行相关工作，名为*Data Structures and Information Retrieval
    in Python*。该书的免费电子版可以在Green Tea Press网站上获得：[https://greenteapress.com](https://greenteapress.com)。
- en: 'As you work on more complex programs, you will encounter new challenges. You
    might find it helpful to review the sections in this book about debugging. In
    particular, remember the Six R’s of debugging from [Chapter 12](chap12.html#section-debugging-12):
    reading, running, ruminating, rubber-ducking, retreating, and resting.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当你处理更复杂的程序时，你将会遇到新的挑战。你可能会觉得回顾本书中关于调试的章节很有帮助。特别是，记住[第12章](chap12.html#section-debugging-12)中的调试六个R法则：阅读、运行、反思、橡皮鸭调试、撤退和休息。
- en: This book suggests tools to help with debugging, including the `print` and `repr`
    functions, the `structshape` function in [Chapter 11](chap11.html#section-debugging-11)
    – and the built-in functions `isinstance`, `hasattr`, and `vars` in [Chapter 14](chap14.html#section-debugging-14).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本书建议了一些调试工具，包括`print`和`repr`函数，[第11章](chap11.html#section-debugging-11)中的`structshape`函数，以及[第14章](chap14.html#section-debugging-14)中的内建函数`isinstance`、`hasattr`和`vars`。
- en: It also suggests tools for testing programs, including the `assert` statement,
    the `doctest` module, and the `unittest` module. Including tests in your programs
    is one of the best ways to prevent and detect errors, and save time debugging.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 它还建议了一些用于测试程序的工具，包括`assert`语句、`doctest`模块和`unittest`模块。在程序中加入测试是预防和发现错误、节省调试时间的最佳方法之一。
- en: But the best kind of debugging is the kind you don’t have to do. If you use
    an incremental development process as described in [Chapter 6](chap06.html#section-incremental)
    – and test as you go – you will make fewer errors and find them more quickly when
    you do. Also, remember encapsulation and generalization from [Chapter 4](chap04.html#section-encapsulation),
    which is particularly useful when you are developing code in Jupyter notebooks.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 但最好的调试方式是你根本不需要调试。如果你按照[第6章](chap06.html#section-incremental)中描述的增量开发过程进行开发，并且在过程中不断进行测试，你将会犯更少的错误，并且在出错时能更快找到它们。另外，记得[第4章](chap04.html#section-encapsulation)中提到的封装和泛化，尤其是在你在
    Jupyter notebooks 中开发代码时特别有用。
- en: Throughout this book, I’ve suggested ways to use virtual assistants to help
    you learn, program, and debug. I hope you are finding these tools useful.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我提到了一些使用虚拟助手帮助你学习、编程和调试的方法。我希望这些工具对你有帮助。
- en: In additional to virtual assistants like ChatGPT, you might also want to use
    a tool like Copilot that autocompletes code as you type. I did not recommend using
    these tools, initially, because they can be overwhelming for beginners. But you
    might want to explore them now.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 除了像 ChatGPT 这样的虚拟助手，你可能还想使用像 Copilot 这样的工具，在你输入代码时自动完成。我最初没有推荐使用这些工具，因为它们对于初学者来说可能会让人感到不知所措。但现在你可以尝试一下。
- en: Using AI tools effectively requires some experimentation and reflection to find
    a flow that works for you. If you think it’s a nuisance to copy code from ChatGPT
    to Jupyter, you might prefer something like Copilot. But the cognitive work you
    do to compose a prompt and interpret the response can be as valuable as the code
    the tool generates, in the same vein as rubber duck debugging.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 有效使用 AI 工具需要一些实验和反思，以找到适合自己的工作方式。如果你觉得从 ChatGPT 复制代码到 Jupyter 很麻烦，你可能会更喜欢像 Copilot
    这样的工具。但你用来编写提示和解释回应的认知工作，可能和工具生成的代码一样有价值，就像橡胶鸭调试一样。
- en: As you gain programming experience, you might want to explore other development
    environments. I think Jupyter notebooks are a good place to start, but they are
    relatively new and not as widely-used as conventional integrated development environments
    (IDE). For Python, the most popular IDEs include PyCharm and Spyder – and Thonny,
    which is often recommended for beginners. Other IDEs, like Visual Studio Code
    and Eclipse, work with other programming languages as well. Or, as a simpler alternative,
    you can write Python programs using any text editor you like.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你编程经验的积累，你可能想要探索其他开发环境。我认为 Jupyter notebook 是一个不错的起点，但它相对较新，并不像传统的集成开发环境（IDE）那样广泛使用。对于
    Python，最流行的 IDE 包括 PyCharm 和 Spyder，还有 Thonny，通常推荐给初学者。其他 IDE，如 Visual Studio
    Code 和 Eclipse，也支持其他编程语言。或者，作为一种更简单的选择，你可以使用任何你喜欢的文本编辑器来编写 Python 程序。
- en: As you continue your programming journey, you don’t have to go alone! If you
    live in or near a city, there’s a good chance there is a Python user group you
    can join. These groups are usually friendly to beginners, so don’t be afraid.
    If there is no group near you, you might be able to join events remotely. Also,
    keep an eye out for regional Python conferences.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在你继续编程之旅的过程中，你不必孤单前行！如果你住在城市里或附近，很可能有一个 Python 用户组可以加入。这些小组通常对初学者非常友好，所以不要害怕。如果你所在的地方没有这样的群体，你也许可以远程参与活动。另外，留意本地区的
    Python 会议。
- en: One of the best ways to improve your programming skills is to learn another
    language. If you are interested in statistics and data science, you might want
    to learn R. But I particularly recommend learning a functional language like Racket
    or Elixir. Functional programming requires a different kind of thinking, which
    changes the way you think about programs.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 提高编程技能的最好方法之一就是学习另一种语言。如果你对统计学和数据科学感兴趣，你可能想学习 R。但是我特别推荐学习像 Racket 或 Elixir 这样的函数式编程语言。函数式编程需要一种不同的思维方式，这改变了你对程序的思考方式。
- en: Good luck!
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你好运！
- en: '[Think Python: 3rd Edition](https://allendowney.github.io/ThinkPython/index.html)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[Think Python: 第3版](https://allendowney.github.io/ThinkPython/index.html)'
- en: Copyright 2024 [Allen B. Downey](https://allendowney.com)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 版权所有 2024 [Allen B. Downey](https://allendowney.com)
- en: 'Code license: [MIT License](https://mit-license.org/)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 代码许可证：[MIT 许可证](https://mit-license.org/)
- en: 'Text license: [Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International](https://creativecommons.org/licenses/by-nc-sa/4.0/)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 文本许可证：[知识共享署名-非商业性使用-相同方式共享 4.0 国际](https://creativecommons.org/licenses/by-nc-sa/4.0/)
