- en: 'Chapter 4\. List of Files: *Functions, Modules & Files*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章。文件列表：*函数、模块与文件*
- en: '![Image](assets/ch03-1-01.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-1-01.png)'
- en: '**Your code can’t live in a notebook forever. It wants to be free.** And when
    it comes to freeing your code and **sharing** it with others, a bespoke **function**
    is the first step, followed shortly thereafter by a **module,** which lets you
    organize and share your code. In this chapter, you’ll create a function directly
    from the code you’ve written so far, and in the process create a **shareable**
    module, too. You’ll immediately put your module to work as you process the Coach’s
    swim data with **for** loops, **if** statements, conditional tests, and the **PSL**
    (Python’s *Standard Library*). You’ll learn how to **comment** your functions,
    too (which is always a *good idea*). There’s lots to be done, so let’s get to
    it!'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**你的代码不能永远留在笔记本中。它想要自由。** 当谈到解放你的代码并与其他人**共享**时，一个定制的**函数**是第一步，紧随其后的是一个**模块**，它让你组织和分享你的代码。在本章中，你将直接从到目前为止编写的代码中创建一个函数，并在此过程中创建一个**可共享的**模块。你将立即使用你的模块处理教练的游泳数据，使用**for**循环、**if**语句、条件测试和**PSL**（Python的*标准库*）。你还将学习如何为你的函数添加**注释**（这总是一个*好主意*）。有很多事情要做，所以让我们开始吧！'
- en: '![Image](assets/ch03-2-01.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-2-01.png)'
- en: Cubicle Conversation
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cubicle Conversation
- en: '**Sam**: I’ve updated the Coach on the progress-to-date.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sam**: 我已经向教练更新了至今为止的进展。'
- en: '**Alex**: And is he happy?'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**: 他满意吗？'
- en: '**Sam**: To a point, yes. He’s thrilled things have started. However, as you
    can imagine, he’s only really interested in the final product, which for the Coach
    is the bar chart.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sam**: 在某种程度上，是的。他对事情已经开始感到高兴。然而，正如你可以想象的那样，他只对最终产品感兴趣，对教练来说，最终产品就是条形图。'
- en: '**Alex**: Which should be easy enough to do now that the most-recent notebook
    produces the data we need, right?'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**: 现在最近的笔记本产生了我们需要的数据，这应该很容易做到，对吧？'
- en: '**Mara**: Well... sort of.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**: 嗯...差不多吧。'
- en: '**Alex**: How come?'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**: 为什么？'
- en: '**Mara**: The current notebook, `Times.ipynb`, produces data for Darius swimming
    the 100m Fly in the Under 13 age group. But, there’s a need to perform the conversions
    and the average calculation for *any* swimmer’s file.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**: 当前的笔记本`Times.ipynb`为13岁以下年龄组的达里乌斯游100米蝶泳提供数据。但是，需要执行转换和平均计算来处理*任何*游泳者的文件。'
- en: '**Alex**: Sure that’s easy: just replace the filename at the top of the notebook
    with another filename, then press the *Run All* button and – voila! – you’ve got
    your data.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**: 当然很简单：只需将笔记本顶部的文件名替换为另一个文件名，然后按下*Run All*按钮，然后 – voila！ – 你就得到了你的数据。'
- en: '**Mara**: And you think the Coach will be happy to do that?'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**: 你认为教练会乐意这样做吗？'
- en: '**Alex**: Errr... I hadn’t thought about how the Coach is going to run this
    stuff.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**: 呃...我没有考虑教练如何运行这些东西。'
- en: '**Sam**: We are heading in the right direction, in that we do need a mechanism
    which works with any swimmer’s filename. If that can be produced, we can get on
    with then creating code for the bar chart.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sam**: 我们正在朝着正确的方向前进，我们确实需要一个可以处理任何游泳者文件名的机制。如果可以做到这一点，我们就可以继续为条形图创建代码了。'
- en: '**Alex**: So we have a ways to go yet...'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**: 所以我们还有一段路要走...'
- en: '**Mara**: Yes, but not far. As you already mentioned, all the code we need
    is in the `Times.ipynb` notebook...'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**: 是的，但还没做到很远。正如你已经提到的，我们需要的所有代码都在`Times.ipynb`笔记本中...'
- en: '**Alex**: ...which you don’t want to give to the Coach...'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**: ...你不想把它给教练...'
- en: '**Mara**: ...well, not it it’s current form.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**: ...好吧，不是它当前的形式。'
- en: '**Alex**: Then how?'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**: 然后怎么办？'
- en: '**Sam**: We need a way to package-up the code so it can be used with any filename
    and accessed outside of the notebook...'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sam**: 我们需要一种方式来打包这段代码，使其可以与任何文件名一起使用，并且可以在笔记本之外访问...'
- en: '**Alex**: Ah, but of course: we need a function!'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**: 啊，当然了：我们需要一个函数！'
- en: '**Sam**: Which gets us part of the way.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sam**: 这使我们进展了一部分。'
- en: '**Mara**: If the function is put inside a Python module it can be shared in
    lots of places.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**: 如果函数放在一个Python模块中，它可以在很多地方共享。'
- en: '**Alex**: Sounds good to me. Where do we start?'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**: 对我来说听起来不错。我们从哪里开始？'
- en: '**Mara**: Let’s start by turning the existing notebook code into a function
    that we can call, then share.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**: 让我们首先将现有的笔记本代码转换成一个可以调用的函数，然后共享。'
- en: How to create a function in Python
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在Python中创建一个函数
- en: 'In addition to the actual code for the function, you need to worry about the
    function’s *signature*. There are three things to keep in mind. You need to:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 除了实际的函数代码之外，你还需要关注函数的*签名*。有三件事需要记住。你需要：
- en: '![Images](assets/1-circle.png) **Think up a nice, meaningful name**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![图像](assets/1-circle.png) **想出一个好的、有意义的名称**'
- en: The code in the `Times.ipynb` notebook first processes the filename, then processes
    the file’s contents to extract the data required by the Coach. So let’s call this
    function `get_swim_data`. It’s a nice name, it’s a meaningful name... golly, it’s
    nearly perfect!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Times.ipynb`笔记本中的代码首先处理文件名，然后处理文件内容以提取教练所需的数据。因此，让我们称这个函数为`get_swim_data`。这是一个很好的名字，是一个有意义的名字...天哪，它几乎是完美的！
- en: '![Images](assets/2-circle.png) **Decide on the number and names of any parameters**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![图像](assets/2-circle.png) **确定任何参数的数量和名称**'
- en: Your new `get_swim_data` function takes a single parameter which identifies
    the filename to use. Let’s call this parameter `fn`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 您的新`get_swim_data`函数接受一个参数，用于标识要使用的文件名。让我们称这个参数为`fn`。
- en: '![Images](assets/3-circle.png) **Indent your function’s code under a def statement**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![图像](assets/3-circle.png) **在def语句下缩进函数的代码**'
- en: The **def** keyword introduces the function, letting you specify the function’s
    name and any parameters. Any code indented under the **def** keyword is the function’s
    code block.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**def**关键字引入了函数，让您可以指定函数的名称和任何参数。在**def**关键字下缩进的任何代码都是函数的代码块。'
- en: Note
  id: totrans-35
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**It can be useful to think of “def” as shorthand for “define function”.**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**把“def”看作“定义函数”的简写可能会很有用。**'
- en: Be sure to add a comment to your function
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 请务必向您的函数添加注释
- en: 'Full disclosure: we told a little white lie... we’ve led you up the garden
    path to believe all you need to do is copy your code into your function, suitably
    indented. But, you should *also* add a comment to the start of your function.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 全部披露：我们说了一小白谎...我们让你误以为你只需要将代码复制到函数中，适当缩进即可。但是，您还应该在函数开头添加注释。
- en: You’ve already seen how a single `**#**` character switches on a single-line
    comment in your code. When you need to add a multi-line comment, you can enclose
    your comment in **triple-quotes** which, believe it or not, is *also* a string
    object.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经看到一个单独的`**#**`字符如何在代码中开启单行注释。当您需要添加多行注释时，您可以将注释括在**三引号**中，信不信由你，它也是一个字符串对象。
- en: Note
  id: totrans-40
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**A string can span many lines when your surround it with triple-quotes.**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**当您用三引号括起时，一个字符串可以跨越多行。**'
- en: 'When Python encounters a string object which isn’t assigned to a variable name,
    it’s simply ignored, which makes using a triple-quoted string *perfect* for multi-line
    comments. Here’s an example:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当Python遇到未分配给变量名的字符串对象时，它会简单地忽略它，这使得使用三引号括起的字符串非常适合多行注释。这里是一个例子：
- en: '![Image](assets/ch03-4-01.png)![Image](assets/ch03-4-02.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/ch03-4-01.png)![图像](assets/ch03-4-02.png)'
- en: '**Great question (and well spotted).**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**很好的问题（发现得也很好）。**'
- en: 'The **tuple** is one of Python’s built-in data structures, which you briefly
    met in [Chapter 1](ch01.xhtml#why_pythonquestion_mark_similar_but_diff). Back
    then we over-generalized a little, suggesting tuples were quite like lists. We’ll
    have more to say about tuples later in this book. For now, recall what one looks
    like:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**元组**是Python内置的数据结构之一，在[第1章](ch01.xhtml#why_pythonquestion_mark_similar_but_diff)中简要介绍过。当时我们有点过于泛化，暗示元组很像列表。稍后在本书中我们会详细介绍元组。现在，请回忆一下它的样子：'
- en: '![Image](assets/ch03-4-03.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/ch03-4-03.png)'
- en: Now, what’s your second question?
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你的第二个问题是什么？
- en: '![Image](assets/ch03-5-01.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/ch03-5-01.png)'
- en: '**That’s another great observation.**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**这是另一个很好的观察。**'
- en: No, we haven’t forgotten to declare the parameter’s type. In fact, in Python
    you don’t need to declare the types of your parameters, as every function parameter
    can be of *any* type.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 不，我们没有忘记声明参数的类型。事实上，在Python中，您不需要声明参数的类型，因为每个函数参数都可以是*任何*类型。
- en: Python is a *dynamically-typed* language. This means, among other things, that
    typing decisions are not made until run-time, which is very unlike those *stodgy*
    statically-typed languages where everything must be known up-front, at compile-time.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Python是一种*动态类型*语言。这意味着，除其他外，类型决策不会在运行时进行，这与那些*古板*的静态类型语言截然不同，在编译时必须了解一切。
- en: Note
  id: totrans-52
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**Depending on your programming background, this might strike you as controversial.
    Our advise is not to let this worry you. This page’s “Geek Note” discusses a Python
    3 feature which can be thought of as meeting the statically-typed die-hards half-way.**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**根据您的编程背景，这可能使您感到有争议。我们的建议是不要让这件事困扰您。本页的“极客注”讨论了一个Python 3功能，可以被认为是在静态类型坚定派中间。**'
- en: Create a file for your function’s code
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为您函数的代码创建一个文件
- en: There’s nothing stopping you defining any function within a Jupyter Notebook
    code cell. In fact, when you are trying to work out what code you need to create,
    experimenting in a notebook *first* is our recommended approach.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Jupyter Notebook 的代码单元格中，你可以定义任何函数。实际上，当你试图确定需要创建的代码时，首先在笔记本中进行实验是我们推荐的方法。
- en: '![Image](assets/ch03-6-01.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-6-01.png)'
- en: However, all the code you need to add to your `get_swim_data` function already
    exists in your `Times.ipynb` notebook, so there’s no need for any further experimentation.
    Instead, let’s use VS Code to create a new Python file called `swimclub.py`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你在 `Times.ipynb` 笔记本中已经有了添加到 `get_swim_data` 函数中的所有必要代码，所以不需要进一步的实验。相反，让我们使用
    VS Code 创建一个名为 `swimclub.py` 的新 Python 文件。
- en: Note
  id: totrans-58
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**In VS Code, select “File”, then “New File”, then select “Python File” as
    the type. When an empty editing window appears, save the file as “swimclub.py”.
    (And be sure to save the file into your existing “Learning” folder).**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**在 VS Code 中，选择“文件”，然后“新建文件”，然后选择“Python 文件”作为类型。当出现空编辑窗口时，将文件保存为“swimclub.py”（并确保将文件保存到你现有的“学习”文件夹中）。**'
- en: 'Here’s the code we copied into `swimclub.py`, which we’ve applied a few minor
    tweaks to (note the annotations):'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们复制到 `swimclub.py` 中的代码，我们对其进行了一些微小的调整（请注意注释）：
- en: '![Image](assets/ch03-6-02.png)![Image](assets/ch03-7-01.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-6-02.png)![Image](assets/ch03-7-01.png)'
- en: '**Yes, that’s it exactly.**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**是的，完全正确。**'
- en: There’s just a small addition to apply to the function’s code to ensure it’s
    really useful.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 只需对函数的代码进行一点小修改，确保它真的有用。
- en: Functions can return results to their calling code
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数可以将结果返回给它们的调用代码
- en: In addition to accepting data *on the way in*, function’s can deliver data to
    the code which invoked them (aka data *on the way out*). Arguments sent into a
    function are assigned to the parameter names defined in the function’s signature,
    whereas any results are sent back to the calling code with a **return** statement.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在传入数据时接受数据 *外*，函数还可以将数据传递给调用它们的代码（也就是在传出数据 *时*）。发送到函数中的参数将被分配给函数签名中定义的参数名称，而任何结果将通过
    **return** 语句返回到调用代码。
- en: Update and save your code before continuing...
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在继续之前更新并保存你的代码...
- en: 'Before moving onto the next page, be sure to add the following line of code
    as the last line in your `get_swim_data` function within your `swimclub.py` file.
    Be careful to match the indentation of this line of code with the indentation
    used for all the other code in your function:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在转到下一页之前，请确保在你的 `swimclub.py` 文件中的 `get_swim_data` 函数的最后一行添加以下代码行。请小心匹配此代码行的缩进，以与函数中的所有其他代码使用的缩进相匹配：
- en: '![Image](assets/ch03-8-03.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-8-03.png)'
- en: Use modules to share code
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用模块来共享代码
- en: 'If you look at the code in your `swimclub.py` file, it consists of a single
    **import** statement, a single constant definition, and a single function. Once
    you move code into its own file, it becomes is a Python *module*. Congratulations:
    you’ve created your first Python module, called swimclub.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看 `swimclub.py` 文件中的代码，你会发现它包含一个单一的 **import** 语句，一个单一的常量定义和一个单一的函数。一旦将代码移入单独的文件中，它就成为了一个
    Python *模块*。恭喜你：你已经创建了你的第一个 Python 模块，名为 swimclub。
- en: '![Image](assets/ch03-9-01.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-9-01.png)'
- en: '**That’s pretty much it.**'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**基本就是这样。**'
- en: Things can get a lot more complex but, as you’ve just seen, creating a **shareable
    module** in Python is as simple as popping some code in a file and giving it a
    name. It’s so easy, there ought to be a law against it. .. ![Image](assets/smile.png)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 事情可能会变得更加复杂，但正如你刚刚看到的那样，在 Python 中创建一个 **可共享的模块** 就像把一些代码放入文件中并给它命名那样简单。如此简单，简直应该有个法律来禁止它。..
    ![Image](assets/smile.png)
- en: '![Image](assets/ch03-10-04.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-10-04.png)'
- en: '**This is a fully qualified name.**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**这是一个完全合格的名称。**'
- en: When you refer to your function with “module DOT function”, you are qualifying
    the name of your function with the name of the module which contains it. This
    is very common in practice, although there are other common importing techniques.
    You’ll see examples of these as you continue to work through this book.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当你用“模块点函数”来引用你的函数时，你是在使用包含它的模块的名称来限定函数的名称。这在实践中非常常见，虽然还有其他常见的导入技术。随着你继续阅读本书，你会看到这些技术的例子。
- en: '![Image](assets/ch03-11-03.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-11-03.png)'
- en: '**Good eye. Well spotted, too.**'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**很好。也注意到了。**'
- en: This may not be the explanation you’re expecting here, but those parentheses
    are meant to be there.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能不是你在这里期待的解释，但这些括号确实是必须的。
- en: Let’s dig into this a little so you can appreciate what’s going on.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们稍微深入一点，这样你就能理解发生了什么。
- en: Functions return a tuple when required
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 当需要时，函数返回一个元组
- en: When you call a function which looks like it returns multiple results, it isn’t.
    Instead, you get back a single tuple containing a collection of results (regardless
    of how many there are).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当你调用一个看起来返回多个结果的函数时，实际上并不是这样。相反，你会得到一个包含所有结果的单个元组（不管有多少结果）。
- en: '![Image](assets/ch03-13-01.png)![Image](assets/ch03-13-02.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/ch03-13-01.png)![图片](assets/ch03-13-02.png)'
- en: '**That’s a great suggestion.**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**这是个好建议。**'
- en: Not that we’re suggesting there’s a bit of mind reading going on here, but it
    is a little spooky we had the same idea...
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们并不是在暗示这里有一些心灵感应的事情发生，但是我们确实有了同样的想法...
- en: '![Image](assets/ch03-17-01.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/ch03-17-01.png)'
- en: '**There’s often a “better” way.**'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**往往有一个“更好”的方法。**'
- en: The code on the last page works and does what you expect it to. (You did try
    it out in your notebook, didn’t you?!?). It is possible to make both examples
    more *Pythonic* with a couple of small changes, which you’ll explore over the
    page.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 上一页的代码是有效的，并且按照你的期望工作。（你确实在笔记本上尝试过了，对吧？！？）通过一些小的变化，你可以使这两个示例更加*Pythonic*，你将在下一页探讨这些变化。
- en: Note
  id: totrans-89
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**“Pythonic”: when code is written to take advantage of what Python has to
    offer, as opposed to Python code which clearly looks like it been written to conform
    to some other programming language’s idea of “the right way”.**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**“Pythonic”：代码利用Python所提供的功能编写，而不是明显看起来是为了符合其他编程语言“正确方式”而编写的Python代码。**'
- en: The hope is, once these changes are applied, your code won’t feel quite so unwieldy.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 希望一旦应用这些变化，你的代码就不会感觉那么笨重了。
- en: '![Image](assets/ch03-20-02.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/ch03-20-02.png)'
- en: '**A list of filenames would be nice.**'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**希望有一个文件名列表。**'
- en: Your `get_swim_data` function, part of the `swimclub` module, takes any swimmer’s
    filename and returns a tuple of results to you.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你的`get_swim_data`函数，属于`swimclub`模块，接受任何游泳者的文件名并将结果作为元组返回给你。
- en: What’s needed need now is the full list of filenames which you should be able
    to get from your underlying operating system. As you can imagine, Python has you
    covered.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在需要的是文件名的完整列表，你应该可以从底层操作系统中获得。Python当然可以帮到你。
- en: Let’s determine the list of filenames
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们确定文件名列表
- en: When it comes to working with your operating system (whether you’re on *Windows*,
    *macOS*, or *Linux*), the PSL has you covered. The `os` module lets your Python
    code talk to your operating system in an platform-independent way, and you’ll
    now use the `os` module to grab a list of the files in the `swimdata` folder.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到操作系统的工作（无论你使用的是*Windows*、*macOS*还是*Linux*），PSL都为你提供了支持。`os`模块让你的Python代码以跨平台的方式与操作系统进行交互，现在你将使用`os`模块获取`swimdata`文件夹中的文件列表。
- en: Be sure to follow along in your `Files.ipynb` notebook.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 记得要在你的`Files.ipynb`笔记本中跟上进展。
- en: '![Image](assets/ch03-21-01.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/ch03-21-01.png)'
- en: 'You want the names of the files in your `swimdata` folder, and the `os` module
    provides the handy-dandy `listdir` function to do just that. When you pass in
    the location of a folder, `listdir` returns a list of all the files it contains:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 你希望知道你的`swimdata`文件夹中的文件名，并且`os`模块提供了方便的`listdir`函数来完成这个任务。当你传入一个文件夹的位置时，`listdir`会返回该文件夹包含的所有文件的列表：
- en: '![Image](assets/ch03-21-02.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/ch03-21-02.png)'
- en: 'You’d be forgiven for expecting the `swim_files` list to contain 60 pieces
    of data. After all, there are 60 files in your folder. However, on our *Mac*,
    we were in for a shock when we double-checked how big `swim_files` is:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 你原以为`swim_files`列表中会有60个数据，这是可以理解的。毕竟，你的文件夹里有60个文件。然而，在我们的*Mac*上，当我们再次检查`swim_files`的大小时，我们感到震惊：
- en: '![Image](assets/ch03-21-03.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/ch03-21-03.png)'
- en: It’s time for a bit of detective work...
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 现在是一些侦探工作的时间...
- en: You were expecting your list of files to have 60 filenames, but the **len**
    BIF is reporting 61 items in your `swim_files` variable.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 你原本以为你的文件列表有60个文件名，但是`len` BIF报告你的`swim_files`变量中有61个项目。
- en: 'In order to begin to try and work out what’s happening here, let’s first display
    the value of `swim_files` list on screen:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 为了试图弄清楚这里到底发生了什么，让我们首先在屏幕上显示`swim_files`列表的值：
- en: '![Image](assets/ch03-22-01.png)![Image](assets/ch03-22-02.png)![Image](assets/ch03-22-03.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/ch03-22-01.png)![图片](assets/ch03-22-02.png)![图片](assets/ch03-22-03.png)'
- en: '**What a great idea.**'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**多好的主意。**'
- en: Let’s use the combo mambo to see what’s built into lists.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用组合输出来查看列表中内置了什么。
- en: What can you do to lists?
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你可以对列表做什么？
- en: 'Here’s the **print dir** combo mambo output for your `swim_files` list:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是你的`swim_files`列表的**print dir**组合输出：
- en: '![Image](assets/ch03-23-01.png)![Image](assets/ch03-23-03.png)![Image](assets/ch03-24-01.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-23-01.png)![Image](assets/ch03-23-03.png)![Image](assets/ch03-24-01.png)'
- en: '**Yes, that’s a potential issue.**'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**是的，这可能是个问题。**'
- en: As the `swimdata.zip` file was initially created on a Mac, the `.DS_Store` file
    was automatically added to the ZIP archive. This type of OS-specific issue is
    always a concern.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`swimdata.zip`文件最初是在Mac上创建的，`.DS_Store`文件被自动添加到了ZIP存档中。这种特定于操作系统的问题总是令人担忧。
- en: Before moving on, it’s important to *remove* that unwanted filename from the
    `swim_files` list.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，重要的是要*移除*`swim_files`列表中不需要的文件名。
- en: '![Image](assets/ch03-25-04.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-25-04.png)'
- en: '**There sure is.**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**确实如此。**'
- en: You’ll get to see most of the list built-in methods in action as you progress
    though this book. However, for now, concentrate on just enough to complete the
    exercise.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在你学习本书时，你会看到大多数内置方法的实际应用。但是现在，专注于完成这个练习所需的部分就可以了。
- en: '![Image](assets/ch03-28-01.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-28-01.png)'
- en: '**That would be nice, wouldn’t it?**'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**那会很好，不是吗？**'
- en: We could throw caution to the wind and dive into creating some bar charts, but
    it might be too soon for that.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以不顾一切地着手创建一些条形图，但现在可能为时尚早。
- en: Your `get_swim_data` function has worked so far, but can you be sure it’ll work
    for *any* swimmer’s file? Let’s spend a moment ensuring our `get_swim_data` function
    works as expected no matter the data file it’s presented with.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你的`get_swim_data`函数已经运行良好，但你能确定它对*任何*游泳者的文件都适用吗？让我们花一点时间确保我们的`get_swim_data`函数如预期般工作，无论它接收到哪种数据文件。
- en: Is the issue with your data or your code?
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是你的数据有问题还是你的代码有问题？
- en: 'Now that you’ve identified the offending file, let’s take a look at its contents
    to see if you can get to the root of the problem. Here’s the `Abi-10-50m-Back.txt`
    file opened in VS Code:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经找出了问题文件，让我们打开它的内容，看看是否能找到问题的根源。这是在VS Code中打开的`Abi-10-50m-Back.txt`文件：
- en: '![Image](assets/ch03-31-01.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-31-01.png)'
- en: Here’s the line of code which is throwing the error. Can you see what the issue
    is?
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这是抛出错误的代码行。你能看出问题在哪里吗？
- en: '![Image](assets/ch03-31-02.png)![Image](assets/ch03-31-03.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![Image](assets/ch03-31-02.png)![Image](assets/ch03-31-03.png)'
- en: '**An incorrect assumption is the problem.**'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**一个错误的假设是问题的根源。**'
- en: Your code, as written, assumes every swim time conforms to the *mins:secs.hundredths*
    format, but this is clearly not the case with Abi’s 50m swim times, and this is
    why you’re getting that `**ValueError**`.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 按照你的代码编写，假定每个游泳时间都符合*分钟：秒.百分秒*的格式，但Abi的50米游泳时间显然不是这种情况，这就是为什么你会遇到`**ValueError**`错误。
- en: Now that you know what the problem is, what’s the solution?
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道问题所在，那解决方案是什么？
- en: Cubicle Conversation
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 小隔间对话
- en: '**Sam**: What are our options here?'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sam**：在这里，我们有什么选择？'
- en: '**Alex**: We could fix the data, right?'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**：我们可以修复数据，对吧？'
- en: '**Mara**: How so?'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**：怎么了？'
- en: '**Alex**: We could pre-process each data file to make sure there’s no missing
    minutes, perhaps by prefixing a zero and a colon when the minutes are missing?
    That way, we won’t have to change any code.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**：我们可以预处理每个数据文件，以确保没有缺少的分钟，也许在分钟数缺失时加上零和冒号作为前缀？这样，我们就不必改动任何代码了。'
- en: '**Mara**: That would work, but...'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**：那样会起作用，但是……'
- en: '**Sam**: ...it would be messy. Also, I’m not too keen to preprocessing all
    the files, as the vast majority won’t need to be changed, which feels like it
    might be wasteful.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sam**：...会很混乱。而且，我不太想要处理所有的文件，因为绝大多数都不需要修改，感觉这可能有些浪费。'
- en: '**Mara**: And although, as a strategy, we wouldn’t have to change any existing
    code, we would have to create the code to do the pre-processing, perhaps as a
    separate utility.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**：虽然作为一个策略，我们不需要改动任何现有的代码，但我们需要创建代码来进行预处理，也许可以作为一个单独的实用工具。'
- en: '**Sam**: Recall, too, that the data is in a fixed format, and that it’s generated
    by the Coach’s smart stopwatch. We really shouldn’t mess with the data, so let’s
    leave it as is.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sam**：还要记得，数据是固定格式的，并且由教练的智能秒表生成。我们确实不应该去修改数据，所以我们最好还是保持原样。'
- en: '**Alex**: So, we’re looking at changing our `get_swim_data` function, then?'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**：那么，我们要修改我们的`get_swim_data`函数了吗？'
- en: '**Mara**: Yes, I think that’s a better strategy.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**：是的，我觉得这是个更好的策略。'
- en: '**Sam**: Me, too.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sam**：我也是。'
- en: '**Alex**: So, what do we need to do?'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**：那么，我们需要做什么？'
- en: '**Mara**: We need to identify where in our code the changes need to be made...'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**：我们需要确定我们的代码中需要进行哪些更改……'
- en: '**Sam**: ...and what those code changes need to be.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sam**：……以及这些代码改动需要做哪些内容。'
- en: '**Alex**: OK, sounds good. So were’s going to take a closer look at our `get_swim_data`
    function so we can decide what code needs to change?'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**Alex**：好的，听起来不错。所以我们要仔细查看我们的`get_swim_data`函数，看看需要改变哪些代码？'
- en: '**Mara**: Yes, then we can use an **if** statement to make a decision based
    on whether or not the swim time currently being processed has a minute value.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mara**：是的，然后我们可以使用一个**if**语句来根据当前处理的游泳时间是否具有分钟值来做出决策。'
- en: '![Image](assets/ch03-32-01.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/ch03-32-01.png)'
- en: Note
  id: totrans-149
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**Flip the page to see our selection.** ![Image](assets/arrow.png)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**翻页看我们的选择。** ![图像](assets/arrow.png)'
- en: Decisions, decisions, decisions
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 决策，决策，决策
- en: 'That’s what **if** statements do, day-in and day-out: they make decisions.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是**if**语句的作用，日复一日：它们做出决策。
- en: '![Image](assets/ch03-35-01.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/ch03-35-01.png)'
- en: '**Yes, that is what’s needed here.**'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '**是的，在这里需要这个。**'
- en: Let’s take a closer look at the two possible swim time formats.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更仔细地看一下两种可能的游泳时间格式。
- en: 'First up, here is one of the times recorded for Darius in his file:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，这是达里奥在他的文件中记录的一个时间：
- en: '`''1:30.96''`'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`''1:30.96''`'
- en: 'And here’s a time taken from Abi’s data:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是阿比的数据中的一个时间：
- en: '`''43.35''`'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`''43.35''`'
- en: 'It’s easy to spot the difference: *Abi’s data doesn’t show any minutes*. With
    this in mind, it’s possible to come up with a condition to check when making a
    decision. Can you work out what it is? (Hint: consider your BFF, the colon).'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 很容易看出区别：*阿比的数据不显示任何分钟*。考虑到这一点，可以提出一个条件来检查在做决策时。你能想出是什么条件吗？（提示：考虑你的好朋友冒号）。
- en: Let’s look for the colon “in” the string
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们在字符串中查找冒号“in”
- en: 'If the colon appears in any swim time string, then the time has a minute value.
    Although strings come with lots of built-in methods, including methods which can
    perform a search, let’s not use any of these here. As searching is such a common
    requirement, Python provides the **in** operator. You’ve seen **in** before, with
    **for**:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如果冒号出现在任何游泳时间字符串中，则该时间具有分钟值。尽管字符串带有许多内置方法，包括可以执行搜索的方法，但在这里我们不要使用任何这些方法。因为搜索是如此常见的需求，Python提供了**in**运算符。你之前见过**in**，在**for**循环中使用过：
- en: Note
  id: totrans-163
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '**The “find” and “index” string methods both perform searching.**'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**“find”和“index”字符串方法都执行搜索。**'
- en: '![Image](assets/ch03-36-01.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/ch03-36-01.png)'
- en: 'Using **in** with **for** identifies the sequence being iterated over. However,
    when **in** is used outside a loop it takes on *searching* powers. Consider these
    example uses of **in**:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**in**与**for**标识正在迭代的序列。然而，当**in**在循环外使用时，它具有*搜索*的功能。考虑以下**in**的使用示例：
- en: '![Image](assets/ch03-36-02.png)![Image](assets/ch03-37-01.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/ch03-36-02.png)![图像](assets/ch03-37-01.png)'
- en: '**We love the** `**in**` **keyword, too.**'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '**我们也喜欢** `**in**` **关键字。**'
- en: It’s a Python superpower.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Python的超能力。
- en: '![Image](assets/ch03-40-03.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/ch03-40-03.png)'
- en: '**Absolutely, after a bit of housekeeping.**'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '**绝对，在稍作整理之后。**'
- en: Be sure to add the above code to your `get_swim_data` function within your `swimclub.py`
    module, and don’t forget to **save** your file.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 确保将以上代码添加到你的`swimclub.py`模块中的`get_swim_data`函数中，并不要忘记**保存**你的文件。
- en: With that done, return to your notebook and follow along with the *Test Drive*
    on the next page.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些后，返回你的笔记本，并跟随下一页的*测试驱动*。
- en: Did you end up with 60 processed files?
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你处理了 60 个文件吗？
- en: You are likely feeling confident that your most recent code is processing all
    the files in your `swimdata` folder. We are, too. However, it is often nice to
    double-check these things. As always, there’s any number of ways to do this, but
    let’s number the results from your **for** loop by adding an enumeration, starting
    from 1, to each line of output displayed on screen.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能对你最近的代码很有信心，它正在处理`swimdata`文件夹中的所有文件。我们也是如此。然而，确认这些事情通常是件好事。总是有很多方法可以做到这一点，但让我们通过为你的**for**循环的结果编号来在屏幕上显示每行输出来实现。
- en: 'To do so, let’s use yet another BIF created for this very purpose called **enumerate**:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，让我们再使用另一个专门为此目的创建的BIF，叫做**enumerate**：
- en: '![Image](assets/ch03-42-01.png)![Image](assets/ch03-43-01.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![图像](assets/ch03-42-01.png)![图像](assets/ch03-43-01.png)'
- en: The Coach’s code is taking shape...
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 教练的代码正在形成中……
- en: Your `swimclub` module is now ready. Given the name of a file which contains
    a collection of swim time strings, your new module can produce usable data. The
    Coach is expecting to see some bar charts created from this data, so let’s dive
    into implementing that functionality in the next chapter.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 您的`swimclub`模块现在已经准备就绪。给定一个包含游泳时间字符串的文件名，您的新模块可以生成可用的数据。教练期望从这些数据中创建一些柱状图，所以让我们在下一章中实现这个功能。
- en: As always, you can move on after you’ve reviewed the chapter summary, then tried
    your hand at this chapter’s crossword.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，在你浏览了本章总结并尝试了本章的填字游戏之后，你可以继续前进。
- en: '![Image](assets/ch03-44-01.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![图片](assets/ch03-44-01.png)'
- en: About the Author
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于作者
- en: '**Paul Barry** has a B.Sc. in Information Systems, as well as an M.Sc. in Computing.
    He also has a postgraduate qualification in Learning and Teaching. Paul has worked
    at The Institute of Technology, Carlow since 1995, and lectured there since 1997\.
    Prior to becoming involved in teaching, Paul spent a decade in the IT industry
    working in Ireland and Canada, with the majority of his work within a healthcare
    setting.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '**保罗·巴里**拥有信息系统学士学位以及计算机硕士学位。他还有教育学与教学的研究生资格。自1995年以来，保罗一直在卡洛技术学院工作，并自1997年起在那里讲课。在从事教学工作之前，保罗在爱尔兰和加拿大的IT行业工作了十年，其中大部分工作是在医疗保健领域。'
