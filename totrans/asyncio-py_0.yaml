- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Python 3.4 introduced the `asyncio` library, and Python 3.5 produced the `async`
    and `await` keywords to use it palatably. These new additions allow so-called
    *asynchronous* programming.
  prefs: []
  type: TYPE_NORMAL
- en: 'All of these new features, which I’ll refer to under the single name *Asyncio*,
    have been received by the Python community somewhat warily; a segment of the community
    seems to see them as complex and difficult to understand. This view is not limited
    to beginners: several high-profile contributors to the Python community have expressed
    doubts about the complexity of the Asyncio API in Python, and educators in the
    community have expressed concern about how best to teach Asyncio to students.'
  prefs: []
  type: TYPE_NORMAL
- en: Most people with a few years’ experience with Python have used threads before,
    and even if you haven’t, you are still likely to have experienced *blocking*.
    For example, if you’ve written programs using the wonderful `requests` library,
    you will surely have noticed that your program pauses for a bit while it does
    `requests.get(url)`; this is blocking behavior.
  prefs: []
  type: TYPE_NORMAL
- en: 'For one-off tasks, this is fine; but if you want to fetch *ten thousand* URLs
    simultaneously, it’s going to be difficult to use `requests`. Large-scale concurrency
    is one big reason to learn and use Asyncio, but the other big attraction of Asyncio
    over preemptive threading is safety: it will be much easier for you to avoid race
    condition bugs with Asyncio.'
  prefs: []
  type: TYPE_NORMAL
- en: 'My goal with this book is to give you a basic understanding of why these new
    features have been introduced and how to use them in your own projects. More specifically,
    I aim to provide the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A critical comparison of `asyncio` and `threading` for concurrent network programming
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An understanding of the new `async/await` language syntax
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A general overview of the new `asyncio` standard library features in Python
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detailed, extended case studies with code, showing how to use a few of the more
    popular Asyncio-compatible third-party libraries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We’ll begin with a story that illustrates the shift in thinking that must accompany
    a transition from threaded to async programming. Then, we’ll take a look at the
    changes that were made in the Python language itself to accommodate async programming.
    Finally, we’ll explore some of the ways in which these new features can be used
    most effectively.
  prefs: []
  type: TYPE_NORMAL
- en: The new Asyncio features are not going to radically change the way you write
    programs. They provide specific tools that make sense only for specific situations;
    but in the right situations, `asyncio` is exceptionally useful. In this book,
    we’re going to explore those situations and how you can best approach them by
    using the new Asyncio features.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '`Constant width`'
  prefs: []
  type: TYPE_NORMAL
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, datatypes, environment
    variables, statements, and keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '**`Constant width bold`**'
  prefs: []
  type: TYPE_NORMAL
- en: Shows commands or other text that should be typed literally by the user.
  prefs: []
  type: TYPE_NORMAL
- en: '*`Constant width italic`*'
  prefs: []
  type: TYPE_NORMAL
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element indicates a warning or caution.
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](http://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, conferences, and our online learning platform. O’Reilly’s
    online learning platform gives you on-demand access to live training courses,
    in-depth learning paths, interactive coding environments, and a vast collection
    of text and video from O’Reilly and 200+ other publishers. For more information,
    please visit [*http://oreilly.com*](http://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-998-9938 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0515 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. It can be accessed at [*https://oreil.ly/using-asyncio-in-python*](https://oreil.ly/using-asyncio-in-python).
  prefs: []
  type: TYPE_NORMAL
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  prefs: []
  type: TYPE_NORMAL
- en: For more information about our books, courses, conferences, and news, see our
    website at [*http://www.oreilly.com*](http://www.oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on Facebook: [*http://facebook.com/oreilly*](http://facebook.com/oreilly)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many thanks to Ashwini Balnaves and Kevin Baker for working through very early
    drafts of this book and providing invaluable feedback. I am deeply grateful to
    Yury Selivanov for making precious time available to review an earlier incarnation
    of this book, when it was first published as an O’Reilly report. Finally, I would
    also like to thank the team at O’Reilly for their excellent editorial support.
  prefs: []
  type: TYPE_NORMAL
