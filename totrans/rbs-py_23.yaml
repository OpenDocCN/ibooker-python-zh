- en: Part IV. Building a Safety Net
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to [Part IV](part0025.html#part_4) of the book, which is about the importance
    of building a safety net around your codebase. Think about a tightrope walker
    perilously balanced, high in the air. No matter how many times the performer has
    practiced their routine, there is always a set of safety precautions should the
    worst happen. The tightrope walker can perform their act with confidence, trusting
    in the fact that something will break their fall if they slip. You want to provide
    your fellow collaborators with the same sort of confidence and trust as they work
    in your codebase.
  prefs: []
  type: TYPE_NORMAL
- en: Even if your code is completely error free, how long will it stay that way?
    Every change introduces risk. Every new developer coming into a codebase will
    take time before fully understanding all of its intricacies. Customers will change
    their minds and ask for the complete opposite of what they asked for six months
    ago. This is all a natural part of any software development life cycle.
  prefs: []
  type: TYPE_NORMAL
- en: Your development safety net is a combination of static analysis and tests. Much
    has been written on the topic of testing and how to write good tests. In the chapters
    that follow, I will focus on *why* you write tests, how to decide which tests
    you write, and how you can make those tests more valuable. I’ll go beyond simple
    unit and integration testing to talk about advanced testing techniques like acceptance
    testing, property-based testing, and mutation testing.
  prefs: []
  type: TYPE_NORMAL
