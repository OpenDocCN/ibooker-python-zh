- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: 'As the title promises, this book will introduce you to one of the world’s most
    popular programming languages: Python. It’s aimed at beginning programmers as
    well as more experienced programmers who want to add Python to the languages they
    already know.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 正如标题所承诺的，本书将向你介绍世界上最流行的编程语言之一：Python。它旨在面向初学者和希望将Python添加到他们已经掌握的语言中的更有经验的程序员。
- en: In most cases, it’s easier to learn a computer language than a human language.
    There’s less ambiguity and fewer exceptions to keep in your head. Python is one
    of the most consistent and clear computer languages. It balances ease of learning,
    ease of use, and expressive power.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，学习计算机语言比学习人类语言更容易。没有那么多歧义和例外需要记住。Python是最一致和清晰的计算机语言之一。它平衡了学习的简易性、使用的便捷性和表达力量。
- en: Computer languages are made of *data* (like nouns in spoken languages) and *instructions*
    or *code* (like verbs). You need both. In alternating chapters, you’ll be introduced
    to Python’s basic code and data structures, learn how to combine them, and build
    up to more advanced ones. The programs that you read and write will get longer
    and more complex. Using a woodworking analogy, we’ll start with a hammer, nails,
    and scraps of wood. Over the first half of this book, we’ll introduce more specialized
    components, up to the equivalents of lathes and other power tools.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机语言由*数据*（类似口语中的名词）和*指令*或*代码*（类似动词）组成。你需要两者兼具。在交替的章节中，你将被介绍Python的基本代码和数据结构，学会如何结合它们，并逐步构建更高级的结构。你阅读和编写的程序将变得越来越长、越来越复杂。用木工的类比来说，我们将从锤子、钉子和木片开始。在本书的前半部分，我们将引入更多专业的组件，直到等同于车床和其他电动工具的水平。
- en: You’ll not only learn the language, but also what to do with it. We’ll begin
    with the Python language and its “batteries included” standard library, but I’ll
    also show you how to find, download, install, and use some good third-party packages.
    My emphasis is on whatever I’ve actually found useful in more than 10 years of
    production Python development, rather than fringe topics or complex hacks.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你不仅会学习语言，还会学习如何使用它。我们将从Python语言及其“一揽子”标准库开始，但我也会向你展示如何查找、下载、安装和使用一些优秀的第三方包。我强调的是我在超过10年的Python开发中实际发现有用的东西，而不是边缘话题或复杂的技巧。
- en: Although this is an introduction, some advanced topics are included because
    I want to expose them to you. Areas like databases and the web are still covered,
    but technology changes fast. A Python programmer might now be expected to know
    something about cloud computing, machine learning, or event streaming. You’ll
    find something here on all of these.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这是一个介绍，但我会包含一些高级主题，因为我希望向你们介绍。像数据库和网络这样的领域仍然涵盖在内，但技术变化很快。现在，一个Python程序员可能期望了解云计算、机器学习或事件流等内容。在这里，你将找到所有这些内容。
- en: Python has some special features that work better than adapting styles from
    other languages that you may know. For example, using `for` and *iterators* is
    a more direct way of making a loop than manually incrementing some counter variable.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Python具有一些特殊的功能，它们比从其他语言适应的风格更有效。例如，使用`for`和*迭代器*比手动递增某些计数器变量更直接地进行循环。
- en: When you’re learning something new, it’s hard to tell which terms are specific
    instead of colloquial, and which concepts are actually important. In other words,
    “Is this on the test?” I’ll highlight terms and ideas that have specific meaning
    or importance in Python, but not too many at once. Real Python code is included
    early and often.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当你学习新东西时，很难分辨哪些术语是特定的而不是口头的，哪些概念实际上很重要。换句话说，“这个会出现在考试中吗？”我会突出显示在Python中具有特定含义或重要性的术语和思想，但不会一次性介绍太多。真实的Python代码早早就包含在内。
- en: Note
  id: totrans-8
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: I’ll include a note such as this when something might be confusing, or if there’s
    a more appropriate *Pythonic* way to do it.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当有些内容可能令人困惑或者存在更适合*Pythonic*的解决方式时，我会包含这样的注释。
- en: Python isn’t perfect. I’ll show you things that seem odd or that should be avoided—and
    offer alternatives you can use, instead.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Python并不完美。我会向你展示一些看似奇怪或应该避免的东西，并提供你可以使用的替代方案。
- en: Now and then, my opinions on some subjects (such as object inheritance, or MVC
    and REST designs for the web) may vary a bit from the common wisdom. See what
    you think.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我的一些观点（例如对象继承，或者用于Web的MVC和REST设计）可能与常见的智慧有所不同。看看你的想法。
- en: Audience
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 受众
- en: This book is for anybody interested in learning one of the world’s most popular
    computing languages, regardless of whether you have previously learned any programming.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适用于任何对学习世界上最流行的计算语言之一感兴趣的人，无论您以前是否学过任何编程。
- en: Changes in the Second Edition
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二版的变化
- en: What’s changed since the first edition?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 与第一版相比有什么变化？
- en: About a hundred more pages, including cat pictures.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还有大约一百页，包括猫的图片。
- en: Twice the chapters, each shorter now.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两倍于之前的章节，每一章现在都更短。
- en: An early chapter devoted to data types, variables, and names.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个早期专门讨论数据类型、变量和名称的章节。
- en: New standard Python features like *f-strings*.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的标准 Python 功能，如 *f-strings*。
- en: New or improved third-party packages.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的或改进的第三方软件包。
- en: New code examples throughout.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全书穿插着新的代码示例。
- en: An appendix on basic hardware and software, for new programmers.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个关于基本硬件和软件的附录，适用于新程序员。
- en: An appendix on *asyncio*, for not-so-new programmers.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个关于 *asyncio* 的附录，适用于不那么新的程序员。
- en: '“New stack” coverage: containers, clouds, data science, and machine learning.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “新的堆栈”覆盖范围：容器、云、数据科学和机器学习。
- en: Hints on getting a job programming in Python.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于如何在 Python 编程中找到工作的提示。
- en: What hasn’t changed? Examples using bad poetry and ducks. These are evergreen.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 什么没有改变？使用糟糕诗歌和鸭子的示例。这些是不朽的。
- en: Outline
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大纲
- en: '[Part I](part01.html#part_1) (Chapters 1–11) explains Python’s basics. You
    should read these chapters in order. I work up from the simplest data and code
    structures, combining them on the way into more detailed and realistic programs.
    [Part II](part02.html#part_2) (Chapters 12–22) shows how Python is used in specific
    application areas such as the web, databases, networks, and so on; read these
    chapters in any order you like.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一部分](part01.html#part_1)（第 1-11 章）解释了 Python 的基础知识。您应该按顺序阅读这些章节。我从最简单的数据和代码结构开始工作，逐步将它们结合到更详细和现实的程序中。[第二部分](part02.html#part_2)（第
    12-22 章）展示了 Python 在特定应用领域（如网络、数据库、网络等）中的使用方式；您可以按任意顺序阅读这些章节。'
- en: 'Here’s a brief preview of the chapters and appendixes, including some of the
    terms that you’ll run into there:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是章节和附录的简要预览，包括一些您将在其中遇到的术语：
- en: '[Chapter 1, *A Taste of Py*](ch01.html#ch_intro)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一章，*Python 的一点味道*](ch01.html#ch_intro)'
- en: Computer programs are not that different from directions that you see every
    day. Some little Python programs give you a glimpse of the language’s looks, capabilities,
    and uses in the real world. You’ll see how to run a Python program within its
    *interactive interpreter* (or *shell*), or from a text *file* saved on your computer.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机程序与您每天看到的指南并没有太大的区别。一些小的 Python 程序让您一窥该语言的外观、能力和在现实世界中的用途。您将看到如何在其*交互式解释器*（或*shell*）中运行
    Python 程序，或者从计算机上保存的文本*文件*中运行。
- en: '[Chapter 2, *Data: Types, Values, Variables, and Names*](ch02.html#ch_names)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二章，*数据：类型、值、变量和名称*](ch02.html#ch_names)'
- en: Computer languages mix data and instructions. Different *types* of data are
    stored and treated differently by the computer. They may allow their values to
    be changed (*mutable*) or not (*immutable*). In a Python program, data can be
    *literal* (numbers like `78`, text *strings* like `"waffle"`) or represented by
    named *variables*. Python treats variables like *names*, which is different from
    many other languages and has some important consequences.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机语言将数据和指令混合在一起。不同的*数据类型*会以不同的方式被计算机存储和处理。它们可能允许它们的值被更改（*可变的*）或不允许（*不可变的*）。在
    Python 程序中，数据可以是*文字*（例如 `78` 这样的数字，文本 *字符串*，例如 `"waffle"`）或由命名的*变量*表示。Python 将变量视为*名称*，这与许多其他语言不同，并且具有一些重要的后果。
- en: '[Chapter 3, *Numbers*](ch03.html#ch_numbers)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[第三章，*数字*](ch03.html#ch_numbers)'
- en: 'This chapter shows Python’s simplest data types: *booleans*, *integers*, and
    *floating-point* numbers. You’ll also learn the basic math operations. The examples
    use Python’s interactive interpreter like a calculator.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 本章展示了 Python 的最简单的数据类型：*布尔*、*整数* 和 *浮点* 数。您还将学习基本的数学运算。示例使用 Python 的交互式解释器就像一个计算器一样。
- en: '[Chapter 4, *Choose with if*](ch04.html#ch_if)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[第四章，*使用 if 进行选择*](ch04.html#ch_if)'
- en: We’ll bounce between Python’s nouns (data types) and verbs (program structures)
    for a few chapters. Python code normally runs a line at a time, from the start
    to the end of a program. The `if` code structure lets you run different lines
    of code, depending on some data comparison.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在几章之间往返于 Python 的名词（数据类型）和动词（程序结构）。Python 代码通常一次运行一行，从程序的开头到结尾。`if` 代码结构允许您根据某些数据比较运行不同的代码行。
- en: '[Chapter 5, *Text Strings*](ch05.html#ch_strings)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[第五章，*文本字符串*](ch05.html#ch_strings)'
- en: Back to nouns, and the world of text *strings*. Learn how to create, combine,
    change, retrieve, and print strings.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 回到名词和文本*字符串*的世界。学习如何创建、组合、更改、检索和打印字符串。
- en: '[Chapter 6, *Loop with while and for*](ch06.html#ch_for)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章，*循环：while 和 for*](ch06.html#ch_for)'
- en: 'Verbs again, and two ways to make a *loop*: `for` and `while`. You’ll be introduced
    to a core Python concept: *iterators*.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 再谈动词，以及创建*循环*的两种方法：`for` 和 `while`。您将了解到 Python 的核心概念：*迭代器*。
- en: '[Chapter 7, *Tuples and Lists*](ch07.html#ch_lists)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章，*元组和列表*](ch07.html#ch_lists)'
- en: 'It’s time for the first of Python’s higher-level built-in data structures:
    `lists` and `tuples`. These are sequences of values, like LEGO for building much
    more complex data structures. Step through them with *iterators*, and build lists
    quickly with *comprehensions*.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是 Python 更高级内置数据结构的第一步：`列表`和 `元组`。这些是值序列，就像 LEGO 一样，用于构建更复杂的数据结构。通过*迭代器*快速浏览它们，并通过*推导式*快速构建列表。
- en: '[Chapter 8, *Dictionaries and Sets*](ch08.html#ch_dicts)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章，*字典和集合*](ch08.html#ch_dicts)'
- en: '*Dictionaries* (aka *dicts*) and *sets* let you save data by their values rather
    than their position. This turns out to be very handy and will be among your favorite
    Python features.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '*字典*（又称*dicts*）和*集合*允许您通过其值而不是位置保存数据。这是非常方便的功能，也将成为您喜爱的 Python 特性之一。'
- en: '[Chapter 9, *Functions*](ch09.html#ch_functions)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章，*函数*](ch09.html#ch_functions)'
- en: Weave the data and code structures of the previous chapters to compare, choose,
    or repeat. Package code in *functions* and handle errors with *exceptions*.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 编织前几章的数据和代码结构，以便比较、选择或重复。将代码打包在*函数*中，并使用*异常*处理错误。
- en: '[Chapter 10, *Oh Oh: Objects and Classes*](ch10.html#ch_objects)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章，*哦哦：对象和类*](ch10.html#ch_objects)'
- en: The word *object* is a bit fuzzy, but important in many computer languages,
    including Python. If you’ve done *object-oriented programming* in other languages,
    Python is a bit more relaxed. This chapter explains how to use objects and classes,
    and when it’s better to use alternatives.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*对象*这个词有点模糊，在许多计算机语言中都很重要，包括 Python。如果您在其他语言中做过*面向对象编程*，Python 会更加灵活。本章解释如何使用对象和类，以及在何时更好地使用替代方法。'
- en: '[Chapter 11, *Modules, Packages, and Goodies*](ch11.html#ch_modules)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章，*模块、包和好东西*](ch11.html#ch_modules)'
- en: 'This chapter demonstrates how to scale out to larger code structures: *modules*,
    *packages*, and *programs*. You’ll see where to put code and data, how to get
    data in and out, handle options, tour the Python Standard Library, and take a
    glance at what lies beyond.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 本章演示如何扩展到更大的代码结构：*模块*、*包* 和 *程序*。您将了解到代码和数据的存放位置，如何输入和输出数据，处理选项，浏览 Python 标准库，并略观未来。
- en: '[Chapter 12, *Wrangle and Mangle Data*](ch12.html#ch_munging)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章，*整理和操纵数据*](ch12.html#ch_munging)'
- en: Learn to manage (or mangle) data like a pro. This chapter is all about text
    and binary data, joy with Unicode characters, and *regex* text searching. It also
    introduces the data types *bytes* and *bytearray*, counterparts of strings that
    contain raw binary values instead of text characters.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 学会像专家一样管理（或操纵）数据。本章涵盖文本和二进制数据，Unicode 字符的乐趣以及*正则表达式*文本搜索。还介绍了*字节*和*字节数组*这两种数据类型，它们是字符串的对应物，包含的是原始的二进制值而不是文本字符。
- en: '[Chapter 13, *Calendars and Clocks*](ch13.html#ch_times)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[第13章，*日历和时钟*](ch13.html#ch_times)'
- en: Dates and times can be messy to handle. This chapter shows common problems and
    useful solutions.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 处理日期和时间可能会很混乱。本章展示了常见问题和实用解决方案。
- en: '[Chapter 14, *Files and Directories*](ch14.html#ch_files)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[第14章，*文件和目录*](ch14.html#ch_files)'
- en: Basic data storage uses *files* and *directories*. This chapter shows you how
    to create and use them.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 基本数据存储使用*文件*和*目录*。本章将向您展示如何创建和使用它们。
- en: '[Chapter 15, *Data in Time: Processes and Concurrency*](ch15.html#ch_systems)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[第15章，*时间数据：进程和并发*](ch15.html#ch_systems)'
- en: This is the first hard-core system chapter. Its theme is data in time—how to
    use *programs*, *processes*, and *threads* to do more things at a time (*concurrency*).
    Python’s recent *async* additions are mentioned, with details in [Appendix C](app03.html#app_async).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这是第一个硬核系统章节。它的主题是时间数据——如何使用*程序*、*进程*和*线程*同时执行多项任务（*并发*）。提到了 Python 最近的*async*增强功能，详细信息在[附录
    C](app03.html#app_async)中。
- en: '[Chapter 16, *Data in a Box: Persistent Storage*](ch16.html#ch_databases)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[第16章，*盒中的数据：持久存储*](ch16.html#ch_databases)'
- en: Data can be stored and retrieved with basic flat files and directories within
    filesystems. They gain some structure with common text formats such as CSV, JSON,
    and XML. As data get larger and more complex, they need the services of *databases*—traditional
    *relational* ones, and some newer *NoSQL* data stores.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可以通过基本的平面文件和文件系统中的目录进行存储和检索。它们通过常见的文本格式（如 CSV、JSON 和 XML）获得一些结构。随着数据变得更大更复杂，它们需要传统的
    *关系型* 数据库和一些较新的 *NoSQL* 数据存储提供的服务。
- en: '[Chapter 17, *Data in Space: Networks*](ch17.html#ch_networks)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 17 章, *空间中的数据：网络*](ch17.html#ch_networks)'
- en: Send your code and data through space in *networks* with *services*, *protocols*,
    and *APIs*. Examples range from low-level TCP *sockets*, to *messaging* libraries
    and queuing systems, to *cloud* deployment.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 *网络* 和 *服务*，使用 *协议* 和 *API* 将您的代码和数据发送到空间。示例涵盖从低级别的 TCP *套接字* 到 *消息传递* 库和排队系统，再到
    *云* 部署。
- en: '[Chapter 18, *The Web, Untangled*](ch18.html#ch_web)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 18 章, *Web, 解析*](ch18.html#ch_web)'
- en: The *web* gets its own chapter—clients, servers, APIs, and frameworks. You’ll
    *crawl* and *scrape* websites, and then build real websites with *request* parameters
    and *templates*.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*Web* 有专门的章节——客户端、服务器、API 和框架。您将会 *爬取* 和 *抓取* 网站，并使用 *请求* 参数和 *模板* 构建真实的网站。'
- en: '[Chapter 19, *Be a Pythonista*](ch19.html#ch_pythonista)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 19 章, *成为 Python 爱好者*](ch19.html#ch_pythonista)'
- en: This chapter contains tips for Python developers—installation with `pip` and
    `virtualenv`, using IDEs, testing, debugging, logging, source control, and documentation.
    It also helps you to find and install useful third-party packages, package your
    own code for reuse, and learn where to get more information.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包含 Python 开发者的技巧——使用 `pip` 和 `virtualenv` 进行安装、使用集成开发环境、测试、调试、日志记录、源代码控制和文档编写。它还帮助您找到并安装有用的第三方软件包，将您自己的代码打包以供重用，并了解获取更多信息的途径。
- en: '[Chapter 20, *Py Art*](ch20.html#ch_art)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 20 章, *Py 艺术*](ch20.html#ch_art)'
- en: 'People are doing cool things with Python in the arts: graphics, music, animation,
    and games.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 人们在艺术领域正在用 Python 做一些很酷的事情：图形、音乐、动画和游戏。
- en: '[Chapter 21, *Py at Work*](ch21.html#ch_business)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 21 章, *Py 在工作中*](ch21.html#ch_business)'
- en: 'Python has specific applications for business: data visualization (plots, graphs,
    and maps), security, and regulation.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Python 在商业领域有特定的应用：数据可视化（绘图、图表和地图）、安全性和监管。
- en: '[Chapter 22, *Py Sci*](ch22.html#ch_science)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 22 章, *Py Sci*](ch22.html#ch_science)'
- en: 'In the past few years, Python has emerged as a top language for science: math
    and statistics, physical science, bioscience, and medicine. *Data science* and
    *machine learning* are notable strengths. This chapter touches on NumPy, SciPy,
    and Pandas.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的几年中，Python 已经成为科学领域的顶级语言：数学和统计学、物理科学、生物科学和医学。*数据科学* 和 *机器学习* 是显著的优势。本章涉及
    NumPy、SciPy 和 Pandas。
- en: '[Appendix A, *Hardware and Software for Beginning Programmers*](app01.html#app_computers)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[附录 A, *初学者的硬件和软件*](app01.html#app_computers)'
- en: If you’re fairly new to programming, this describes how hardware and software
    actually work. It introduces some terms that you’ll keep running into.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是编程新手，这部分描述了硬件和软件的实际工作原理。它介绍了一些术语，您将经常遇到它们。
- en: '[Appendix B, *Install Python 3*](app02.html#app_install)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[附录 B, *安装 Python 3*](app02.html#app_install)'
- en: If you don’t already have Python 3 on your computer, this appendix shows you
    how to install it, whether you’re running Windows, macOS, Linux, or some other
    variant of Unix.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的计算机上还没有安装 Python 3，本附录将向您展示如何安装，无论您使用的是 Windows、macOS、Linux 还是其他 Unix 变种。
- en: '[Appendix C, *Something Completely Different: Async*](app03.html#app_async)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[附录 C, *截然不同的事情：异步*](app03.html#app_async)'
- en: Python has been adding asynchronous features in different releases, and they’re
    not easy to understand. I mention them as they come up in various chapters, but
    save a detailed discussion for this appendix.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Python 在不同版本中不断添加异步特性，这些特性并不容易理解。我会在各个章节中提到它们，但详细讨论留在附录中。
- en: '[Appendix D, *Answers to Exercises*](app04.html#app_answers)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[附录 D, *练习答案*](app04.html#app_answers)'
- en: This has the answers to the end-of-chapter exercises. Don’t peek here until
    you’ve tried the exercises yourself, or you might be turned into a newt.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这里包含了章节末尾练习的答案。在您自己尝试练习之前，请勿偷看，否则可能会变成一只螃蟹。
- en: '[Appendix E, *Cheat Sheets*](app05.html#app_cheatsheets)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[附录 E, *速查表*](app05.html#app_cheatsheets)'
- en: This appendix contains cheat sheets to use as a quick reference.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录包含了作为快速参考使用的速查表。
- en: Python Versions
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 版本
- en: Computer languages change over time as developers add features and fix mistakes.
    The examples in this book were written and tested while running Python version
    3.7. Version 3.7 was the most current as this book was being edited, and I’ll
    talk about its notable additions. Version 3.8 is scheduled for general release
    in late 2019, and I’ll include a few things to expect from it. If you want to
    know what was added to Python and when, try the [What’s New in Python page](https://docs.python.org/3/whatsnew).
    It’s a technical reference; a bit heavy when you’re just starting with Python,
    but may be useful in the future if you ever have to get programs to work on computers
    with different Python versions.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 随着开发人员增加功能并修复错误，计算机语言随时间而变化。本书中的示例是在运行Python 3.7时编写和测试的。在本书编辑时，版本3.7是最新版本。我会谈一谈它的显著增强功能。版本3.8预计将于2019年底正式发布，并将包含一些预期功能。如果您想了解Python的新功能及其发布时间，请查看[Python的新特性页面](https://docs.python.org/3/whatsnew)。这是一个技术参考，当您刚开始使用Python时可能会感到有些繁重，但如果未来需要在不同Python版本的计算机上运行程序，它可能会有用。
- en: Conventions Used in This Book
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书使用的约定
- en: 'The following typographical conventions are used in this book:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用以下排版约定：
- en: '*Italic*'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '*斜体*'
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 表示新术语、网址、电子邮件地址、文件名和文件扩展名。
- en: '`Constant width`'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`等宽字体`'
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variables, functions, and data types.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 用于程序清单，以及段落中引用程序元素，如变量、函数和数据类型。
- en: '**`Constant width bold`**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**`恒定宽度加粗`**'
- en: Shows commands or other text that should be typed literally by the user.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 显示用户应直接输入的命令或其他文本。
- en: '*`Constant width italic`*'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '*`等宽斜体`*'
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 显示应替换为用户提供值或根据上下文确定值的文本。
- en: Note
  id: totrans-96
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This icon signifies a tip, suggestion, or general note.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图标表示提示、建议或一般说明。
- en: Warning
  id: totrans-98
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: This icon indicates a warning or caution.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图标表示警告或注意事项。
- en: Using Code Examples
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用代码示例
- en: The substantial code examples and exercises in this book are [available online
    for you to download](https://github.com/madscheme/introducing-python). This book
    is here to help you get your job done. In general, you may use the code in this
    book in your programs and documentation. You do not need to contact us for permission
    unless you’re reproducing a significant portion of the code. For example, writing
    a program that uses several chunks of code from this book does not require permission.
    Selling or distributing examples from O’Reilly books does require permission.
    Answering a question by citing this book and quoting example code does not require
    permission. Incorporating a significant amount of example code from this book
    into your product’s documentation does require permission.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的大量代码示例和练习可以[在线下载](https://github.com/madscheme/introducing-python)。本书旨在帮助您完成工作。通常情况下，您可以在您的程序和文档中使用本书中的代码，无需征得我们的许可。除非您复制了本书中的大部分代码，否则无需许可。例如，编写一个使用本书中几个代码块的程序不需要许可。销售或分发奥莱利图书中的示例需要许可。引用本书并引用示例代码回答问题不需要许可。将本书中大量示例代码整合到产品文档中需要许可。
- en: 'We appreciate, but do not require, attribution. An attribution usually includes
    the title, author, publisher, and ISBN. For example: “*Introducing Python* by
    Bill Lubanovic (O’Reilly). Copyright 2020 Bill Lubanovic, 978-1-492-05136-7.”'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢但不需要归属。归属通常包括标题、作者、出版商和ISBN。例如：“*Python入门*，作者Bill Lubanovic（奥莱利）。版权2020年Bill
    Lubanovic，978-1-492-05136-7。”
- en: If you feel your use of code examples falls outside fair use or the permission
    given here, feel free to contact us at [permissions@oreilly.com](mailto:permissions@oreilly.com).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您觉得使用代码示例超出了公平使用范围或这里给出的权限，请随时联系我们，邮箱是 [permissions@oreilly.com](mailto:permissions@oreilly.com)。
- en: O’Reilly Online Learning
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 奥莱利在线学习
- en: Note
  id: totrans-105
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: For over 40 years, [*O’Reilly Media*](http://oreilly.com) has provided technology
    and business training, knowledge, and insight to help companies succeed.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[奥莱利媒体（O’Reilly Media）](http://oreilly.com)已经提供了40多年的技术和商业培训、知识和见解，帮助企业取得成功。'
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, conferences, and our online learning platform. O’Reilly’s
    online learning platform gives you on-demand access to live training courses,
    in-depth learning paths, interactive coding environments, and a vast collection
    of text and video from O’Reilly and 200+ other publishers. For more information,
    please visit [*http://oreilly.com*](http://oreilly.com).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们独特的专家和创新者网络通过书籍、文章、会议以及我们的在线学习平台分享他们的知识和专长。奥莱利的在线学习平台为您提供按需访问的实时培训课程、深度学习路径、交互式编码环境，以及来自奥莱利及其他200多家出版商的大量文本和视频。欲了解更多信息，请访问[*http://oreilly.com*](http://oreilly.com)。
- en: How to Contact Us
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如需联系我们
- en: 'Please address comments and questions concerning this book to the publisher:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 请将有关本书的评论和问题发送至出版商：
- en: O’Reilly Media, Inc.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 奥莱利传媒公司
- en: 1005 Gravenstein Highway North
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1005 Gravenstein Highway North
- en: Sebastopol, CA 95472
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sebastopol, CA 95472
- en: 800-998-9938 (in the United States or Canada)
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 800-998-9938（美国或加拿大）
- en: 707-829-0515 (international or local)
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0515（国际或当地）
- en: 707-829-0104 (fax)
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0104（传真）
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*https://oreil.ly/introducing-python-2e*](https://oreil.ly/introducing-python-2e).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为这本书设立了一个网页，列出勘误、示例和任何额外信息。您可以访问此页面：[*https://oreil.ly/introducing-python-2e*](https://oreil.ly/introducing-python-2e)。
- en: To comment or ask technical questions about this book, send an email to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 欲就本书提出评论或技术问题，请发送电子邮件至[*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com)。
- en: For more information about our books, courses, conferences, and news, see our
    website at [*http://www.oreilly.com*](http://www.oreilly.com).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多关于我们的图书、课程、会议和新闻，请访问我们的网站：[*http://www.oreilly.com*](http://www.oreilly.com)。
- en: 'Find us on Facebook: [*http://facebook.com/oreilly*](http://facebook.com/oreilly)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Facebook 上找到我们：[*http://facebook.com/oreilly*](http://facebook.com/oreilly)
- en: 'Follow us on Twitter: [*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Twitter 上关注我们：[*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)
- en: 'Watch us on YouTube: [*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 观看我们的 YouTube 频道：[*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)
- en: Acknowledgments
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致谢
- en: 'My sincere thanks to the reviewers and readers who helped make this better:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 衷心感谢帮助使这本书更好的审稿人和读者们：
- en: Corbin Collins, Charles Givre, Nathan Stocks, Dave George, and Mike James
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Corbin Collins, Charles Givre, Nathan Stocks, Dave George, and Mike James
