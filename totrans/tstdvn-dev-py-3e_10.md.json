["```py\n$ mkdir functional_tests\n$ touch functional_tests/__init__.py\n```", "```py\n$ git mv functional_tests.py functional_tests/tests.py\n$ git status # shows the rename to functional_tests/tests.py and __init__.py\n```", "```py\n.\n├── db.sqlite3\n├── functional_tests\n│   ├── __init__.py\n│   └── tests.py\n├── lists\n│   ├── __init__.py\n│   ├── admin.py\n│   ├── apps.py\n│   ├── migrations\n│   │   ├── 0001_initial.py\n│   │   ├── 0002_item_text.py\n│   │   └── __init__.py\n│   ├── models.py\n│   ├── templates\n│   │   └── home.xhtml\n│   ├── tests.py\n│   └── views.py\n├── manage.py\n└── superlists\n    ├── __init__.py\n    ├── asgi.py\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py\n```", "```py\nfrom django.test import LiveServerTestCase\nfrom selenium import webdriver\n[...]\n\nclass NewVisitorTest(LiveServerTestCase):\n    def setUp(self):\n        [...]\n```", "```py\n    def test_can_start_a_todo_list(self):\n        # Edith has heard about a cool new online to-do app.\n        # She goes to check out its homepage\n        self.browser.get(self.live_server_url)\n```", "```py\n$ python manage.py test functional_tests\nCreating test database for alias 'default'...\nFound 1 test(s).\nSystem check identified no issues (0 silenced).\n.\n ---------------------------------------------------------------------\nRan 1 test in 10.519s\n\nOK\nDestroying test database for alias 'default'...\n```", "```py\n$ git status # functional_tests.py renamed + modified, new __init__.py\n$ git add functional_tests\n$ git diff --staged\n$ git commit  # msg eg \"make functional_tests an app, use LiveServerTestCase\"\n```", "```py\n$ python manage.py test\nCreating test database for alias 'default'...\nFound 7 test(s).\nSystem check identified no issues (0 silenced).\n.......\n ---------------------------------------------------------------------\nRan 7 tests in 10.859s\n\nOK\nDestroying test database for alias 'default'...\n```", "```py\n$ python manage.py test lists\nCreating test database for alias 'default'...\nFound 6 test(s).\nSystem check identified no issues (0 silenced).\n......\n ---------------------------------------------------------------------\nRan 6 tests in 0.009s\n\nOK\nDestroying test database for alias 'default'...\n```", "```py\n        # When she hits enter, the page updates, and now the page lists\n        # \"1: Buy peacock feathers\" as an item in a to-do list table\n        inputbox.send_keys(Keys.ENTER)\n        time.sleep(1)\n\n        self.check_for_row_in_list_table(\"1: Buy peacock feathers\")\n```", "```py\n[...]\nfrom selenium.common.exceptions import WebDriverException\nimport time\n\nMAX_WAIT = 5  ![1](assets/1.png)\n\nclass NewVisitorTest(LiveServerTestCase):\n    def setUp(self):\n        [...]\n    def tearDown(self):\n        [...]\n\n    def wait_for_row_in_list_table(self, row_text):\n        start_time = time.time()\n        while True:  ![2](assets/2.png)\n            try:\n                table = self.browser.find_element(By.ID, \"id_list_table\")  ![3](assets/3.png)\n                rows = table.find_elements(By.TAG_NAME, \"tr\")\n                self.assertIn(row_text, [row.text for row in rows])\n                return  ![4](assets/4.png)\n            except (AssertionError, WebDriverException):  ![5](assets/5.png)\n                if time.time() - start_time > MAX_WAIT:  ![6](assets/6.png)\n                    raise  ![6](assets/6.png)\n                time.sleep(0.5)  ![5](assets/5.png)\n```", "```py\n    [...]\n    # When she hits enter, the page updates, and now the page lists\n    # \"1: Buy peacock feathers\" as an item in a to-do list table\n    inputbox.send_keys(Keys.ENTER)\n    self.wait_for_row_in_list_table(\"1: Buy peacock feathers\")\n\n    # There is still a text box inviting her to add another item.\n    # She enters \"Use peacock feathers to make a fly\"\n    # (Edith is very methodical)\n    inputbox = self.browser.find_element(By.ID, \"id_new_item\")\n    inputbox.send_keys(\"Use peacock feathers to make a fly\")\n    inputbox.send_keys(Keys.ENTER)\n\n    # The page updates again, and now shows both items on her list\n    self.wait_for_row_in_list_table(\"1: Buy peacock feathers\")\n    self.wait_for_row_in_list_table(\"2: Use peacock feathers to make a fly\")\n    [...]\n```", "```py\n$ python manage.py test\nCreating test database for alias 'default'...\nFound 7 test(s).\nSystem check identified no issues (0 silenced).\n.......\n ---------------------------------------------------------------------\nRan 7 tests in 4.552s\n\nOK\nDestroying test database for alias 'default'...\n```", "```py\ndef wait_for_row_in_list_table(self, row_text):\n    [...]\n        rows = table.find_elements(By.TAG_NAME, \"tr\")\n        self.assertIn(\"foo\", [row.text for row in rows])\n        return\n```", "```py\n    self.assertIn(\"foo\", [row.text for row in rows])\nAssertionError: 'foo' not found in ['1: Buy peacock feathers']\n```", "```py\n    try:\n        table = self.browser.find_element(By.ID, \"id_nothing\")\n        rows = table.find_elements(By.TAG_NAME, \"tr\")\n        self.assertIn(row_text, [row.text for row in rows])\n        return\n    [...]\n```", "```py\nselenium.common.exceptions.NoSuchElementException: Message: Unable to locate\nelement: [id=\"id_nothing\"]\n```", "```py\n$ python manage.py test\n[...]\nOK\n```"]