- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One time Noah was in the ocean, and a wave crashed on top of him and took his
    breath away as it pulled him deeper into the sea. Just as he started to recover
    his breath, another wave dropped on top. It extracted much of his remaining energy.
    It pulled him even deeper into the ocean. Just as he started to recover, yet another
    wave crashed down on top. The more he would fight the waves and the sea, the more
    energy was drained. He seriously wondered if he would die at that moment. He couldn’t
    breathe, his body ached, and he was terrified he was going to drown. Being close
    to death helped him focus on the only thing that could save him, which was conserving
    his energy and using the waves—not fighting them.
  prefs: []
  type: TYPE_NORMAL
- en: Being in a startup that doesn’t practice DevOps is a lot like that day at the
    beach. There are production fires that burn for months; everything is manual,
    alerts wake you up for days on end damaging your health. The only escape from
    this death spiral is the DevOps way.
  prefs: []
  type: TYPE_NORMAL
- en: Do one right thing, then another, until you find clarity. First, set up a build
    server, start testing your code, and automate manual tasks. Do something; it can
    be anything, but have a “bias for action.” Do that first thing right and make
    sure it is automated.
  prefs: []
  type: TYPE_NORMAL
- en: A common trap in startups or any company is the search for superheroes. “We
    need a performance engineer” because they will fix our performance problems. “We
    need a Chief Revenue Officer” because they will fix all sales problems. “We need
    DevOps engineers” because they will fix our deployment process.
  prefs: []
  type: TYPE_NORMAL
- en: At one company, Noah had a project that was over a year late, and the web application
    had been rewritten three times in multiple languages. This next release only needed
    a “performance engineer” to get it finished. I remember being the only one brave
    or stupid enough to say, “What is a performance engineer?” This engineer made
    everything work at scale. He realized at that point that they were looking for
    a superhero to save them. Superhero hiring syndrome is the best way to pick up
    on something being very wrong on a new product or a new startup. No employee will
    save a company unless they first save themselves.
  prefs: []
  type: TYPE_NORMAL
- en: 'At other companies, Noah heard similar things: “If we could only hire a senior
    Erlang engineer,” or “If we could only hire someone to make us revenue,” or “If
    we could only hire someone to teach us to be financially disciplined,” or “If
    we could only hire a Swift developer,” etc. This hire is the last thing your startup
    or new product needs—it needs to understand what it is doing wrong that only a
    superhero can save the day.'
  prefs: []
  type: TYPE_NORMAL
- en: In the case of the company that wanted to hire a performance engineer, it turned
    out that the real issue was inadequate technical supervision. The wrong people
    were in charge (and verbally shouting down the people who could fix it). By removing
    a poor performer, listening to an existing team member who knew how to fix the
    problem all along, deleting that job listing, doing one right thing at a time,
    and inserting qualified engineering management, the issue resolved itself without
    a superhero hire.
  prefs: []
  type: TYPE_NORMAL
- en: No one will save you at your startup; you and your team have to protect yourselves
    by creating great teamwork, a great process, and believing in your organization.
    The solution to the problem isn’t a new hire; it is being honest and mindful about
    the situation you are in, how you got there, and doing one right thing at a time
    until you work your way out. There is no superhero unless it is you.
  prefs: []
  type: TYPE_NORMAL
- en: Just like being in the ocean in a storm and slowly drowning, no one is going
    to save you or the company unless it is you. You are the superhero your company
    needs, and you might discover your coworkers are too.
  prefs: []
  type: TYPE_NORMAL
- en: There is a way out of the chaos, and this book can be your guide. Let’s get
    started.
  prefs: []
  type: TYPE_NORMAL
- en: What Does DevOps Mean to the Authors?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Many abstract concepts in the software industry are hard to define precisely.
    Cloud Computing, Agile, and Big Data are good examples of topics that can have
    many definitions depending on whom you talk to. Instead of strictly defining what
    DevOps is, let’s use some phrases that show evidence DevOps is occurring:'
  prefs: []
  type: TYPE_NORMAL
- en: Two-way collaboration between Development and Operation teams.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Turnaround of Ops tasks in minutes to hours, not days to weeks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong involvement from developers; otherwise, it’s back to Devs versus Ops.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operations people need development skills—at least Bash and Python.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developer people need operational skills—their responsibilities don’t end with
    writing the code, but with deploying the system to production and monitoring alerts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Automation, automation, automation: you can’t accurately automate without Dev
    skills, and you can’t correctly automate without Ops skills'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ideally: self-service for developers, at least in terms of deploying code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can be achieved via CI/CD pipelines.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GitOps.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bidirectional *everything* between Development and Operations (tooling, knowledge,
    etc.).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Constant collaboration in design, implementation, deployment—and yes, automation—can’t
    be successful without cooperation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If it isn’t automated, it’s broken.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cultural: Hierarchy < Process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Microservices > Monolithic.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The continuous deployment system is the heart and soul of the software team.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are no superheroes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Continuous delivery isn’t an option; it is a mandate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to Use This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is useful in any order. You can randomly open any chapter you like,
    and you should be able to find something helpful to apply to your job. If you
    are an experienced Python programmer, you may want to skim [Chapter 1](ch01.html#python_essentials_for_devops).
    Likewise, if you are interested in war stories, case studies, and interviews,
    you may want to read the [Chapter 16](ch16.html#DevOpsCaseStudies) first.
  prefs: []
  type: TYPE_NORMAL
- en: Conceptual Topics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The content is broken up into several conceptual topics. The first group is
    Python Foundations, and it covers a brief introduction to the language as well
    as automating text, writing command-line tools, and automating the file system.
  prefs: []
  type: TYPE_NORMAL
- en: Next up is Operations, which includes useful Linux utilities, package management,
    build systems, monitoring and instrumentation, and automated testing. These are
    all essential topics to master to become a competent DevOps practitioner.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud Foundations are in the next section, and there are chapters on Cloud Computing,
    Infrastructure as Code, Kubernetes, and Serverless. There is currently a crisis
    in the software industry around finding enough talent trained in the Cloud. Mastering
    this section will pay immediate dividends to both your salary and your career.
  prefs: []
  type: TYPE_NORMAL
- en: Next up is the Data section. Machine Learning Operations and Data Engineering
    are both covered from the perspective of DevOps. There is also a full soup to
    nuts machine learning project walkthrough that takes you through the building,
    deploying, and operationalizing of a machine learning model using Flask, Sklearn,
    Docker, and Kubernetes.
  prefs: []
  type: TYPE_NORMAL
- en: The last section is [Chapter 16](ch16.html#DevOpsCaseStudies) on case studies,
    interviews, and DevOps war stories. This chapter makes for good bed time reading.
  prefs: []
  type: TYPE_NORMAL
- en: Python Foundations
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 1, *Python Essentials for DevOps*](ch01.html#python_essentials_for_devops)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 2, *Automating Files and the Filesystem*](ch02.html#automating_files_and_the_filesystem)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 3, *Working with the Command Line*](ch03.html#working_with_the_command_line)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operations
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4, *Useful Linux Utilities*](ch04.html#linux_utilities)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 5, *Package Management*](ch05.html#package_management)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 6, *Continuous Integration and Continuous Deployment*](ch06.html#CICD)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 7, *Monitoring and Logging*](ch07.html#Monitoring-and-logging)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 8, *Pytest for DevOps*](ch08.html#pytest_for_devops)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud Foundations
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9, *Cloud Computing*](ch09.html#CloudComputing)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 10, *Infrastructure as Code*](ch10.html#infra-as-code)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 11, *Container Technologies: Docker and Docker Compose*](ch11.html#containers-docker)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 12, *Container Orchestration: Kubernetes*](ch12.html#containers-kubernetes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 13, *Serverless Technologies*](ch13.html#serverless)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14, *MLOps and Machine learning Engineering*](ch14.html#mlengineering)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 15, *Data Engineering*](ch15.html#DataEngineering)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Case Studies
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 16, *DevOps War Stories and Interviews*](ch16.html#DevOpsCaseStudies)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '`Constant width`'
  prefs: []
  type: TYPE_NORMAL
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '**`Constant width bold`**'
  prefs: []
  type: TYPE_NORMAL
- en: Shows commands or other text that should be typed literally by the user.
  prefs: []
  type: TYPE_NORMAL
- en: '*`Constant width italic`*'
  prefs: []
  type: TYPE_NORMAL
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element indicates a warning or caution.
  prefs: []
  type: TYPE_NORMAL
- en: Using Code Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Supplemental material (code examples, exercises, etc.) is available for download
    at [*https://pythondevops.com*](https://pythondevops.com). You can also view DevOps
    content related to the code in the book at the [Pragmatic AI Labs YouTube channel](https://oreil.ly/QIYte).
  prefs: []
  type: TYPE_NORMAL
- en: If you have a technical question for the authors or a problem using the code
    examples, please email [*technical@pythondevops.com*](mailto:technical@pythondevops.com).
  prefs: []
  type: TYPE_NORMAL
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  prefs: []
  type: TYPE_NORMAL
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: “*Python for DevOps*
    by Noah Gift, Kennedy Behrman, Alfredo Deza, and Grig Gheorghiu. (O’Reilly). Copyright
    2020 Noah Gift, Kennedy Behrman, Alfredo Deza, Grig Gheorghiu, 978-1-492-05769-7.”'
  prefs: []
  type: TYPE_NORMAL
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](http://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, conferences, and our online learning platform. O’Reilly’s
    online learning platform gives you on-demand access to live training courses,
    in-depth learning paths, interactive coding environments, and a vast collection
    of text and video from O’Reilly and 200+ other publishers. For more information,
    please visit [*http://oreilly.com*](http://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-998-9938 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0515 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*oreil.ly/python-for-devops*](https://oreil.ly/python-for-devops).
  prefs: []
  type: TYPE_NORMAL
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  prefs: []
  type: TYPE_NORMAL
- en: For more information about our books, courses, conferences, and news, see our
    website at [*http://www.oreilly.com*](http://www.oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on Facebook: [*http://facebook.com/oreilly*](http://facebook.com/oreilly)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To start off, the authors would like to thank the two main technical reviewers
    of the book:'
  prefs: []
  type: TYPE_NORMAL
- en: Wes Novack is an architect and engineer specializing in public cloud systems
    and web-scale SaaS applications. He designs, builds, and manages complex systems
    that enable highly available infrastructure, continuous delivery pipelines, and
    rapid releases within large, polyglot microservice ecosystems hosted on AWS and
    GCP. Wes makes extensive use of languages, frameworks, and tools to define Infrastructure
    as Code, drive automation, and eliminate toil. He is vocal in the tech community
    by participating in mentorship, workshops, and conferences, and he is also a Pluralsight
    video course author. Wes is an advocate for the CALMS of DevOps; Culture, Automation,
    Lean, Measurement, and Sharing. You can find him on Twitter @WesleyTech or visit
    his [personal blog](https://wesnovack.com).
  prefs: []
  type: TYPE_NORMAL
- en: Brad Andersen is a software engineer and architect. He has designed and developed
    software professionally for 30 years. He works as a catalyst for change and innovation;
    he has assumed leadership and development roles across a spectrum from enterprise
    organizations to startups. Brad is currently pursuing a master’s degree in data
    science at the University of California, Berkeley. You can find more information
    on [Brad’s LinkedIn profile](https://www.linkedin.com/in/andersen-bradley).
  prefs: []
  type: TYPE_NORMAL
- en: We would also like to thank Jeremy Yabrow and Colin B. Erdman for chipping in
    with many great ideas and bits of feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Noah
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'I would like to thank the coauthors of the book: Grig, Kennedy, and Alfredo.
    It was incredible working with a team that was this effective.'
  prefs: []
  type: TYPE_NORMAL
- en: Kennedy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Thanks to my coauthors, it has been a pleasure to work with you. And thanks
    for the patience and understanding of my family.
  prefs: []
  type: TYPE_NORMAL
- en: Alfredo
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In 2010—nine years ago as of this writing—I landed my first software engineering
    job. I was 31 years old with no college education and no previous engineering
    experience. That job meant accepting a reduced salary and no health insurance.
    I learned a lot, met amazing people, and gained expertise through relentless determination.
    Throughout those years, it would’ve been impossible to get here without people
    opening opportunities and pointing me in the right direction.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks to Chris Benson, who saw that I was hungry for learning and kept finding
    opportunities to have me around.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks to Alejandro Cadavid, who realized that I could fix things nobody else
    wanted to fix. You helped me get work when no one (including myself) thought I
    could be useful.
  prefs: []
  type: TYPE_NORMAL
- en: Carlos Coll got me into programming and didn’t let me quit even when I asked
    him to. Learning to program changed my life, and Carlos had the patience to push
    me to learn and land my first program in production.
  prefs: []
  type: TYPE_NORMAL
- en: To Joni Benton, for believing in me and helping me land my first full-time job.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks to Jonathan LaCour, an inspiring boss who continues to help me get to
    a better place. Your advice has always been invaluable to me.
  prefs: []
  type: TYPE_NORMAL
- en: Noah, thanks for your friendship and guidance you are a tremendous source of
    motivation to me. I always enjoy working together, like that one time when we
    rebuilt infrastructure from scratch. Your patience and guidance when I had no
    idea about Python was life-changing.
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, a tremendous thanks to my family. My wife Claudia, who never doubts
    my ability to learn and improve, and so generous and understanding of the time
    I spent working toward this book. My children, Efrain, Ignacio, and Alana: I love
    you all.'
  prefs: []
  type: TYPE_NORMAL
- en: Grig
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: My thanks to all creators of open source software. Without them, our jobs would
    be so much more bleak and unfulfilling. Also thank you to all who blog and share
    your knowledge freely. Lastly, I also wish to thank the coauthors of this book.
    It’s been a really fun ride.
  prefs: []
  type: TYPE_NORMAL
