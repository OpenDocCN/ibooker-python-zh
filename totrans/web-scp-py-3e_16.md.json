["```py\n<script>\n    alert(\"This creates a pop-up using JavaScript\");\n</script>\n```", "```py\n<script> \nfunction fibonacci(a, b){ \n    var nextNum = a + b; \n    console.log(nextNum+\" is in the Fibonacci sequence\"); \n    if(nextNum < 100){ \n        fibonacci(b, nextNum); \n    } \n} \nfibonacci(1, 1);\n</script>\n```", "```py\n<script>\nvar fibonacci = function() { \n    var a = 1; var b = 1;\n    return function () { \n        [b, a] = [a + b, b];\n        return b; \n    } \n}\nvar fibInstance = fibonacci();\nconsole.log(fibInstance()+\" is in the Fibonacci sequence\"); \nconsole.log(fibInstance()+\" is in the Fibonacci sequence\"); \nconsole.log(fibInstance()+\" is in the Fibonacci sequence\");\n</script>\n```", "```py\n<script>\nconst fibonacci = () => { \n    var a = 1; var b = 1;\n    return () => { \n        [b, a] = [a + b, b];\n        return b; \n    } \n}\nconst fibInstance = fibonacci();\nconsole.log(fibInstance()+\" is in the Fibonacci sequence\"); \nconsole.log(fibInstance()+\" is in the Fibonacci sequence\"); \nconsole.log(fibInstance()+\" is in the Fibonacci sequence\");\n</script>\n```", "```py\n<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"></\n script>\n```", "```py\n<!-- Google Analytics -->\n<script type=\"text/javascript\">\n\nvar _gaq = _gaq || []; \n_gaq.push(['_setAccount', 'UA-4591498-1']);\n_gaq.push(['_setDomainName', 'oreilly.com']);\n_gaq.push(['_addIgnoredRef', 'oreilly.com']);\n_gaq.push(['_setSiteSpeedSampleRate', 50]);\n_gaq.push(['_trackPageview']);\n\n(function() { var ga = document.createElement('script'); ga.type =\n'text/javascript'; ga.async = true; ga.src = ('https:' ==\ndocument.location.protocol ? 'https://ssl' : 'http://www') +\n'.google-analytics.com/ga.js'; var s =\ndocument.getElementsByTagName('script')[0];\ns.parentNode.insertBefore(ga, s); })();\n\n</script>\n```", "```py\nvar marker = new google.maps.Marker({\n      position: new google.maps.LatLng(-25.363882,131.044922),\n      map: map,\n      title: 'Some marker text'\n  });\n```", "```py\n$ pip install selenium\n```", "```py\n$ pip install webdriver-manager\n\n```", "```py\nfrom selenium import webdriver\nfrom selenium.webdriver.chrome.service import Service\nfrom webdriver_manager.chrome import ChromeDriverManager\n\ndriver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))\ndriver.get(\"http://www.python.org\")\ntime.sleep(2)\ndriver.close()\n```", "```py\nCHROMEDRIVER_PATH = ChromeDriverManager().install()\ndriver = webdriver.Chrome(service=Service(CHROMEDRIVER_PATH))\n```", "```py\nfrom selenium import webdriver\nfrom selenium.webdriver.chrome.service import Service\n\nCHROMEDRIVER_PATH = 'drivers/chromedriver_mac_arm64/chromedriver'\ndriver = webdriver.Chrome(service=Service(CHROMEDRIVER_PATH))\ndriver.get(\"http://www.python.org\")\ntime.sleep(2)\ndriver.close()\n\n```", "```py\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.chrome.options import Options\nimport time\n\nchrome_options = Options()\nchrome_options.add_argument(\"--headless\")\ndriver = webdriver.Chrome(\n    service=Service(CHROMEDRIVER_PATH),\n    options=chrome_options\n)\ndriver.get('http://pythonscraping.com/pages/javascript/ajaxDemo.html')\ntime.sleep(3)\nprint(driver.find_element(By.ID, 'content').text)\ndriver.close()\n\n```", "```py\nchrome_options = Options()\nchrome_options.add_argument('--headless')\n\n```", "```py\ndriver = webdriver.Chrome(\n    service=Service(CHROMEDRIVER_PATH),\n    options=chrome_options\n)\n\n```", "```py\nHere is some important text you want  to retrieve!\nA button to click!\n```", "```py\ndriver.find_element(By.CSS_SELECTOR, '#content')\ndriver.find_element(By.TAG_NAME, 'div')\n```", "```py\ndriver.find_elements(By.CSS_SELECTOR, '#content')\ndriver.find_elements(By.TAG_NAME, 'div')\n```", "```py\npageSource = driver.page_source\nbs = BeautifulSoup(pageSource, 'html.parser')\nprint(bs.find(id='content').get_text())\n```", "```py\nThis is some content that will appear on the page while it's loading.\n You don't care about scraping this.\n```", "```py\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\n\nchrome_options = Options()\nchrome_options.add_argument(\"--headless\")\ndriver = webdriver.Chrome(\n    service=Service(CHROMEDRIVER_PATH),\n    options=chrome_options)\n\ndriver.get('http://pythonscraping.com/pages/javascript/ajaxDemo.html')\ntry:\n    element = WebDriverWait(driver, 10).until(\n                       EC.presence_of_element_located((By.ID, 'loadedButton')))\nfinally:\n    print(driver.find_element(By.ID, 'content').text)\n    driver.close()\n\n```", "```py\nEC.presence_of_element_located((By.ID, 'loadedButton'))\n```", "```py\nprint(driver.find_element(By.ID, 'content').text)\n```", "```py\nfrom webdriver_manager.firefox import GeckoDriverManager\n​from webdriver_manager.microsoft import EdgeChromiumDriverManager\n\nprint(GeckoDriverManager().install())\nprint(EdgeChromiumDriverManager().install())\n\n```", "```py\nfrom selenium import webdriver\nfrom selenium.webdriver.chrome.options import Options\nfrom selenium.common.exceptions import StaleElementReferenceException\nimport time\n\ndef waitForLoad(driver):\n    elem = driver.find_element(By.TAG_NAME, \"html\")\n    count = 0\n    for _ in range(0, 20):\n        try:\n            elem == driver.find_element(By.TAG_NAME, \"html\")\n        except StaleElementReferenceException:\n            return\n        time.sleep(0.5)\n    print(\"Timing out after 10 seconds and returning\")\n\nchrome_options = Options()\nchrome_options.add_argument(\"--headless\")\ndriver = webdriver.Chrome(\n    service=Service(CHROMEDRIVER_PATH),\n    options=chrome_options\n)\ndriver.get(\"http://pythonscraping.com/pages/javascript/redirectDemo1.html\")\nwaitForLoad(driver)\nprint(driver.page_source)\ndriver.close()\n\n```", "```py\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.chrome.options import Options\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.common.exceptions import TimeoutException\n\nchrome_options = Options()\nchrome_options.add_argument(\"--headless\")\ndriver = webdriver.Chrome(\n    executable_path='drivers/chromedriver', \n    options=chrome_options)\ndriver.get('http://pythonscraping.com/pages/javascript/redirectDemo1.html')\ntry:\n    txt = 'This is the page you are looking for!'\n    bodyElement = WebDriverWait(driver, 15).until(\n        EC.presence_of_element_located((\n            By.XPATH,\n            f'//body[contains(text(), \"{txt}\")]'\n        ))\n    )\n    print(bodyElement.text)\nexcept TimeoutException:\n    print('Did not find the element')\n\n```"]