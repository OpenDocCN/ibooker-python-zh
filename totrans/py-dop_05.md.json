["```py\n1.1.3\n^^^^^\n22-Mar-2019\n\n* No code changes - adding packaging files for Debian\n\n1.1.2\n^^^^^\n13-Mar-2019\n\n* Try a few different executables (not only ``python``) to check for a working\n  one, in order of preference, starting with ``python3`` and ultimately falling\n  back to the connection interpreter\n```", "```py\nhello-world\n└── hello_world\n    ├── __init__.py\n    └── main.py\n\n1 directory, 2 files\n```", "```py\n$ python3 -m venv /tmp/packaging\n$ source /tmp/packaging/bin/activate\n```", "```py\n$ pip install setuptools twine\n```", "```py\nIn [1]: !pip list --format=json\n\n[{\"name\": \"appnope\", \"version\": \"0.1.0\"},\n {\"name\": \"astroid\", \"version\": \"2.2.5\"},\n {\"name\": \"atomicwrites\", \"version\": \"1.3.0\"},\n {\"name\": \"attrs\", \"version\": \"19.1.0\"}]\n```", "```py\nfrom setuptools import setup, find_packages\n\nsetup(\n    name=\"hello-world\",\n    version=\"0.0.1\",\n    author=\"Example Author\",\n    author_email=\"author@example.com\",\n    url=\"example.com\",\n    description=\"A hello-world example package\",\n    packages=find_packages(),\n    classifiers=[\n        \"Programming Language :: Python :: 3\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: OS Independent\",\n    ],\n)\n```", "```py\nhello-world\n├── hello_world\n│   ├── __init__.py\n│   └── main.py\n└── README\n└── setup.py\n\n1 directory, 4 files\n```", "```py\npython3 setup sdist\n```", "```py\n$ python3 setup.py sdist\nrunning sdist\nrunning egg_info\nwriting hello_world.egg-info/PKG-INFO\nwriting top-level names to hello_world.egg-info/top_level.txt\nwriting dependency_links to hello_world.egg-info/dependency_links.txt\nreading manifest file 'hello_world.egg-info/SOURCES.txt'\nwriting manifest file 'hello_world.egg-info/SOURCES.txt'\nrunning check\ncreating hello-world-0.0.1\ncreating hello-world-0.0.1/hello_world\ncreating hello-world-0.0.1/hello_world.egg-info\ncopying files to hello-world-0.0.1...\ncopying README -> hello-world-0.0.1\ncopying setup.py -> hello-world-0.0.1\ncopying hello_world/__init__.py -> hello-world-0.0.1/hello_world\ncopying hello_world/main.py -> hello-world-0.0.1/hello_world\nWriting hello-world-0.0.1/setup.cfg\nCreating tar archive\nremoving 'hello-world-0.0.1' (and everything under it)\n```", "```py\nhello-world\n├── dist\n│   └── hello-world-0.0.1.tar.gz\n├── hello_world\n│   ├── __init__.py\n│   └── main.py\n├── hello_world.egg-info\n│   ├── dependency_links.txt\n│   ├── PKG-INFO\n│   ├── SOURCES.txt\n│   └── top_level.txt\n├── README\n└── setup.py\n\n3 directories, 9 files\n```", "```py\n$ pip install dist/hello-world-0.0.1.tar.gz\nProcessing ./dist/hello-world-0.0.1.tar.gz\nBuilding wheels for collected packages: hello-world\n  Building wheel for hello-world (setup.py) ... done\nSuccessfully built hello-world\nInstalling collected packages: hello-world\nSuccessfully installed hello-world-0.0.1\n```", "```py\n$ twine upload --repository-url https://test.pypi.org/legacy/ \\\n  dist/hello-world-0.0.1.tar.gz\nUploading distributions to https://test.pypi.org/legacy/\nEnter your username:\nEnter your password:\n```", "```py\n$ python3 -m pip install --index-url https://test.pypi.org/simple/ hello-world\n```", "```py\n $ python setup.py register\n $ python setup.py upload\n```", "```py\ndeploy-pypi:\n  pandoc --from=markdown --to=rst README.md -o README.rst\n  python setup.py check --restructuredtext --strict --metadata\n  rm -rf dist\n  python setup.py sdist\n  twine upload dist/*\n  rm -f README.rst\n```", "```py\n$ mkdir -p pypi/hello-world\n$ tree pypi\npypi\n└── hello-world\n\n1 directory, 0 files\n```", "```py\n$ tree pypi\npypi\n└── hello-world\n    └── hello-world-0.0.1.tar.gz\n\n1 directory, 1 file\n```", "```py\n$ python3 -m http.server\nServing HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...\n```", "```py\n$ python3 -m venv /tmp/local-pypi\n$ source /tmp/local-pypi/bin/activate\n(local-pypi) $ pip install -i http://localhost:8000/ hello-world\nLooking in indexes: http://localhost:8000/\nCollecting hello-world\n  Downloading http://localhost:8000/hello-world/hello-world-0.0.1.tar.gz\nBuilding wheels for collected packages: hello-world\n  Building wheel for hello-world (setup.py) ... done\nSuccessfully built hello-world\nInstalling collected packages: hello-world\nSuccessfully installed hello-world-0.0.1\n```", "```py\nServing HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...\n127.0.0.1 [09:58:37] \"GET / HTTP/1.1\" 200 -\n127.0.0.1 [09:59:39] \"GET /hello-world/ HTTP/1.1\" 200 -\n127.0.0.1 [09:59:39] \"GET /hello-world/hello-world-0.0.1.tar.gz HTTP/1.1\" 200\n```", "```py\n$ tree\n.\n├── debian\n├── hello_world\n│   ├── __init__.py\n│   └── main.py\n├── README\n└── setup.py\n\n2 directories, 4 files\n```", "```py\n--Alfredo Deza <alfredo@example.com> Sat, 11 May 2013 2:12:00 -0800\n```", "```py\nparsechangelog/debian: warning: debian/changelog(l7): found start of entry where\n  expected more change data or trailer\n```", "```py\n-- Alfredo Deza <alfredo@example.com> Sat, 11 May 2013 2:12:00 -0800\n```", "```py\n$ sudo apt-get install devscripts\n```", "```py\n$ export DEBEMAIL=\"alfredo@example.com\"\n$ export DEBFULLNAME=\"Alfredo Deza\"\n```", "```py\n$ dch --package \"hello-world\" --create -v \"0.0.1\" \\\n  -D stable \"New upstream release\"\n```", "```py\nhello-world (0.0.1) stable; urgency=medium\n\n  * New upstream release\n\n -- Alfredo Deza <alfredo@example.com>  Thu, 11 Apr 2019 20:28:08 -0400\n```", "```py\nSource: hello-world\nMaintainer: Alfredo Deza <alfredo@example.com>\nSection: python\nPriority: optional\nBuild-Depends:\n debhelper (>= 11~),\n dh-python,\n python3-all\n python3-setuptools\nStandards-Version: 4.3.0\n\nPackage: python3-hello-world\nArchitecture: all\nDepends: ${misc:Depends}, ${python3:Depends}\nDescription: An example hello-world package built with Python 3\n```", "```py\n#!/usr/bin/make -f\n\nexport DH_VERBOSE=1\n\nexport PYBUILD_NAME=remoto\n\n%:\n    dh $@ --with python3 --buildsystem=pybuild\n```", "```py\n$ cat compat\n10\n```", "```py\nFormat: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0\nUpstream-Name: hello-world\nSource: https://example.com/hello-world\n\nFiles: *\nCopyright: 2019 Alfredo Deza\nLicense: Expat\n\nLicense: Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n  copy of this software and associated documentation files (the \"Software\"),\n  to deal in the Software without restriction, including without limitation\n  the rights to use, copy, modify, merge, publish, distribute, sublicense,\n  and/or sell copies of the Software, and to permit persons to whom the\n  Software is furnished to do so, subject to the following conditions:\n  .\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  .\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n  DEALINGS IN THE SOFTWARE.\n```", "```py\n.\n├── debian\n│   ├── changelog\n│   ├── compat\n│   ├── control\n│   ├── copyright\n│   └── rules\n├── hello_world\n│   ├── __init__.py\n│   └── main.py\n├── README\n└── setup.py\n\n2 directories, 9 files\n```", "```py\n$ debuild -i -us -uc -b\n...\ndpkg-deb: building package 'python3-hello-world'\nin '../python3-hello-world_0.0.1_all.deb'.\n...\n dpkg-genbuildinfo --build=binary\n dpkg-genchanges --build=binary >../hello-world_0.0.1_amd64.changes\ndpkg-genchanges: info: binary-only upload (no source code included)\n dpkg-source -i --after-build hello-world-debian\ndpkg-buildpackage: info: binary-only upload (no source included)\nNow running lintian hello-world_0.0.1_amd64.changes ...\nE: hello-world changes: bad-distribution-in-changes-file stable\nFinished running lintian.\n```", "```py\n$ mkdir /opt/binaries\n$ cp python3-hello-world_0.0.1_all.deb /opt/binaries/\n```", "```py\n$ sudo apt-get install reprepro\n```", "```py\nCodename: sid\nOrigin: example.com\nLabel: example.com\nArchitectures: amd64 source\nDscIndices: Sources Release .gz .bz2\nDebIndices: Packages Release . .gz .bz2\nComponents: main\nSuite: stable\nDescription: example repo for hello-world package\nContents: .gz .bz2\n```", "```py\n$ mkdir /opt/repo/debian/sid\n```", "```py\n$ reprepro --confdir /opt/repo/conf/distributions -b /opt/repo/debian/sid \\\n  -C main includedeb sid /opt/binaries/python3-hello-world_0.0.1_all.deb\nExporting indices...\n```", "```py\n$ cd /opt/repo/debian/sid\n$ python3 -m http.server\nServing HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...\n```", "```py\n$ cat /etc/apt/sources.list.d/hello-world.list\ndeb [trusted=yes] http://localhost:8000/ sid main\n```", "```py\n$ sudo apt-get update\nIgn:1 http://localhost:8000 sid InRelease\nGet:2 http://localhost:8000 sid Release [2,699 B]\nIgn:3 http://localhost:8000 sid Release.gpg\nGet:4 http://localhost:8000 sid/main amd64 Packages [381 B]\nGet:5 http://localhost:8000 sid/main amd64 Contents (deb) [265 B]\nFetched 3,345 B in 1s (6,382 B/s)\nReading package lists... Done\n```", "```py\n$ apt-cache search python3-hello-world\npython3-hello-world - An example hello-world package built with Python 3\n```", "```py\n$ sudo apt-get install python3-hello-world\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nThe following NEW packages will be installed:\n  python3-hello-world\n0 upgraded, 1 newly installed, 0 to remove and 48 not upgraded.\nNeed to get 2,796 B of archives.\nFetched 2,796 B in 0s (129 kB/s)\nSelecting previously unselected package python3-hello-world.\n(Reading database ... 242590 files and directories currently installed.)\nPreparing to unpack .../python3-hello-world_0.0.1_all.deb ...\nUnpacking python3-hello-world (0.0.1) ...\nSetting up python3-hello-world (0.0.1) ...\n$ sudo apt-get remove --purge python3-hello-world\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nThe following packages will be REMOVED:\n  python3-hello-world*\n0 upgraded, 0 newly installed, 1 to remove and 48 not upgraded.\nAfter this operation, 19.5 kB disk space will be freed.\nDo you want to continue? [Y/n] Y\n(Reading database ... 242599 files and directories currently installed.)\nRemoving python3-hello-world (0.0.1) ...\n```", "```py\n$ python3 setup.py bdist_rpm --spec-only\nrunning bdist_rpm\nrunning egg_info\nwriting hello_world.egg-info/PKG-INFO\nwriting dependency_links to hello_world.egg-info/dependency_links.txt\nwriting top-level names to hello_world.egg-info/top_level.txt\nreading manifest file 'hello_world.egg-info/SOURCES.txt'\nwriting manifest file 'hello_world.egg-info/SOURCES.txt'\nwriting 'dist/hello-world.spec'\n```", "```py\n%define name hello-world\n%define version 0.0.1\n%define unmangled_version 0.0.1\n%define release 1\n\nSummary: A hello-world example pacakge\nName: %{name}\nVersion: %{version}\nRelease: %{release}\nSource0: %{name}-%{unmangled_version}.tar.gz\nLicense: MIT\nGroup: Development/Libraries\nBuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-buildroot\nPrefix: %{_prefix}\nBuildArch: noarch\nVendor: Example Author <author@example.com>\nUrl: example.com\n\n%description\nA Python3 hello-world package\n\n%prep\n%setup -n %{name}-%{unmangled_version} -n %{name}-%{unmangled_version}\n\n%build\npython3 setup.py build\n\n%install\npython3 setup.py install --single-version-externally-managed -O1 \\\n--root=$RPM_BUILD_ROOT --record=INSTALLED_FILES\n\n%clean\nrm -rf $RPM_BUILD_ROOT\n\n%files -f INSTALLED_FILES\n%defattr(-,root,root)\n```", "```py\n$ sudo yum install rpm-build\n```", "```py\n$ mkdir -p /opt/repo/centos/{SOURCES,SRPMS,SPECS,RPMS,BUILD}\n$ cp dist/hello-world-0.0.1.tar.gz /opt/repo/centos/SOURCES/\n$ tree /opt/repo/centos\n/opt/repo/centos\n├── BUILD\n├── BUILDROOT\n├── RPMS\n├── SOURCES\n│   └── hello-world-0.0.1.tar.gz\n├── SPECS\n└── SRPMS\n\n6 directories, 1 file\n```", "```py\n$ rpmbuild -ba --define \"_topdir /opt/repo/centos\"  dist/hello-world.spec\n...\nExecuting(%build): /bin/sh -e /var/tmp/rpm-tmp.CmGOdp\nrunning build\nrunning build_py\ncreating build\ncreating build/lib\ncreating build/lib/hello_world\ncopying hello_world/main.py -> build/lib/hello_world\ncopying hello_world/__init__.py -> build/lib/hello_world\nExecuting(%install): /bin/sh -e /var/tmp/rpm-tmp.CQgOKD\n+ python3 setup.py install --single-version-externally-managed \\\n-O1 --root=/opt/repo/centos/BUILDROOT/hello-world-0.0.1-1.x86_64\nrunning install\nwriting hello_world.egg-info/PKG-INFO\nwriting dependency_links to hello_world.egg-info/dependency_links.txt\nwriting top-level names to hello_world.egg-info/top_level.txt\nreading manifest file 'hello_world.egg-info/SOURCES.txt'\nwriting manifest file 'hello_world.egg-info/SOURCES.txt'\nrunning install_scripts\nwriting list of installed files to 'INSTALLED_FILES'\nProcessing files: hello-world-0.0.1-1.noarch\nProvides: hello-world = 0.0.1-1\nWrote: /opt/repo/centos/SRPMS/hello-world-0.0.1-1.src.rpm\nWrote: /opt/repo/centos/RPMS/noarch/hello-world-0.0.1-1.noarch.rpm\nExecuting(%clean): /bin/sh -e /var/tmp/rpm-tmp.gcIJgT\n+ umask 022\n+ cd /opt/repo/centos//BUILD\n+ cd hello-world-0.0.1\n+ rm -rf /opt/repo/centos/BUILDROOT/hello-world-0.0.1-1.x86_64\n+ exit 0\n```", "```py\n$ tree /opt/repo/centos/RPMS\n/opt/repo/centos/RPMS\n└── noarch\n    └── hello-world-0.0.1-1.noarch.rpm\n\n1 directory, 1 file\n```", "```py\n$ sudo yum install createrepo\n```", "```py\n$ mkdir -p /var/www/repos/centos\n$ cp -r /opt/repo/centos/RPMS/noarch /var/www/repos/centos\n```", "```py\n$ createrepo -v /var/www/repos/centos/noarch\nSpawning worker 0 with 1 pkgs\nWorker 0: reading hello-world-0.0.1-1.noarch.rpm\nWorkers Finished\nSaving Primary metadata\nSaving file lists metadata\nSaving other metadata\nGenerating sqlite DBs\nStarting other db creation: Thu Apr 18 09:13:35 2019\nEnding other db creation: Thu Apr 18 09:13:35 2019\nStarting filelists db creation: Thu Apr 18 09:13:35 2019\nEnding filelists db creation: Thu Apr 18 09:13:35 2019\nStarting primary db creation: Thu Apr 18 09:13:35 2019\nEnding primary db creation: Thu Apr 18 09:13:35 2019\nSqlite DBs complete\n```", "```py\n$ mkdir /var/www/repos/centos/x86_64\n$ createrepo -v /var/www/repos/centos/x86_64\n```", "```py\n$ python3 -m http.server\nServing HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...\n```", "```py\n[hello-world]\nname=hello-world example repo for noarch packages\nbaseurl=http://0.0.0.0:8000/$basearch\nenabled=1\ngpgcheck=0\ntype=rpm-md\npriority=1\n\n[hello-world-noarch]\nname=hello-world example repo for noarch packages\nbaseurl=http://0.0.0.0:8000/noarch\nenabled=1\ngpgcheck=0\ntype=rpm-md\npriority=1\n```", "```py\n$ yum --enablerepo=hello-world search hello-world\nLoaded plugins: fastestmirror, priorities\nLoading mirror speeds from cached hostfile\n * base: reflector.westga.edu\n * epel: mirror.vcu.edu\n * extras: mirror.steadfastnet.com\n * updates: mirror.mobap.edu\nbase                                                                   | 3.6 kB\nextras                                                                 | 3.4 kB\nhello- world                                                           | 2.9 kB\nhello-world-noarch                                                     | 2.9 kB\nupdates                                                                | 3.4 kB\n8 packages excluded due to repository priority protections\n===============================================================================\nmatched: hello-world\n===============================================================================\nhello-world.noarch : A hello-world example pacakge\n```", "```py\n$ yum --enablerepo=hello-world install hello-world\nLoaded plugins: fastestmirror, priorities\nLoading mirror speeds from cached hostfile\n * base: reflector.westga.edu\n * epel: mirror.vcu.edu\n * extras: mirror.steadfastnet.com\n * updates: mirror.mobap.edu\n8 packages excluded due to repository priority protections\nResolving Dependencies\n--> Running transaction check\n---> Package hello-world.noarch 0:0.0.1-1 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\nInstalling:\n hello-world          noarch          0.0.1-1            hello-world-noarch\n\nTransaction Summary\nInstall  1 Package\n\nTotal download size: 8.1 k\nInstalled size: 1.3 k\nDownloading packages:\nhello-world-0.0.1-1.noarch.rpm                                         | 8.1 kB\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : hello-world-0.0.1-1.noarch\n  Verifying  : hello-world-0.0.1-1.noarch\n\nInstalled:\n  hello-world.noarch 0:0.0.1-1\n\nComplete!\n```", "```py\n$ yum remove hello-world\nLoaded plugins: fastestmirror, priorities\nResolving Dependencies\n--> Running transaction check\n---> Package hello-world.noarch 0:0.0.1-1 will be erased\n--> Finished Dependency Resolution\n\nDependencies Resolved\nRemoving:\n hello-world          noarch          0.0.1-1           @hello-world-noarch\n\nTransaction Summary\nRemove  1 Package\n\nInstalled size: 1.3 k\nIs this ok [y/N]: y\nDownloading packages:\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Erasing    : hello-world-0.0.1-1.noarch\n  Verifying  : hello-world-0.0.1-1.noarch\nRemoved:\n  hello-world.noarch 0:0.0.1-1\nComplete!\n```", "```py\n[18/Apr/2019 03:37:24] \"GET /x86_64/repodata/repomd.xml HTTP/1.1\"\n[18/Apr/2019 03:37:24] \"GET /noarch/repodata/repomd.xml HTTP/1.1\"\n[18/Apr/2019 03:37:25] \"GET /x86_64/repodata/primary.sqlite.bz2 HTTP/1.1\"\n[18/Apr/2019 03:37:25] \"GET /noarch/repodata/primary.sqlite.bz2 HTTP/1.1\"\n[18/Apr/2019 03:56:49] \"GET /noarch/hello-world-0.0.1-1.noarch.rpm HTTP/1.1\"\n```", "```py\n$ mkdir -p /opt/http\n$ cd /opt/http\n$ python3 -m venv .\n$ source bin/activate\n(http) $ pip install \"pecan==1.3.3\"\n```", "```py\n$ pecan create api rest-api\nCreating /opt/http/api\nRecursing into +package+\n  Creating /opt/http/api/api\n...\nCopying scaffolds/rest-api/config.py_tmpl to /opt/http/api/config.py\nCopying scaffolds/rest-api/setup.cfg_tmpl to /opt/http/api/setup.cfg\nCopying scaffolds/rest-api/setup.py_tmpl to /opt/http/api/setup.py\n```", "```py\n(http) $ python setup.py install\nrunning install\nrunning bdist_egg\nrunning egg_info\ncreating api.egg-info\n...\ncreating dist\ncreating 'dist/api-0.1-py3.6.egg' and adding 'build/bdist.linux-x86_64/egg'\nremoving 'build/bdist.linux-x86_64/egg' (and everything under it)\nProcessing api-0.1-py3.6.egg\ncreating /opt/http/lib/python3.6/site-packages/api-0.1-py3.6.egg\nExtracting api-0.1-py3.6.egg to /opt/http/lib/python3.6/site-packages\n...\nInstalled /opt/http/lib/python3.6/site-packages/api-0.1-py3.6.egg\nProcessing dependencies for api==0.1\nFinished processing dependencies for api==0.1\n```", "```py\n(http) $ pecan serve config.py\nStarting server in PID 17517\nserving on 0.0.0.0:8080, view at http://127.0.0.1:8080\n```", "```py\n(http) $ curl localhost:8080\nHello, World!\n```", "```py\n[Unit]\nDescription=hello world pecan service\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=/opt/http/bin/pecan serve /opt/http/api/config.py\nWorkingDirectory=/opt/http/api\nStandardOutput=journal\nStandardError=journal\n\n[Install]\nWantedBy=multi-user.target\n```", "```py\n$ /opt/http/bin/pecan serve /opt/http/api/config.py\nStarting server in PID 20621\nserving on 0.0.0.0:8080, view at http://127.0.0.1:8080\n```", "```py\n$ cp hello-world.service /etc/systemd/system/\n```", "```py\n$ systemctl daemon-reload\n```", "```py\n$ systemctl status hello-world\n● hello-world.service - hello world pecan service\n   Loaded: loaded (/etc/systemd/system/hello-world.service; disabled; )\n   Active: inactive (dead)\n```", "```py\n$ curl localhost:8080\ncurl: (7) Failed to connect to localhost port 8080: Connection refused\n$ systemctl start hello-world\n$ systemctl status hello-world\n● hello-world.service - hello world pecan service\n   Loaded: loaded (/etc/systemd/system/hello-world.service; disabled; )\n   Active: active (running) since Tue 2019-04-23 13:44:20 EDT; 5s ago\n Main PID: 23980 (pecan)\n    Tasks: 1 (limit: 4915)\n   Memory: 20.1M\n   CGroup: /system.slice/hello-world.service\n           └─23980 /opt/http/bin/python /opt/http/bin/pecan serve config.py\n\nApr 23 13:44:20 huando systemd[1]: Started hello world pecan service.\n```", "```py\n$ curl localhost:8080\nHello, World!\n```", "```py\n$ systemctl enable hello-world\nCreated symlink hello-world.service → /etc/systemd/system/hello-world.service.\n```", "```py\n$ journalctl -u hello-world\n-- Logs begin at Mon 2019-04-15 09:05:11 EDT, end at Tue 2019-04-23\nApr 23 13:44:20 srv1 systemd[1]: Started hello world pecan service.\nApr 23 13:44:44 srv1 pecan[23980] [INFO    ] [pecan.commands.serve] GET / 200\nApr 23 13:44:55 srv1 systemd[1]: Stopping hello world pecan service...\nApr 23 13:44:55 srv1 systemd[1]: hello-world.service: Main process exited\nApr 23 13:44:55 srv1 systemd[1]: hello-world.service: Succeeded.\nApr 23 13:44:55 srv1 systemd[1]: Stopped hello world pecan service.\n```", "```py\n$ tail -f pecan-access.log\n```", "```py\n$ journalctl -fu hello-world\nApr 23 13:44:44 srv1 pecan[23980][INFO][pecan.commands.serve] GET / 200\nApr 23 13:44:44 srv1 pecan[23980][INFO][pecan.commands.serve] GET / 200\nApr 23 13:44:44 srv1 pecan[23980][INFO][pecan.commands.serve] GET / 200\n```", "```py\n$  journalctl -u hello-world --since \"-15min\"\n-- Logs begin at Mon 2019-04-15 09:05:11 EDT, end at Tue 2019-04-23\n-- No entries --\n```"]