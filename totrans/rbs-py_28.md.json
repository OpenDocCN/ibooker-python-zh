["```py\ndef check_meals_for_calorie_overage(meals: list[Meal], target: int):\n    for meal in meals:\n        target -= meal.calories\n        if target < 0:\n            display_warning(meal, WarningType.OVER_CALORIE_LIMIT)\n            continue\n        display_checkmark(meal)\n```", "```py\ndef test_no_warnings_if_under_calories():\n    meals = [Meal(\"Fish 'n' Chips\", 1000)]\n    check_meals_for_calorie_overage(meals, 1200)\n    assert_no_warnings_displayed_on_meal(\"Fish 'n' Chips\")\n    assert_checkmark_on_meal(\"Fish 'n' Chips\")\n\ndef test_no_exception_thrown_if_no_meals():\n    check_meals_for_calorie_overage([], 1200)\n    # no explicit assert, just checking for no exceptions\n\ndef test_meal_is_marked_as_over_calories():\n    meals = [Meal(\"Fish 'n' Chips\", 1000)]\n    check_meals_for_calorie_overage(meals, 900)\n    assert_meal_is_over_calories(\"Fish 'n' Chips\")\n\ndef test_meal_going_over_calories_does_not_conflict_with_previous_meals():\n    meals = [Meal(\"Fish 'n' Chips\", 1000), Meal(\"Banana Split\", 400)]\n    check_meals_for_calorie_overage(meals, 1200)\n    assert_no_warnings_displayed_on_meal(\"Fish 'n' Chips\")\n    assert_checkmark_on_meal(\"Fish 'n' Chips\")\n    assert_meal_is_over_calories(\"Banana Split\")\n```", "```py\npip install mutmut\n```", "```py\nmutmut run --paths-to-mutate code_examples/chapter24\n```", "```py\nmutmut show 32\n--- code_examples/chapter24/calorie_tracker.py\n+++ code_examples/chapter24/calorie_tracker.py\n@@ -26,7 +26,7 @@\n def check_meals_for_calorie_overage(meals: list[Meal], target: int):\n     for meal in meals:\n         target -= meal.calories\n-        if target < 0:\n+        if target <= 0:\n             display_warning(meal, WarningType.OVER_CALORIE_LIMIT)\n             continue\n         display_checkmark(meal)\n\nmutmut show 33\n--- code_examples/chapter24/calorie_tracker.py\n+++ code_examples/chapter24/calorie_tracker.py\n@@ -26,7 +26,7 @@\n def check_meals_for_calorie_overage(meals: list[Meal], target: int):\n     for meal in meals:\n         target -= meal.calories\n-        if target < 0:\n+        if target < 1:\n             display_warning(meal, WarningType.OVER_CALORIE_LIMIT)\n             continue\n         display_checkmark(meal)\n\nmutmut show 34\n--- code_examples/chapter24/calorie_tracker.py\n+++ code_examples/chapter24/calorie_tracker.py\n@@ -28,6 +28,6 @@\n         target -= meal.calories\n         if target < 0:\n             display_warning(meal, WarningType.OVER_CALORIE_LIMIT)\n-            continue\n+            break\n         display_checkmark(meal)\n```", "```py\nmutmut apply 32\nmutmut apply 33\nmutmut apply 34\n```", "```py\ndef test_failing_mutmut():\n    clear_warnings()\n    meals = [Meal(\"Fish 'n' Chips\", 1000),\n             Meal(\"Late-Night Cookies\", 300),\n             Meal(\"Banana Split\", 400)\n             Meal(\"Tub of Cookie Dough\", 1000)]\n\n    check_meals_for_calorie_overage(meals, 1300)\n\n    assert_no_warnings_displayed_on_meal(\"Fish 'n' Chips\")\n    assert_checkmark_on_meal(\"Fish 'n' Chips\")\n    assert_no_warnings_displayed_on_meal(\"Late-Night Cookies\")\n    assert_checkmark_on_meal(\"Late-Night Cookies\")\n    assert_meal_is_over_calories(\"Banana Split\")\n    assert_meal_is_over_calories(\"Tub of Cookie Dough\")\n```", "```py\nmutmut junitxml > /tmp/test.xml\n```", "```py\npip install coverage\n```", "```py\ncoverage run -m pytest code_examples/chapter24\n```", "```py\nmutmut run --paths-to-mutate code_examples/chapter24 --use-coverage\n```", "```py\ndef test_foo_can_do_something():\n    foo = Thingamajiggy()\n    foo.doSomething()\n    assert foo is not None\n\ndef test_foo_parameterized_still_does_the_right_thing():\n    foo = Thingamajiggy(y=12)\n    foo.doSomethingElse(15)\n    assert foo is not None\n```"]