["```py\n>>> bool(True)\nTrue\n>>> bool(1)\nTrue\n>>> bool(45)\nTrue\n>>> bool(-45)\nTrue\n```", "```py\n>>> bool(False)\nFalse\n>>> bool(0)\nFalse\n>>> bool(0.0)\nFalse\n```", "```py\n>>> 5\n5\n```", "```py\n>>> 0\n0\n```", "```py\n>>> 05\n  File \"<stdin>\", line 1\n    05\n     ^\nSyntaxError: invalid token\n```", "```py\n>>> 123\n123\n>>> +123\n123\n```", "```py\n>>> -123\n-123\n```", "```py\n>>> 1,000,000\n(1, 0, 0)\n```", "```py\n>>> million = 1_000_000\n>>> million\n1000000\n```", "```py\n>>> 1_2_3\n123\n```", "```py\n>>> 5 + 9\n14\n>>> 100 - 7\n93\n>>> 4 - 10\n-6\n```", "```py\n>>> 5 + 9 + 3\n17\n>>> 4 + 3 - 2 - 1 + 6\n10\n```", "```py\n>>> 5+9   +      3\n17\n```", "```py\n>>> 6 * 7\n42\n>>> 7 * 6\n42\n>>> 6 * 7 * 2 * 3\n252\n```", "```py\n>>> 9 / 5\n1.8\n```", "```py\n>>> 9 // 5\n1\n```", "```py\n>>> 5 / 0\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nZeroDivisionError: division by zero\n>>> 7 // 0\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nZeroDivisionError: integer division or modulo by z\n```", "```py\n>>> a = 95\n>>> a\n95\n>>> a - 3\n92\n```", "```py\n>>> a\n95\n```", "```py\n>>> a = a - 3\n>>> a\n92\n```", "```py\n>>> a = 95\n>>> temp = a - 3\n>>> a = temp\n```", "```py\n>>> a = a - 3\n```", "```py\n>>> a = 95\n>>> a -= 3\n>>> a\n92\n```", "```py\n>>> a = 92\n>>> a += 8\n>>> a\n100\n```", "```py\n>>> a = 100\n>>> a *= 2\n>>> a\n200\n```", "```py\n>>> a = 200\n>>> a /= 3\n>>> a\n66.66666666666667\n```", "```py\n>>> a = 13\n>>> a //= 4\n>>> a\n3\n```", "```py\n>>> 9 % 5\n4\n```", "```py\n>>> divmod(9,5)\n(1, 4)\n```", "```py\n>>> 9 // 5\n1\n>>> 9 % 5\n4\n```", "```py\n>>> 2**3\n8\n>>> 2.0 ** 3\n8.0\n>>> 2 ** 3.0\n8.0\n>>> 0 ** 3\n0\n```", "```py\n>>> 2 + 3 * 4\n```", "```py\n>>> 2 + 3 * 4\n14\n```", "```py\n>>> 2 + (3 * 4)\n14\n```", "```py\n>>> -5 ** 2\n-25\n```", "```py\n>>> - (5 ** 2)\n-25\n```", "```py\n>>> (-5) ** 2\n25\n```", "```py\n>>> 10\n10\n```", "```py\n>>> 0b10\n2\n```", "```py\n>>> 0o10\n8\n```", "```py\n>>> 0x10\n16\n```", "```py\n>>> value = 65\n>>> bin(value)\n'0b1000001'\n>>> oct(value)\n'0o101'\n>>> hex(value)\n'0x41'\n```", "```py\n>>> chr(65)\n'A'\n```", "```py\n>>> ord('A')\n65\n```", "```py\n>>> int(True)\n1\n>>> int(False)\n0\n```", "```py\n>>> bool(1)\nTrue\n>>> bool(0)\nFalse\n```", "```py\n>>> int(98.6)\n98\n>>> int(1.0e4)\n10000\n```", "```py\n>>> bool(1.0)\nTrue\n>>> bool(0.0)\nFalse\n```", "```py\n>>> int('99')\n99\n>>> int('-23')\n-23\n>>> int('+12')\n12\n>>> int('1_000_000')\n1000000\n```", "```py\n>>> int('10', 2) # binary\n2\n>>> int('10', 8) # octal\n8\n>>> int('10', 16) # hexadecimal\n16\n>>> int('10', 22) # chesterdigital\n22\n```", "```py\n>>> int(12345)\n12345\n```", "```py\n>>> int('99 bottles of beer on the wall')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nValueError: invalid literal for int() with base 10: '99 bottles of beer on the wall'\n>>> int('')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nValueError: invalid literal for int() with base 10: ''\n```", "```py\n>>> int('98.6')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nValueError: invalid literal for int() with base 10: '98.6'\n>>> int('1.0e4')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nValueError: invalid literal for int() with base 10: '1.0e4'\n```", "```py\n>>> 4 + 7.0\n11.0\n```", "```py\n>>> True + 2\n3\n>>> False + 5.0\n5.0\n```", "```py\n>>>\n>>> googol = 10**100\n>>> googol\n100000000000000000000000000000000000000000000000000000000000000000000000000000\n00000000000000000000000\n>>> googol * googol\n100000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000\n```", "```py\n>>> 5.\n5.0\n>>> 5.0\n5.0\n>>> 05.0\n5.0\n```", "```py\n>>> 5e0\n5.0\n>>> 5e1\n50.0\n>>> 5.0e1\n50.0\n>>> 5.0 * (10 ** 1)\n50.0\n```", "```py\n>>> million = 1_000_000.0\n>>> million\n1000000.0\n>>> 1.0_0_1\n1.001\n```", "```py\n>>> float(True)\n1.0\n>>> float(False)\n0.0\n```", "```py\n>>> float(98)\n98.0\n>>> float('99')\n99.0\n```", "```py\n>>> float('98.6')\n98.6\n>>> float('-1.5')\n-1.5\n>>> float('1.0e4')\n10000.0\n```", "```py\n>>> 43 + 2.\n45.0\n```", "```py\n>>> False + 0\n0\n>>> False + 0.\n0.0\n>>> True + 0\n1\n>>> True + 0.\n1.0\n```"]