["```py\n>>> print(time.strptime(\"Sep 20, 2022\", '%b %d, %Y'))\n```", "```py\ntime.struct_time(tm_year=2022, tm_mon=9, tm_mday=20, \ntm_hour=0, tm_min=0, tm_sec=0, tm_wday=1, \ntm_yday=263, tm_isdst=-1)\n```", "```py\ndate(x,y,z).replace(month=m) == date(x,m,z)\n```", "```py\ntime.strftime(*`fmt`*, *`d`*.timetuple())\n```", "```py\ndate(1,1,1).toordinal() == 1\n```", "```py\ntime(x,y,z).replace(minute=m) == time(x,m,z)\n```", "```py\ndatetime(d.year, d.month, d.day,\n         t.hour, t.minute, t.second,\n         t.microsecond, t.tzinfo)\n```", "```py\n*`# create datetime replacing just month with no`* \n*`# other changes (== datetime(x,m,z))`*\ndatetime(x,y,z).replace(month=m) \n*`# create aware datetime from naive datetime.now()`*\n*`d`* = datetime.now().replace(tzinfo=ZoneInfo(\n                    \"US/Pacific\"))\n```", "```py\n>>> print(repr(timedelta(minutes=0.5)))\n```", "```py\ndatetime.timedelta(days=0, seconds=30)\n```", "```py\n>>> print(repr(timedelta(minutes=-0.5)))\n```", "```py\ndatetime.timedelta(days=-1, seconds=86370)\n```", "```py\n>>> `from` datetime `import` datetime\n>>> `from` zoneinfo `import` ZoneInfo\n>>> d=datetime.now(tz=ZoneInfo(\"America/Los_Angeles\"))\n>>> d\n```", "```py\ndatetime.datetime(2021,10,21,16,32,23,96782,tzinfo=zoneinfo.ZoneInfo(key\n='America/Los_Angeles'))\n```", "```py\n>>> dny=d.replace(tzinfo=ZoneInfo(\"America/New_York\"))\n>>> dny\n```", "```py\ndatetime.datetime(2021,10,21,16,32,23,96782,tzinfo=zoneinfo.ZoneInfo(key\n='America/New_York')) \n```", "```py\n>>> dutc=d.astimezone(tz=ZoneInfo(\"UTC\"))\n>>> dutc\n```", "```py\ndatetime.datetime(2021,10,21,23,32,23,96782,tzinfo=zoneinfo.ZoneInfo(key\n='UTC')) \n```", "```py\n>>> daware=datetime.utcnow().replace(tzinfo=ZoneInfo(\"UTC\"))\n>>> daware\n```", "```py\ndatetime.datetime(2021,10,*21,23*,32,23,96782,tzinfo=zoneinfo.ZoneInfo(key\n='UTC'))\n```", "```py\n>>> dutc.astimezone(ZoneInfo(\"Asia/Katmandu\")) *`# offset +5h 45m`*\n```", "```py\ndatetime.datetime(2021,10,*22,5*,17,23,96782,tzinfo=zoneinfo.ZoneInfo(key\n='Asia/Katmandu')) \n```", "```py\n>>> tz_local=datetime.now().astimezone().tzinfo\n>>> tz_local\n```", "```py\ndatetime.timezone(datetime.timedelta(days=-1, seconds=61200), 'Pacific\nDaylight Time')\n```", "```py\n>>> dt_loc=dutc.astimezone(tz_local)\n>>> dt_loc\n```", "```py\ndatetime.datetime(2021, 10, 21, 16, 32, 23, 96782, tzinfo=datetime.time\n(datetime.timedelta(days=-1, seconds=61200), 'Pacific Daylight Time'))\n```", "```py\n>>> d==dt_local\n```", "```py\nTrue\n```", "```py\n>>> tz_list=zoneinfo.available_timezones()\n>>> sorted(tz_list)[0],sorted(tz_list)[-1]\n```", "```py\n('Africa/Abidjan', 'Zulu')\n```", "```py\n>>> `from` dateutil `import` easter\n>>> print(easter.easter(2023))\n```", "```py\n2023-04-09\n```", "```py\n>>> `from` dateutil `import` parser\n>>> print(parser.parse('Saturday, January 28,'\n                       ' 2006, at 11:15pm'))\n```", "```py\n2006-01-28 23:15:00\n```", "```py\n`def` enter_repeat(s, first_delay, period, priority,\n        func, args):\n    `def` repeating_wrapper():\n        s.enter(period, priority,\n                repeating_wrapper, ())\n        func(*args)\n    s.enter(first_delay, priority,\n        repeating_wrapper, args)\n```"]