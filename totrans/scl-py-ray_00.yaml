- en: Foreword
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: 'In this book, Holden Karau and Boris Lublinksy touch on the biggest trend in
    computing today: the growing need for scalable computing. This trend is being
    driven, in large part, by the proliferation of machine learning (ML) throughout
    many industries and the growing amount of computational resources needed to do
    ML in practice.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，Holden Karau 和 Boris Lublinksy 探讨了当今计算领域最重要的趋势：对可扩展计算需求的增长。这一趋势在很大程度上受到机器学习（ML）在许多行业的普及和实际应用中所需的计算资源数量的增加驱动。
- en: The last decade has seen significant shifts in the nature of computing. In 2012,
    when I first began working in ML, much of it was managed on a single laptop or
    server, and many practitioners were using Matlab. That year was something of an
    inflection point as deep learning made a splash by winning the ImageNet competition
    by an astounding margin. That led to a sustained trend over many years in which
    more and more computation on more and more data has led to better results. This
    trend has yet to show signs of slowing down and, if anything, has accelerated
    in recent years with the advent of large language models.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 过去的十年见证了计算性质的显著变化。在2012年，当我首次涉足ML时，大部分工作都是在单个笔记本电脑或服务器上进行的，并且许多从业者在使用Matlab。那一年可以说是一个拐点，因为深度学习以惊人的优势赢得了ImageNet竞赛。这导致了多年来持续的趋势，即越来越多的计算在越来越多的数据上取得了更好的结果。这一趋势尚未显示出减缓的迹象，而且在最近几年随着大语言模型的出现而加速。
- en: This shift—from small models on small data to large models on large data—has
    changed the practice of ML. Software engineering now plays a central role in ML,
    and teams and organizations that successfully leverage ML often build large in-house
    infrastructure teams to support the distributed systems necessary for scaling
    ML applications across hundreds or thousands of machines.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从小数据和小模型转向大数据和大模型，这改变了ML的实践。软件工程现在在ML中扮演着核心角色，成功利用ML的团队和组织通常会建立大型内部基础设施团队，以支持跨数百或数千台机器扩展ML应用所需的分布式系统。
- en: So at the same time that ML is growing in its capabilities and becoming more
    relevant for a variety of businesses, it is also becoming increasingly difficult
    to do because of the significant infrastructure investment required to do it.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，尽管ML在其功能方面正在增长，并且对各种企业越来越相关，但由于进行ML所需的重要基础设施投资，它也变得越来越难以实现。
- en: To get to a state where every business can leverage and get value out of ML,
    we will have to make it far easier to apply in practice. This will mean eliminating
    the need for developers to become experts in distributed systems and infrastructure.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要使每个企业能够利用并从ML中获得价值，我们需要使其在实践中应用变得更加容易。这意味着消除开发人员成为分布式系统和基础设施专家的需求。
- en: This goal, making scalable computing and scalable ML easy to do, is the purpose
    of Ray and the reason that we created Ray in the first place. This is a natural
    continuation of a progression in computing. Going back a handful of decades, there
    was a time when developers had to program in Assembly Language and other low-level
    machine languages in order to build applications, and so the best developers were
    the people who could perform low-level memory optimizations and other manipulations.
    That made software development difficult to do and limited the number of people
    who could build applications. Today, very few developers think about Assembly.
    It is no longer on the critical path for application development, and as a result,
    far more people can develop applications and build great products today.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 使可扩展计算和可扩展ML变得易于操作，这是Ray的目标，也是我们首次创建Ray的原因。这是计算进步的自然延续。几十年前，开发人员必须使用汇编语言和其他低级机器语言来构建应用程序，因此能够执行低级内存优化和其他操作的人才被认为是最优秀的开发者。这使得软件开发难以进行，并限制了能够构建应用程序的人数。今天，很少有开发人员会考虑汇编语言。它不再是应用程序开发的关键路径，因此如今有更多的人可以开发应用程序并构建出色的产品。
- en: The same thing will happen with infrastructure. Today, building and managing
    infrastructure for scaling Python applications and scaling ML applications is
    on the critical path for doing ML and for building scalable applications and products.
    However, infrastructure will go the way of Assembly Language. When that happens,
    it will open up the door and far more people will build these kinds of applications.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施也将面临同样的情况。今天，为了扩展 Python 应用程序和扩展 ML 应用程序的基础设施建设和管理已经成为进行 ML 和构建可扩展应用程序和产品的关键路径。然而，基础设施将走上汇编语言的道路。当这种情况发生时，将会打开大门，更多的人将会构建这些类型的应用程序。
- en: '*Scaling Python and Ray* can serve as an entry point for anyone looking to
    do ML in practice or looking to build the next generation of scalable products
    and applications. It touches on a wide variety of topics, ranging from scaling
    a variety of important ML patterns, from deep learning to hyperparameter tuning
    to reinforcement learning. It touches on the best practices for scaling data ingest
    and preprocessing. It covers the fundamentals of building scalable applications.
    Importantly, it touches on how Ray fits into the broader ML and computing ecosystem.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*Scaling Python and Ray* 可作为任何希望实践 ML 或希望构建下一代可扩展产品和应用程序的人的入门指南。它涵盖了多个重要 ML
    模式的扩展，从深度学习到超参数调整再到强化学习。它涉及了扩展数据摄取和预处理的最佳实践。它介绍了构建可扩展应用程序的基础知识。重要的是，它还介绍了 Ray
    如何融入更广泛的 ML 和计算生态系统中。'
- en: I hope you enjoy reading this book! It will equip you to understand the biggest
    trend in computing and can equip you with the tools to navigate and leverage that
    trend as you look to apply ML to your business or build the next great product
    and application.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢阅读这本书！它将使你能够理解计算领域最大的趋势，并为你提供工具，帮助你在应用 ML 到业务中或构建下一个伟大的产品和应用程序时利用和导航这一趋势。
- en: Robert Nishihara
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Robert Nishihara
- en: Cocreator of Ray; cofounder and CEO of Anyscale
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Ray 的共同创始人；Anyscale 的联合创始人兼首席执行官
- en: San Francisco, November 2022
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 2022 年 11 月，旧金山
