- en: Appendix B. Install Python 3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Most of the examples in this book were written and tested with Python 3.7,
    the most recent stable version at the time of writing. The [What’s New in Python
    page](https://docs.python.org/3/whatsnew) presents what was added in each version.
    There are many sources of Python and many ways to install a new version. In this
    appendix, I describe a few of these ways:'
  prefs: []
  type: TYPE_NORMAL
- en: A standard installation downloads Python from *python.org*, and adds the helper
    programs `pip` and `virtualenv`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If your work is heavily scientific, you may prefer to get Python bundled with
    many scientific packages from Anaconda and use its package installer `conda` instead
    of `pip`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows doesn’t have Python at all, and macOS, Linux, and Unix tend to have
    old versions. Until they catch up, you may need to install Python 3 yourself.
  prefs: []
  type: TYPE_NORMAL
- en: Check Your Python Version
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In a terminal or terminal window, type `python -V`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Depending on your operating system, if you don’t have Python or the operating
    system can’t find it, you’ll get some error message like *command not found*.
  prefs: []
  type: TYPE_NORMAL
- en: If you do have Python and it’s version 2, you may want to install Python 3—either
    system wide, or just for yourself in a virtualenv (see [“Use virtualenv”](ch19.html#virtualenv),
    or [“Install virtualenv”](#install_virtualenv)). In this appendix, I show how
    to install Python 3 system wide.
  prefs: []
  type: TYPE_NORMAL
- en: Install Standard Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Go to the official Python [download page](https://www.python.org/downloads)
    with your web browser. It tries to guess your operating system and present the
    appropriate choices, but if it guesses wrong, you can use these:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Python Releases for Windows](https://www.python.org/downloads/windows)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Releases for macOS](https://www.python.org/downloads/mac-osx)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python Source Releases (Linux and Unix)](https://www.python.org/downloads/source)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You’ll see a page similar to that shown in [Figure B-1](#fig_download_top).
  prefs: []
  type: TYPE_NORMAL
- en: '![inp2 ab01](assets/inp2_ab01.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure B-1\. Sample download page
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: If you click the yellow Download Python 3.7.3 button, it will download that
    version for your operating system. If you’d like to learn a little about it first,
    click the blue link text Python 3.7.3 in the first column of the table at the
    bottom, under Release version. This takes you to an information page like the
    one shown in [Figure B-2](#fig_download_specific).
  prefs: []
  type: TYPE_NORMAL
- en: '![inp2 ab02](assets/inp2_ab02.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure B-2\. Detail page for download
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: You need to scroll down the page to see the actual download links ([Figure B-3](#fig_download_payload)).
  prefs: []
  type: TYPE_NORMAL
- en: '![inp2 ab03](assets/inp2_ab03.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure B-3\. Bottom of page offering downloads
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: macOS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Click the [macOS 64-bit/32-bit installer](https://oreil.ly/54lG8) link to download
    a Mac *.pkg* file. Double-click it to see an introductory dialog box ([Figure B-4](#fig_install_mac_1)).
  prefs: []
  type: TYPE_NORMAL
- en: '![inp2 ab04](assets/inp2_ab04.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure B-4\. Mac install dialog 1
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Click Continue. You’ll go through a succession of other dialog boxes.
  prefs: []
  type: TYPE_NORMAL
- en: When it’s all done, you should see the dialog shown in [Figure B-5](#fig_install_mac_9).
  prefs: []
  type: TYPE_NORMAL
- en: '![inp2 ab05](assets/inp2_ab05.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure B-5\. Mac install dialog 9
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Python 3 will be installed as */usr/local/bin/python3*, leaving any existing
    Python 2 on your computer unchanged.
  prefs: []
  type: TYPE_NORMAL
- en: Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Windows has never included Python, but recently made it easier to install. The
    [May 2019 update](https://oreil.ly/G8Abf) for Windows 10 includes *python.exe*
    and *python3.exe* files. These aren’t the Python interpreter, but links to a new
    [Python 3.7 page](https://oreil.ly/Lky_h) at the Microsoft Store. You can use
    this link to download and install Python in the same way you get other Windows
    software.
  prefs: []
  type: TYPE_NORMAL
- en: 'Or you can download and install Python from the official Python site:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Windows x86 MSI installer (32-bit)](http://bit.ly/win-x86)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Windows x86-64 MSI installer (64-bit)](http://bit.ly/win-x86-64)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To determine whether you have a 32-bit or 64-bit version of Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: Click the Start button.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Right-click Computer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Click Properties and find the bit value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Click the appropriate installer (*.msi* file). After it’s downloaded, double-click
    it and follow the installer directions.
  prefs: []
  type: TYPE_NORMAL
- en: Linux or Unix
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Linux and Unix users get a choice of compressed source formats:'
  prefs: []
  type: TYPE_NORMAL
- en: '[XZ compressed source tarball](http://bit.ly/xz-tarball)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Gzipped source tarball](http://bit.ly/gzip-tarball)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download either one. Decompress it by using `tar xJ` (*.xz* file) or `tar xz`
    (*.tgz* file) and then run the resulting shell script.
  prefs: []
  type: TYPE_NORMAL
- en: Install the pip Package Manager
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Beyond the standard Python installation, two tools are almost essential for
    Python development: `pip` and `virtualenv`.'
  prefs: []
  type: TYPE_NORMAL
- en: The `pip` package is the most popular way to install third-party (nonstandard)
    Python packages. It has been annoying that such a useful tool isn’t part of standard
    Python and that you’ve needed to download and install it yourself. As a friend
    of mine used to say, it’s a cruel hazing ritual. The good news is that `pip` is
    a standard part of Python, starting with the 3.4 release.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have Python 3 but only the Python 2 version of `pip`, here’s how to
    get the Python 3 version on Linux or macOS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This installs `pip-3.3` in the `bin` directory of your Python 3 installation.
    Then, use `pip-3.3` to install third-party Python packages rather than Python
    2’s `pip`.
  prefs: []
  type: TYPE_NORMAL
- en: Install virtualenv
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Often used with `pip`, the `virtualenv` program is a way to install Python packages
    in a specified directory (folder) to avoid interactions with any preexisting system
    Python packages. This lets you use whatever Python goodies you want, even if you
    don’t have permission to change the existing installation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some good guides to `pip` and `virtualenv` are:'
  prefs: []
  type: TYPE_NORMAL
- en: '[A Non-Magical Introduction to Pip and Virtualenv for Python Beginners](http://bit.ly/jm-pip-vlenv)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Hitchhiker’s Guide to Packaging: Pip](http://bit.ly/hhgp-pip)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other Packaging Solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you’ve seen, Python’s packaging techniques vary, and none work well for every
    problem. The [PyPA](https://www.pypa.io) (Python Packaging Authority) is a volunteer
    working group (not part of the official Python development core group) that’s
    trying to simplify Python packaging. The group wrote the [Python Packaging User’s
    Guide](https://packaging.python.org), which discusses problems and solutions.
  prefs: []
  type: TYPE_NORMAL
- en: 'The most popular tools are `pip` and `virtualenv`, and I’ve used these throughout
    this book. If they fall short for you, or if you like trying new things, here
    are some alternatives:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`pipenv`](https://pipenv.readthedocs.io) combines `pip` and `virtualenv` and
    adds more features. See also some [criticism](https://oreil.ly/NQ3pH) and threaded
    [discussion](https://oreil.ly/psWa-).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`poetry`](https://poetry.eustace.io/) is a rival that addresses some of the
    problems with `pipenv`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: But the most prominent packaging alternative, especially for scientific and
    data-heavy applications, is `conda`. You can get it as part of the Anaconda Python
    distribution, which I talk about next, or by itself ([“Install Anaconda’s Package
    Manager conda”](#install_conda)).
  prefs: []
  type: TYPE_NORMAL
- en: Install Anaconda
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Anaconda](https://docs.anaconda.com/anaconda) is an all-in-one distribution
    with an emphasis on science. The latest version, Anaconda3, includes Python 3.7
    and its standard library as well as the R language for data science. Other goodies
    include libraries that we’ve talked about in this book: `beautifulsoup4`, `flask`,
    `ipython`, `matplotlib`, `nose`, `numpy`, `pandas`, `pillow`, `pip`, `scipy`,
    `tables`, `zmq`, and many others. It also has a cross-platform installation program
    called `conda`, which I get to in the next section.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Anaconda3, go to the [download page](https://www.anaconda.com/distribution)
    for the Python 3 versions. Click the appropriate link for your platform (version
    numbers might have changed since this was written, but you can figure it out):'
  prefs: []
  type: TYPE_NORMAL
- en: The macOS installer will install everything to the *anaconda* directory under
    your home directory.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For Windows, double-click the *.exe* file after it downloads.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For Linux, choose the 32-bit version or the 64-bit version. After it has downloaded,
    execute it (it’s a big shell script).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Ensure that the name of the file you download starts with *Anaconda3*. If it
    starts with just *Anaconda*, that’s the Python 2 version.
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda installs everything in its own directory (*anaconda* under your home
    directory). This means that it won’t interfere with any versions of Python that
    might already be on your computer. It also means that you don’t need any special
    permission (account names like `admin` or `root`) to install it either.
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda now includes more than 1,500 open source packages. Visit the Anaconda
    [docs](https://docs.anaconda.com/anaconda/packages/pkg-docs) page and click the
    link for your platform and Python version.
  prefs: []
  type: TYPE_NORMAL
- en: After installing Anaconda3, you can see what Santa put on your computer by typing
    the command `conda list`.
  prefs: []
  type: TYPE_NORMAL
- en: Install Anaconda’s Package Manager conda
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Anaconda developers built [`conda`](https://docs.conda.io) to address the
    problems they’ve seen with `pip` and other tools. `pip` is a Python package manager,
    but `conda` works with any software and language. `conda` also avoids the need
    for something like `virtualenv` to keep installations from stepping on one another.
  prefs: []
  type: TYPE_NORMAL
- en: If you installed the Anaconda distribution, you already have the `conda` program.
    If not, you can get Python 3 and `conda` from the [miniconda](https://docs.conda.io/en/latest/miniconda.html)
    page. As with Anaconda, make sure the file you download starts with `Miniconda3`;
    if it starts with `Miniconda` alone, it’s the Python 2 version.
  prefs: []
  type: TYPE_NORMAL
- en: '`conda` works with `pip`. Although it has its own public [package repository](https://anaconda.org/anaconda/repo),
    commands like `conda search` will also search the [PyPi repository](http://pypi.python.org).
    If you have problems with `pip`, `conda` might be a good alternative.'
  prefs: []
  type: TYPE_NORMAL
