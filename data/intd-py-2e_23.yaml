- en: Chapter 21\. Py at Work
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第21章 Py在工作中
- en: “Business!” cried the Ghost, wringing its hands again. “Mankind was my business…”
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “商务！”幽灵再次搓着双手叫道。“人类是我的事业……”
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Charles Dickens, A Christmas Carol
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 查尔斯·狄更斯，《圣诞颂歌》
- en: The businessman’s uniform is a suit and tie. But before he can *get down to
    business*, he tosses his jacket over a chair, loosens his tie, rolls up his sleeves,
    and pours some coffee. Meanwhile, the business woman has already been getting
    work done. Maybe with a latte.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 商人的制服是西装和领带。但是在他能*着手做生意*之前，他把夹克抛在椅子上，解开领带，卷起袖子，倒一些咖啡。与此同时，商务女士已经开始工作了。也许她是在喝拿铁。
- en: In business and government, we use all of the technologies from the earlier
    chapters—databases, the web, systems, and networks. Python’s productivity is making
    it more popular in the [enterprise](http://bit.ly/py-enterprise) and with [startups](http://bit.ly/py-startups).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在商业和政府中，我们使用了早期章节中的所有技术——数据库、网络、系统。Python的高效率正在使其在[企业](http://bit.ly/py-enterprise)和[初创公司](http://bit.ly/py-startups)中越来越受欢迎。
- en: 'Organizations have long fought incompatible file formats, arcane network protocols,
    language lock-in, and the universal lack of accurate documentation. They can create
    faster, cheaper, stretchier applications by using with tools such as these:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，组织一直在与不兼容的文件格式、复杂的网络协议、语言锁定以及普遍缺乏准确文档进行斗争。通过使用这些工具，他们可以创建更快、更便宜、更灵活的应用程序：
- en: Dynamic languages like Python
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python等动态语言
- en: The web as a universal graphical user interface
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web作为通用的图形用户界面
- en: RESTful APIs as language-independent service interfaces
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RESTful API作为语言无关的服务接口
- en: Relational and NoSQL databases
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关系型数据库和NoSQL数据库
- en: “Big data” and analytics
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “大数据”和分析
- en: Clouds for deployment and capital savings
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云用于部署和资本节约
- en: The Microsoft Office Suite
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Microsoft Office套件
- en: 'Business is heavily dependent on Microsoft Office applications and file formats.
    Although they are not well known, and in some cases poorly documented, there are
    some Python libraries that can help. Here are some that process Microsoft Office
    documents:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 商业活动严重依赖于Microsoft Office应用程序和文件格式。虽然它们不是很出名，并且在某些情况下文档不完善，但是有一些Python库可以提供帮助。以下是一些处理Microsoft
    Office文档的库：
- en: '[docx](https://pypi.python.org/pypi/docx)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[docx](https://pypi.python.org/pypi/docx)'
- en: This library creates, reads, and writes Microsoft Office Word 2007 *.docx* files.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此库可以创建、读取和写入Microsoft Office Word 2007 *.docx*文件。
- en: '[python-excel](http://www.python-excel.org)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[python-excel](http://www.python-excel.org)'
- en: This one discusses the `xlrd`, `xlwt`, and `xlutils` modules via a PDF [tutorial](http://bit.ly/py-excel).
    Excel can also read and write comma-separated values (CSV) files, which you know
    how to process by using the standard `csv` module.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章讨论了`xlrd`、`xlwt`和`xlutils`模块，通过PDF的[教程](http://bit.ly/py-excel)。Excel也可以读取和写入逗号分隔值（CSV）文件，你可以使用标准的`csv`模块来处理它们。
- en: '[oletools](http://bit.ly/oletools)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[oletools](http://bit.ly/oletools)'
- en: This library extracts data from Office formats.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 此库从Office格式中提取数据。
- en: '[OpenOffice](http://openoffice.org) is an open source alternative to Office.
    It runs on Linux, Unix, Windows, and macOS, and reads and writes Office file formats,
    It also installs a version of Python 3 for its own use. You can program OpenOffice
    [in Python](https://oreil.ly/mLiCr) with the [PyUNO](https://oreil.ly/FASNB) library.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[开放办公](http://openoffice.org) 是Office的开源替代品。它可以在Linux、Unix、Windows和macOS上运行，并且能够读取和写入Office文件格式。它还为自己安装了Python
    3版本。你可以使用[PyUNO](https://oreil.ly/FASNB)库在[Python](https://oreil.ly/mLiCr)中编程OpenOffice。'
- en: OpenOffice was owned by Sun Microsystems, and when Oracle acquired Sun, some
    people feared for its future availability. [LibreOffice](https://www.libreoffice.org)
    was spun off as a result. [DocumentHacker](http://bit.ly/docu-hacker) describes
    using the Python UNO library with LibreOffice.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: OpenOffice曾由Sun Microsystems拥有，后来Oracle收购了Sun，一些人担心其未来的可用性。作为结果，[LibreOffice](https://www.libreoffice.org)被分拆出来。[DocumentHacker](http://bit.ly/docu-hacker)描述了如何使用Python
    UNO库与LibreOffice。
- en: 'OpenOffice and LibreOffice had to reverse engineer the Microsoft file formats,
    which is not easy. The [Universal Office Converter](http://dag.wiee.rs/home-made/unoconv)
    module depends on the UNO library in OpenOffice or LibreOffice. It can convert
    many file formats: documents, spreadsheets, graphics, and presentations.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: OpenOffice和LibreOffice不得不对Microsoft文件格式进行逆向工程，这并不容易。[Universal Office Converter](http://dag.wiee.rs/home-made/unoconv)模块依赖于OpenOffice或LibreOffice中的UNO库。它可以转换许多文件格式：文档、电子表格、图形和演示文稿。
- en: If you have a mystery file, [python-magic](https://github.com/ahupp/python-magic)
    can guess its format by analyzing specific byte sequences.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个神秘的文件，[python-magic](https://github.com/ahupp/python-magic) 可以通过分析特定的字节序列来猜测其格式。
- en: The [python open document](http://appyframework.org/pod.html) library lets you
    provide Python code within templates to create dynamic documents.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[python open document](http://appyframework.org/pod.html) 库允许您在模板内提供 Python
    代码，以创建动态文档。'
- en: Although not a Microsoft format, Adobe’s PDF is very common in business. [ReportLab](http://www.reportlab.com/opensource)
    has open source and commercial versions of its Python-based PDF generator. If
    you need to edit a PDF, you might find some help at [StackOverflow](http://bit.ly/add-text-pdf).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不是微软格式，但 Adobe 的 PDF 在商业中非常常见。[ReportLab](http://www.reportlab.com/opensource)
    提供了基于 Python 的 PDF 生成器的开源和商业版本。如果需要编辑 PDF，您可能会在 [StackOverflow](http://bit.ly/add-text-pdf)
    找到一些帮助。
- en: Carrying Out Business Tasks
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行业务任务
- en: 'You can find a Python module for almost anything. Visit [PyPI](https://pypi.python.org/pypi)
    and type something into the search box. Many modules are interfaces to the public
    APIs of various services. You might be interested in some examples related to
    business tasks:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你几乎可以找到任何 Python 模块。访问 [PyPI](https://pypi.python.org/pypi) 并在搜索框中输入内容。许多模块是各种服务的公共
    API 的接口。你可能对一些与业务任务相关的示例感兴趣：
- en: Ship via [Fedex](https://github.com/gtaylor/python-fedex) or [UPS](https://github.com/openlabs/PyUPS).
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 [Fedex](https://github.com/gtaylor/python-fedex) 或 [UPS](https://github.com/openlabs/PyUPS)
    进行发货。
- en: Mail with the [stamps.com](https://github.com/jzempel/stamps) API.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 [stamps.com](https://github.com/jzempel/stamps) API 发送邮件。
- en: Read a discussion of [*Python for business intelligence*](http://bit.ly/py-biz).
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阅读关于[*Python 用于商业智能*](http://bit.ly/py-biz)的讨论。
- en: If Aeropresses are flying off the shelves in Anoka, was it customer activity
    or poltergeists? [Cubes](http://cubes.databrewery.org) is an Online Analytical
    Processing (OLAP) web server and data browser.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在 Anoka，Aeropress 空中出售，是客户活动还是捣蛋鬼？[Cubes](http://cubes.databrewery.org) 是一个在线分析处理（OLAP）Web
    服务器和数据浏览器。
- en: '[OpenERP](https://www.openerp.com/) is a large commercial Enterprise Resource
    Planning (ERP) system written in Python and JavaScript, with thousands of add-on
    modules.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[OpenERP](https://www.openerp.com/) 是一个大型的商业企业资源规划（ERP）系统，用 Python 和 JavaScript
    编写，拥有成千上万的附加模块。'
- en: Processing Business Data
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理商业数据
- en: Businesses have a particular fondness for data. Sadly, many of them conjure
    up perverse ways of making data harder to use.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 企业对数据有特别的喜爱。可悲的是，他们中的许多人想出了让数据更难使用的反常方法。
- en: Spreadsheets were a good invention, and over time businesses became addicted
    to them. Many nonprogrammers were tricked into programming because they were called
    *macros* instead of programs. But the universe is expanding and data is trying
    to keep up. Older versions of Excel were limited to 65,536 rows, and even newer
    versions choke at a million or so. When an organization’s data outgrow the limits
    of a single computer, it’s like headcount growing past a hundred people or so—suddenly
    you need new layers, intermediaries, and communication.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 电子表格是一个很好的发明，随着时间的推移，企业变得对它们上瘾。许多非程序员因为称为*宏*而不是程序而被诱导进编程。但宇宙正在扩展，数据正在试图跟上。早期版本的
    Excel 限制为 65,536 行，甚至更新版本在百万左右时也会崩溃。当一个组织的数据超过单台计算机的限制时，就像人数超过一百人一样突然需要新的层次、中介和沟通。
- en: Excessive data programs aren’t caused by the size of data on single desktops;
    rather, they’re the result of the aggregate of data pouring into the business.
    Relational databases handle millions of rows without exploding, but only so many
    writes or updates at a time. A plain old text or binary file can grow gigabytes
    in size, but if you need to process it all at once, you need enough memory. Traditional
    desktop software isn’t designed for all this. Companies such as Google and Amazon
    had to invent solutions to handle so much data at scale. [Netflix](http://bit.ly/py-netflix)
    is an example built on Amazon’s AWS cloud, using Python to glue together RESTful
    APIs, security, deployment, and databases.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 过多的数据程序不是由单个桌面上的数据大小引起的；相反，它们是企业中涌入的数据总和的结果。关系数据库可以处理数百万行而不会爆炸，但一次只能写入或更新那么多。一个普通的文本或二进制文件可能会增长到几个
    GB 的大小，但如果你需要一次性处理它们，就需要足够的内存。传统的桌面软件并不为这一切设计。像 Google 和 Amazon 这样的公司不得不发明解决方案来处理如此多的数据规模。[Netflix](http://bit.ly/py-netflix)
    就是一个建立在 Amazon AWS 云上的例子，使用 Python 来粘合 RESTful API、安全性、部署和数据库。
- en: Extracting, Transforming, and Loading
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提取、转换和加载
- en: The underwater portions of the data icebergs include all the work to get the
    data in the first place. If you speak enterprise, the common term is extract,
    transform, load, or *ETL*. Synonyms such as *data munging* or *data wrangling*
    give the impression of taming an unruly beast, which might be apt metaphors. This
    would seem to be a solved engineering matter by now, but it remains largely an
    art. I talked a bit about this in [Chapter 12](ch12.html#ch_munging). We address
    *data science* more broadly in [Chapter 22](ch22.html#ch_science), because this
    is where most developers spend a large part of their time.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 数据冰山的水下部分包括首先获取数据的所有工作。如果你熟悉企业术语，常见术语是提取、转换、加载，或*ETL*。同义词如*数据整理*或*数据处理*给人一种驯服难以控制的野兽的印象，这可能是恰当的隐喻。这似乎现在应该是一个已解决的工程问题，但它仍然主要是一门艺术。我在[第12章](ch12.html#ch_munging)中谈到了这个问题。我们在[第22章](ch22.html#ch_science)中更广泛地讨论*数据科学*，因为这是大多数开发者花费大部分时间的地方。
- en: If you’ve seen *The Wizard of Oz*, you probably remember (besides the flying
    monkeys) the part at the end—when the good witch told Dorothy that she could always
    go home to Kansas just by clicking her ruby slippers. Even when I was young I
    thought, “Now she tells her!” Although, in retrospect, I realize the movie would
    have been much shorter if she’d shared that tip earlier.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看过*绿野仙踪*，你可能记得（除了飞猴子以外）最后那部分——好女巫告诉多萝西她只需点击红宝石鞋子就能回到堪萨斯的一幕。即使在我年轻的时候我也想，“现在她告诉她了！”尽管事后我意识到如果她早点分享这个秘诀，电影会短得多。
- en: But this isn’t a movie; we’re talking about the world of business here, where
    making tasks shorter is a good thing. So, let me share some tips with you now.
    Most of the tools that you need for day-to-day data work in business are those
    that you’ve already read about here. Those include high-level data structures
    such as dictionaries and objects, thousands of standard and third-party libraries,
    and an expert community that’s just a google away.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 但这不是一部电影；我们谈论的是商业世界，在这里，缩短任务时间是一件好事。所以，现在让我和你分享一些技巧。你在日常业务数据工作中需要的大多数工具都是你已经在这里读到的。这些包括高级数据结构，如字典和对象，成千上万的标准和第三方库，以及一个距离你只有一步之遥的专家社区。
- en: 'If you’re a computer programmer working for some business, your workflow almost
    always includes the following:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一名为某个企业工作的计算机程序员，你的工作流程几乎总是包括以下步骤：
- en: Extracting data from weird file formats or databases
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从奇怪的文件格式或数据库中提取数据
- en: “Cleaning up” the data, which covers a lot of ground, all strewn with pointy
    objects
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: “清理”数据，这涵盖了很多领域，所有这些领域都布满了尖锐的物体
- en: Converting things like dates, times, and character sets
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转换日期、时间和字符集等内容
- en: Actually doing something with the data
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实际上对数据进行操作
- en: Storing resulting data in a file or database
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将结果数据存储在文件或数据库中
- en: Rolling back to step 1 again; lather, rinse, repeat
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次回到步骤1；重复上述步骤
- en: 'Here’s an example: you want to move data from a spreadsheet to a database.
    You can save the spreadsheet in CSV format and use the Python libraries from [Chapter 16](ch16.html#ch_databases).
    Or, you can look for a module that reads the binary spreadsheet format directly.
    Your fingers know how to type `python excel` into Google and find sites such as
    [Working with Excel files in Python](http://www.python-excel.org). You can install
    one of the packages by using `pip`, and locate a Python database driver for the
    last part of the task. I mentioned SQLAlchemy and the direct low-level database
    drivers in that same chapter. Now you need some code in the middle, and that’s
    where Python’s data structures and libraries can save you time.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个例子：你想将数据从电子表格移动到数据库。你可以将电子表格保存为CSV格式，并使用[第16章](ch16.html#ch_databases)中的Python库。或者，你可以寻找一个直接读取二进制电子表格格式的模块。你的手指知道如何在谷歌中输入`python
    excel`并找到网站，比如[Python处理Excel文件](http://www.python-excel.org)。你可以使用`pip`安装其中一个包，并找到用于最后一部分任务的Python数据库驱动程序。我在同一章中提到了SQLAlchemy和直接的低级数据库驱动程序。现在你需要一些中间代码，这就是Python的数据结构和库可以节省你时间的地方。
- en: Let’s try an example here, and then we’ll try again with a library that saves
    a few steps. We’ll read a CSV file, aggregate the counts in one column by unique
    values in another, and print the results. If we did this in SQL, we would use
    SELECT, JOIN, and GROUP BY.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在这里尝试一个例子，然后我们再试试一个节省几个步骤的库。我们将读取一个CSV文件，根据另一个列中的唯一值聚合计数，并打印结果。如果我们在SQL中执行此操作，我们将使用SELECT、JOIN和GROUP
    BY。
- en: 'First, the file, *zoo.csv*, which has columns for the type of animal, how many
    times it has bitten a visitor, the number of stitches required, and how much we’ve
    paid the visitor not to tell local television stations:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 首先是文件*zoo.csv*，它有列来标识动物的类型、它咬过游客的次数、需要多少针线以及我们支付给游客的不让当地电视台报道的钱数：
- en: '[PRE0]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We want to see which animal is costing us the most, so we aggregate the total
    hush money by the type of animal. (We’ll leave bites and stitches to an intern.)
    We use the `csv` module from [“CSV”](ch16.html#csv) and `Counter` from [“Count
    Items with Counter()”](ch11.html#counter). Save this code as *zoo_counts.py*:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想知道哪种动物花费最多，因此我们按动物类型汇总了总的口油钱数。（让我们把咬伤和缝针的工作留给一个实习生。）我们使用来自[“CSV”](ch16.html#csv)的`csv`模块和来自[“使用Counter()计数项目”](ch11.html#counter)的`Counter`。将此代码保存为*zoo_counts.py*：
- en: '[PRE1]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We skipped the first row because it contained only the column names. `counts`
    is a `Counter` object, and takes care of initializing the sum for each animal
    to zero. We also applied a little formatting to right-align the output. Let’s
    try it:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们跳过了第一行，因为它只包含列名。`counts`是一个`Counter`对象，并负责将每种动物的总和初始化为零。我们还对输出进行了一些格式化，使其右对齐。让我们试一试：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Hah! It was the bear. He was our prime suspect all along, but now we have the
    numbers.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 哈哈！是熊。他一直是我们的主要嫌疑人，现在我们有了数字。
- en: 'Next, let’s replicate this with a data processing toolkit called [Bubbles](http://bubbles.databrewery.org).
    You can install it by typing this command:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们使用一个称为[Bubbles](http://bubbles.databrewery.org)的数据处理工具包来复制这个过程。您可以通过输入以下命令来安装它：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'It requires SQLAlchemy; if you don’t have that, `pip install sqlalchemy` will
    do the trick. Here’s the test program (call it *bubbles1.py*), adapted from the
    [documentation](http://bit.ly/py-bubbles):'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 它需要SQLAlchemy；如果没有，可以通过`pip install sqlalchemy`来安装。这是测试程序（称为*bubbles1.py*），改编自[文档](http://bit.ly/py-bubbles)：
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'And now, the moment of truth:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，关键时刻到了：
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If you read the documentation, you can avoid those debug print lines, and maybe
    change the format of the table.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您阅读了文档，就可以避免这些调试打印行，并可能改变表格的格式。
- en: Looking at the two examples, we see that the `bubbles` example used a single
    function call (`aggregate`) to replace our manual reading and counting of the
    CSV format. Depending on your needs, data toolkits can save a lot of work.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 看两个例子，我们看到`bubbles`示例使用了单个函数调用（`aggregate`）来替代我们手动读取和计数CSV格式。根据您的需求，数据工具包可以节省大量工作。
- en: 'In a more realistic example, our zoo file might have thousands of rows (it’s
    a dangerous place), with misspellings such as `bare`, commas in numbers, and so
    on. For good examples of practical data problems with Python code, I’d also recommend
    the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个更现实的例子中，我们的动物园文件可能有数千行（这是一个危险的地方），包括诸如`bare`、数字中的逗号等拼写错误。关于实际数据问题的Python代码的好例子，我还推荐以下内容：
- en: '[*Data Crunching: Solve Everyday Problems Using Java, Python, and More*](http://bit.ly/data_crunching)—Greg
    Wilson (Pragmatic Bookshelf).'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*数据处理：使用Java、Python和更多解决日常问题*](http://bit.ly/data_crunching)—Greg Wilson（Pragmatic
    Bookshelf）。'
- en: '[*Automate the Boring Stuff*](https://automatetheboringstuff.com)—Al Sweigart
    (No Starch).'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*自动化无聊的事情*](https://automatetheboringstuff.com)—Al Sweigart（无淀粉）。'
- en: 'Data cleanup tools can save a lot of time, and Python has many of them. For
    another example, [PETL](http://petl.readthedocs.org) does row and column extraction
    and renaming. Its [related work](http://bit.ly/petl-related) page lists many useful
    modules and products. [Chapter 22](ch22.html#ch_science) has detailed discussions
    of some especially useful data tools: Pandas, NumPy, and IPython. Although they’re
    currently best known among scientists, they’re becoming popular among financial
    and data developers. At the 2012 Pydata conference, [AppData](http://bit.ly/py-big-data)
    discussed how these three and other Python tools help process 15 terabytes of
    data daily. Python handles very large real-world data loads.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 数据清理工具可以节省大量时间，Python 有很多这样的工具。举个例子，[PETL](http://petl.readthedocs.org) 可以进行行和列的提取和重命名。其[相关工作](http://bit.ly/petl-related)页面列出了许多有用的模块和产品。[第22章](ch22.html#ch_science)详细讨论了一些特别有用的数据工具：Pandas、NumPy
    和 IPython。虽然它们目前在科学家中最为人知，但它们正在逐渐流行于金融和数据开发人员中。在2012年Pydata会议上，[AppData](http://bit.ly/py-big-data)讨论了这三个工具及其他Python工具如何每天处理15TB的数据。Python能够处理非常大的现实世界数据负载。
- en: You may also look back at the data serialization and validation tools discussed
    in [“Data Serialization”](ch17.html#serialization).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以回顾讨论的数据序列化和验证工具，如[“数据序列化”](ch17.html#serialization)。
- en: Data Validation
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据验证
- en: 'When cleaning up data, you’ll often need to check:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在清理数据时，您经常需要检查：
- en: Data type, such as integer, float, or string
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据类型，如整数、浮点数或字符串
- en: Range of values
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 值的范围
- en: Correct values, such as a working phone number or email address
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正确的值，如有效的电话号码或电子邮件地址
- en: Duplicates
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Duplicates
- en: Missing data
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺失数据
- en: This is especially common when processing web requests and responses.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理网络请求和响应时尤其常见。
- en: 'Useful Python packages for particular data types include:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 特定数据类型的有用 Python 包括：
- en: '[`validate_email`](https://pypi.org/project/validate_email)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`validate_email`](https://pypi.org/project/validate_email)'
- en: '[`phonenumber`](https://pypi.org/project/phonenumbers)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`phonenumber`](https://pypi.org/project/phonenumbers)'
- en: 'Some useful general tools are:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 一些有用的通用工具包括：
- en: '[`validators`](https://validators.readthedocs.io)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`validators`](https://validators.readthedocs.io)'
- en: '[`pydantic`](https://pydantic-docs.helpmanual.io)—For Python 3.6 and above;
    uses type hints'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`pydantic`](https://pydantic-docs.helpmanual.io)—适用于 Python 3.6 及以上；使用类型提示'
- en: '[`marshmallow`](https://marshmallow.readthedocs.io/en/3.0)—Also serializes
    and deserializes'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`marshmallow`](https://marshmallow.readthedocs.io/en/3.0) — 同时进行序列化和反序列化'
- en: '[`cerberus`](http://docs.python-cerberus.org/en/stable)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`cerberus`](http://docs.python-cerberus.org/en/stable)'
- en: '[many others](https://libraries.io/search?keywords=validation&languages=Python)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[其他许多](https://libraries.io/search?keywords=validation&languages=Python)'
- en: Additional Sources of Information
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Additional Sources of Information
- en: 'Sometimes, you need data that originates somewhere else. Some business and
    government data sources include:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您需要来自其他地方的数据。一些商业和政府数据源包括：
- en: '[data.gov](https://www.data.gov)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[data.gov](https://www.data.gov)'
- en: A gateway to thousands of data sets and tools. Its [APIs](https://www.data.gov/developers/apis)
    are built on [CKAN](http://ckan.org), a Python data management system.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 成千上万数据集和工具的入口。其 [APIs](https://www.data.gov/developers/apis) 建立在 [CKAN](http://ckan.org)
    上，这是一个 Python 数据管理系统。
- en: '[Opening government with Python](http://sunlightfoundation.com)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Python 的开放政府
- en: See the [video](http://bit.ly/opengov-py) and [slides](http://goo.gl/8Yh3s).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 [视频](http://bit.ly/opengov-py) 和 [幻灯片](http://goo.gl/8Yh3s)。
- en: '[python-sunlight](http://bit.ly/py-sun)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[python-sunlight](http://bit.ly/py-sun)'
- en: Libraries to access the [Sunlight APIs](http://sunlightfoundation.com/api).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 用于访问 [Sunlight APIs](http://sunlightfoundation.com/api) 的库。
- en: '[froide](https://froide.readthedocs.io)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[froide](https://froide.readthedocs.io)'
- en: A Django-based platform for managing freedom of information requests.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一个基于 Django 的平台，用于管理信息自由请求。
- en: '[30 places to find open data on the web](http://blog.visual.ly/data-sources)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[30 places to find open data on the web](http://blog.visual.ly/data-sources)'
- en: Some handy links.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 一些方便的链接。
- en: Open Source Python Business Packages
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开源 Python 商业包
- en: '[Odoo](https://www.odoo.com)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[Odoo](https://www.odoo.com)'
- en: Extensive ERP platform
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 广泛的企业资源规划（ERP）平台
- en: '[Tryton](http://www.tryton.org)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '[Tryton](http://www.tryton.org)'
- en: Another extensive business platform
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个广泛的业务平台
- en: '[Oscar](http://oscarcommerce.com)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[Oscar](http://oscarcommerce.com)'
- en: Ecommerce framework for Django
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Django 的电子商务框架
- en: '[Grid Studio](https://gridstudio.io)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[Grid Studio](https://gridstudio.io)'
- en: Python-based spreadsheet, runs locally or in the cloud
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 Python 的电子表格，可在本地或云中运行
- en: Python in Finance
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 在金融中的应用
- en: 'Recently, the financial industry has developed a great interest in Python.
    Adapting software from [Chapter 22](ch22.html#ch_science) as well as some of their
    own, *quants* are building a new generation of financial tools:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，金融行业对 Python 的兴趣日益增加。通过适应[第 22 章](ch22.html#ch_science)的软件以及一些自己的软件，*量化分析师*
    正在构建新一代金融工具：
- en: '[Quantitative economics](http://quant-econ.net)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[Quantitative economics](http://quant-econ.net)'
- en: A tool for economic modeling, with lots of math and Python code
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 一个经济建模工具，具有大量数学和 Python 代码
- en: '[Python for finance](http://www.python-for-finance.com)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[Python for finance](http://www.python-for-finance.com)'
- en: 'Features the book *Derivatives Analytics with Python: Data Analytics, Models,
    Simulation, Calibration, and Hedging* by Yves Hilpisch (Wiley)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '以 Yves Hilpisch（Wiley）所著的书籍 *Derivatives Analytics with Python: Data Analytics,
    Models, Simulation, Calibration, and Hedging* 为特色'
- en: '[Quantopian](https://www.quantopian.com)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[Quantopian](https://www.quantopian.com)'
- en: An interactive website on which you can write your own Python code and run it
    against historic stock data to see how it would have done
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 一个互动网站，您可以在其中编写自己的 Python 代码，并针对历史股票数据运行它，以查看其表现如何
- en: '[PyAlgoTrade](http://gbeced.github.io/pyalgotrade)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[PyAlgoTrade](http://gbeced.github.io/pyalgotrade)'
- en: Another that you can use for stock backtesting, but on your own computer
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可以用于股票回测的工具，但需要在您自己的计算机上运行
- en: '[Quandl](http://www.quandl.com)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[Quandl](http://www.quandl.com)'
- en: Search millions of financial datasets
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索数百万金融数据集
- en: '[Ultra-finance](https://code.google.com/p/ultra-finance)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[Ultra-finance](https://code.google.com/p/ultra-finance)'
- en: A real-time stock collection library
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 实时股票收集库
- en: '[*Python for Finance*](http://bit.ly/python-finance) (O’Reilly)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Python for Finance*](http://bit.ly/python-finance)（O’Reilly）'
- en: A book by Yves Hilpisch with Python examples for financial modeling
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Yves Hilpisch撰写的一本带有Python示例的金融建模书籍。
- en: Business Data Security
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 业务数据安全
- en: Security is a special concern for business. Entire books are devoted to this
    topic, so we just mention a few Python-related tips here.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 安全对于企业来说是一个特别关注的问题。有整本书专门讨论这个话题，因此我们在这里只提到了一些与Python相关的技巧。
- en: '[“Scapy”](ch17.html#scapy) discusses `scapy`, a Python-powered language for
    packet forensics. It has been used to explain some major network attacks.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[“Scapy”](ch17.html#scapy)讨论了`scapy`，一个用于数据包取证的基于Python的语言。它已被用来解释一些主要的网络攻击。'
- en: The [Python Security](http://www.pythonsecurity.org) site has discussions of
    security topics, details on some Python modules, and cheat sheets.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Python安全](http://www.pythonsecurity.org)网站讨论了安全主题，详细介绍了一些Python模块和备忘单。'
- en: The book [*Violent Python*](http://bit.ly/violent-python) (subtitled *A Cookbook
    for Hackers, Forensic Analysts, Penetration Testers and Security Engineers*) by
    TJ O’Connor (Syngress) is an extensive review of Python and computer security.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TJ O’Connor（Syngress）撰写的书籍[*Violent Python*](http://bit.ly/violent-python)（副标题为*黑客、法医分析员、渗透测试人员和安全工程师的烹饪书*）是对Python和计算机安全的广泛审查。
- en: Maps
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 地图
- en: Maps have become valuable to many businesses. Python is very good at making
    maps, so we’re going to spend a little more time in this area. Managers love graphics,
    and if you can quickly whip up a nice map for your organization’s website it wouldn’t
    hurt.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 对许多企业来说，地图已经变得非常有价值。Python非常擅长制作地图，因此我们将在这个领域多花一点时间。管理人员喜欢图形，如果你能为组织的网站快速制作一个漂亮的地图，那肯定是有好处的。
- en: In the early days of the web, I used to visit an experimental mapmaking website
    at Xerox. When big sites such as Google Maps came along, they were a revelation
    (along the lines of “why didn’t I think of that and make millions?”). Now mapping
    and *location-based services* are everywhere, and are particularly useful in mobile
    devices.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在Web的早期，我曾经访问过施乐的一个实验性地图制作网站。当像Google Maps这样的大型网站出现时，它们是一个启示（类似于“为什么我没想到那个并赚了几百万？”）。现在映射和*基于位置的服务*随处可见，特别是在移动设备中非常有用。
- en: 'Many terms overlap here: mapping, cartography, GIS (geographic information
    system), GPS (Global Positioning System), geospatial analysis, and many more.
    The blog at [Geospatial Python](http://bit.ly/geospatial-py) has an image of the
    “800-pound gorilla” systems—GDAL/OGR, GEOS, and PROJ.4 (projections)—and surrounding
    systems, represented as monkeys. Many of these have Python interfaces. Let’s talk
    about some of these, beginning with the simplest formats.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 许多术语在这里重叠：映射、制图学、GIS（地理信息系统）、GPS（全球定位系统）、地理空间分析等等。在[地理空间Python](http://bit.ly/geospatial-py)的博客上有一个“800磅大猩猩”系统的图像—GDAL/OGR、GEOS和PROJ.4（投影）—及其周边系统，这些系统许多都有Python接口。让我们从一些最简单的格式开始讨论一些内容。
- en: Formats
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 格式
- en: 'The mapping world has lots of formats: vector (lines), raster (images), metadata
    (words), and various combinations.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 映射世界有许多格式：矢量（线）、栅格（图像）、元数据（文字）以及各种组合。
- en: 'Esri, a pioneer of geographic systems, invented the *shapefile* format over
    20 years ago. A shapefile actually consists of multiple files, including at the
    very least the following:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Esri，一个地理系统的先驱，20多年前发明了*shapefile*格式。一个shapefile实际上包含了多个文件，至少包括以下文件：
- en: '*.shp*'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '*.shp*'
- en: The “shape” (vector) information
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: “shape”（矢量）信息
- en: '*.shx*'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '*.shx*'
- en: The shape index
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 形状索引
- en: '*.dbf*'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '*.dbf*'
- en: An attribute database
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 一个属性数据库
- en: 'Let’s grab a shapefile for our next example—visit the Natural Earth [1:110m
    Cultural Vectors page](http://bit.ly/cultural-vectors). Under “Admin 1 - States
    and Provinces,” click the green [download states and provinces](https://oreil.ly/7BR2o)
    box to download a zip file. After it downloads to your computer, unzip it; you
    should see these resulting files:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为下一个示例获取一个shapefile——访问Natural Earth [1:110m Cultural Vectors页面](http://bit.ly/cultural-vectors)。在“Admin
    1 - States and Provinces”下，点击绿色的[download states and provinces](https://oreil.ly/7BR2o)方框以下载一个zip文件。下载完成后，解压缩它到你的计算机上，你应该看到以下生成的文件：
- en: '[PRE6]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We’ll use these for our examples.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在我们的示例中使用这些。
- en: Draw a Map from a Shapefile
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Shapefile绘制地图
- en: This section is an overly simplified demonstration of reading and displaying
    a shapefile. You’ll see that the result has problems, and that you’d be better
    off working with a higher-level mapping package, such as those in the sections
    that follow.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这一节是一个过于简化的演示，展示了如何读取和显示一个shapefile。你会看到结果存在问题，你最好使用更高级的地图包，比如接下来介绍的那些。
- en: 'You’ll need this library to read a shapefile:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要这个库来读取一个shapefile：
- en: '[PRE7]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now for the program, *map1.py*, which I’ve modified from a Geospatial Python
    [blog post](http://bit.ly/raster-shape):'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是程序*map1.py*，我从Geospatial Python [博客文章](http://bit.ly/raster-shape)修改而来：
- en: '[PRE8]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This reads the shapefile and iterates through its individual shapes. I’m checking
    for only two shape types: a polygon, which connects the last point to the first,
    and a polyline, which doesn’t. I’ve based my logic on the original post and a
    quick look at the documentation for `pyshp`, so I’m not really sure how it will
    work. Sometimes, we just need to make a start and deal with any problems as we
    find them.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码读取shapefile并迭代其各个形状。我只检查两种形状类型：多边形，将最后一个点连接到第一个点，和折线，不会连接。我的逻辑基于原始帖子和对`pyshp`文档的快速查阅，所以我不太确定它将如何工作。有时，我们只需开始并在发现问题时解决它们。
- en: 'So, let’s run it. The argument is the base name of the shapefile files, without
    any extension:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们运行它。参数是shapefile文件的基本名称，没有任何扩展名：
- en: '[PRE9]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: You should see something like [Figure 21-1](#business_map_us).
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到类似于[图21-1](#business_map_us)的东西。
- en: 'Well, it drew a map that resembles the United States, but:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 它画了一幅类似于美国的地图，但：
- en: It looks like a cat dragged yarn across Alaska and Hawaii; this is a *bug*.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 看起来像一只猫拖着毛线穿过阿拉斯加和夏威夷；这是一个*bug*。
- en: The country is squished; I need a *projection*.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个国家被挤压了；我需要一个*投影*。
- en: The picture isn’t pretty; I need better *style* control.
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这幅图不好看；我需要更好的*样式*控制。
- en: '![inp2 2101](assets/inp2_2101.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![inp2 2101](assets/inp2_2101.png)'
- en: Figure 21-1\. Preliminary map
  id: totrans-161
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图21-1\. 初步地图
- en: 'To address the first point: I have a problem somewhere in my logic, but what
    should I do? [Chapter 19](ch19.html#ch_pythonista) discusses development tips,
    including debugging, but we can consider other options here. I could write some
    tests and bear down until I fix this, or I could just try some other mapping library.
    Maybe something at a higher level would solve all three of my problems (the stray
    lines, squished appearance, and primitive style).'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决第一点：我的逻辑中有问题，但我该怎么办？[第19章](ch19.html#ch_pythonista)讨论了开发技巧，包括调试，但在这里我们可以考虑其他选择。我可以编写一些测试，并坚持直到解决这个问题，或者我可以尝试其他地图库。也许某种更高级别的东西会解决我的三个问题（偏离的线条，压缩的外观和原始的样式）。
- en: As far as I can tell, there is no bare-bones pure Python mapping package. Luckily,
    there are some fancier ones, so let’s take a look.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 就我所知，没有纯Python的基本地图包。幸运的是，有一些更高级的选择，所以让我们来看一看。
- en: Geopandas
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Geopandas
- en: '[Geopandas](http://geopandas.org) integrates `matplotlib`, `pandas`, and other
    Python libraries into a geospatial data platform.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '[Geopandas](http://geopandas.org)将`matplotlib`，`pandas`和其他Python库集成到地理空间数据平台中。'
- en: 'The base package is installed with the familiar `pip install geopandas`, but
    it relies on other packages that you will also need to install with `pip` if you
    don’t have them already:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 基础包可以使用熟悉的`pip install geopandas`安装，但它依赖于其他包，如果你没有安装它们，也需要用`pip`安装：
- en: '`numpy`'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numpy`'
- en: '`pandas` (version 0.23.4 or later)'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas`（版本0.23.4或更高）'
- en: '`shapely` (interface to GEOS)'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`shapely`（GEOS接口）'
- en: '`fiona` (interface to GDAL)'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fiona`（GDAL接口）'
- en: '`pyproj` (interface to PROJ)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pyproj`（PROJ接口）'
- en: '`six`'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`six`'
- en: 'Geopandas can read shapefiles (including those from the previous section),
    and handily includes two from Natural Earth: country/continent outlines, and national
    capital cities. [Example 21-1](#geopandas_example) is a simple demo that uses
    both of them.'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: Geopandas可以读取shapefile（包括上一节的文件），并便利地包含来自自然地球的两种数据：国家/大陆轮廓和国家首都。[示例21-1](#geopandas_example)是一个简单的演示，同时使用了这两者。
- en: Example 21-1\. geopandas.py
  id: totrans-174
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例21-1\. geopandas.py
- en: '[PRE10]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Run that, and you should get the map shown in [Figure 21-2](#world_map).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 运行它，你应该看到显示在[图21-2](#world_map)中的地图。
- en: '![inp2 2102](assets/inp2_2102.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![inp2 2102](assets/inp2_2102.png)'
- en: Figure 21-2\. Geopandas map
  id: totrans-178
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图21-2\. Geopandas地图
- en: To me, geopandas currently looks like the best combination for geographic data
    management and display. But there are many worthy contenders, which we look at
    in the next section.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，geopandas目前看起来是地理数据管理和显示的最佳组合。但还有许多值得考虑的竞争对手，我们将在下一节中讨论。
- en: Other Mapping Packages
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他地图包
- en: 'Here’s a grab bag of links to other Python mapping software; many cannot be
    installed fully with `pip`, but some can with `conda` (the alternative Python
    package installer that’s especially handy for scientific software):'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一些链接，指向其他Python地图软件；许多不能完全使用`pip`安装，但有些可以使用`conda`（特别适用于科学软件的替代Python包安装器）：
- en: '[pyshp](https://pypi.org/project/pyshp)'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '[pyshp](https://pypi.org/project/pyshp)'
- en: A pure-Python shapefile library, mentioned earlier in [“Draw a Map from a Shapefile”](#map_shapefile).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 一个纯 Python shapefile 库，前面提到过 [“从 shapefile 绘制地图”](#map_shapefile)。
- en: '[kartograph](http://kartograph.org)'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '[kartograph](http://kartograph.org)'
- en: Renders shapefiles into SVG maps on the server or client.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务器或客户端将 shapefile 渲染为 SVG 地图。
- en: '[shapely](https://shapely.readthedocs.io)'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '[shapely](https://shapely.readthedocs.io)'
- en: Addresses geometric questions such as, “What buildings in this town are within
    the 50-year flood contour?”
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 解答几何问题，比如“这个城镇中哪些建筑物在 50 年洪水轮廓线内？”
- en: '[basemap](http://matplotlib.org/basemap)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '[basemap](http://matplotlib.org/basemap)'
- en: Based on `matplotlib`, draws maps and data overlays. Unfortunately, it has been
    deprecated in favor of Cartopy.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 `matplotlib`，绘制地图和数据叠加。不幸的是，它已被 Cartopy 废弃。
- en: '[cartopy](https://scitools.org.uk/cartopy/docs/latest)'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '[cartopy](https://scitools.org.uk/cartopy/docs/latest)'
- en: Succeeds Basemap, and does some of the things that `geopandas` does.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的 Basemap，可以做一些 `geopandas` 做的事情。
- en: '[folium](https://python-visualization.github.io/folium)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '[folium](https://python-visualization.github.io/folium)'
- en: Works with leaflet.js, used by `geopandas`.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 与 leaflet.js 一起使用，被 `geopandas` 使用。
- en: '[plotly](https://plot.ly/python/maps)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '[plotly](https://plot.ly/python/maps)'
- en: Another plotting package that includes mapping features.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个包含地图功能的绘图包。
- en: '[dash](https://dash.plot.ly)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '[dash](https://dash.plot.ly)'
- en: Uses Plotly, Flask and JavaScript to create interactive visualizations, including
    maps.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Plotly、Flask 和 JavaScript 创建交互式可视化，包括地图。
- en: '[fiona](https://github.com/Toblerity/Fiona)'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '[fiona](https://github.com/Toblerity/Fiona)'
- en: Wraps the OGR library, which handles shapefiles and other vector formats.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 封装了处理 shapefile 和其他矢量格式的 OGR 库。
- en: '[Open Street Map](https://oreil.ly/BJeha)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '[Open Street Map](https://oreil.ly/BJeha)'
- en: Accesses the vast [OpenStreetMap](https://www.openstreetmap.org) world maps.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 访问广阔的 [OpenStreetMap](https://www.openstreetmap.org) 世界地图。
- en: '[mapnik](http://mapnik.org)'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '[mapnik](http://mapnik.org)'
- en: A C++ library with Python bindings, for vector (line) and raster (image) maps.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 一个具有 Python 绑定的 C++ 库，用于矢量（线）和栅格（图像）地图。
- en: '[Vincent](http://vincent.readthedocs.org)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '[Vincent](http://vincent.readthedocs.org)'
- en: 'Translates to Vega, a JavaScript visualization tool; see the tutorial: [Mapping
    data in Python with pandas and vincent](https://oreil.ly/0TbTC).'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 转换为 Vega，一个 JavaScript 可视化工具；参见教程：[使用 pandas 和 vincent 在 Python 中绘制数据地图](https://oreil.ly/0TbTC)。
- en: '[Python for ArcGIS](http://bit.ly/py-arcgis)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '[Python for ArcGIS](http://bit.ly/py-arcgis)'
- en: Links to Python resources for Esri’s commercial ArcGIS product.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 链接到 Esri 商业 ArcGIS 产品的 Python 资源。
- en: '[Using geospatial data with python](http://bit.ly/geos-py)'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '[使用 Python 处理地理空间数据](http://bit.ly/geos-py)'
- en: Video presentations.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 视频演示。
- en: '[So you’d like to make a map using Python](http://bit.ly/pythonmap)'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '[想用 Python 制作地图](http://bit.ly/pythonmap)'
- en: Uses `pandas`, `matplotlib`, `shapely`, and other Python modules to create maps
    of historic plaque locations.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `pandas`, `matplotlib`, `shapely` 和其他 Python 模块创建历史牌匾位置的地图。
- en: '[*Python Geospatial Development*](http://bit.ly/py-geo-dev) (Packt)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Python 地理空间开发*](http://bit.ly/py-geo-dev)（Packt 出版）'
- en: A book by Eric Westra with examples using `mapnik` and other tools.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 由 Eric Westra 编写的书籍，示例使用 `mapnik` 和其他工具。
- en: '[*Learning Geospatial Analysis with Python*](http://bit.ly/learn-geo-py) (Packt)'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '[*学习 Python 地理空间分析*](http://bit.ly/learn-geo-py)（Packt 出版）'
- en: Another book by Joel Lawhead reviewing formats and libraries, with geospatial
    algorithms.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: Joel Lawhead 的另一本书，回顾格式和库，具有地理空间算法。
- en: '[geomancer](https://github.com/thinkingmachines/geomancer)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '[geomancer](https://github.com/thinkingmachines/geomancer)'
- en: Geospatial engineering, such as the distance from a point to the nearest Irish
    bar.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间工程，例如从点到最近的爱尔兰酒吧的距离。
- en: If you’re interested in maps, try downloading and installing one of these packages
    and see what you can do. Or, you can avoid installing software and try connecting
    to a remote web service API yourself; [Chapter 18](ch18.html#ch_web) shows you
    how to connect to web servers and decode JSON responses.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对地图感兴趣，可以尝试下载并安装其中一个软件包，看看你能做什么。或者，你可以避免安装软件，尝试连接到远程 Web 服务 API；[第 18 章](ch18.html#ch_web)
    展示了如何连接到 Web 服务器并解码 JSON 响应。
- en: Applications and Data
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用和数据
- en: 'I’ve been talking about drawing maps, but you can do a lot more with map data.
    *Geocoding* converts between addresses and geographic coordinates. There are many
    geocoding [APIs](https://oreil.ly/Zqw0W) (see [ProgrammableWeb’s comparison](http://bit.ly/free-geo-api))
    and Python libraries:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我一直在谈论绘制地图，但是你可以用地图数据做很多其他事情。*地理编码* 可以在地址和地理坐标之间转换。有许多地理编码 [APIs](https://oreil.ly/Zqw0W)（参见
    [ProgrammableWeb 的比较](http://bit.ly/free-geo-api)）和 Python 库：
- en: '[geopy](https://code.google.com/p/geopy)'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[geopy](https://code.google.com/p/geopy)'
- en: '[pygeocoder](https://pypi.python.org/pypi/pygeocoder)'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[pygeocoder](https://pypi.python.org/pypi/pygeocoder)'
- en: '[googlemaps](http://py-googlemaps.sourceforge.net)'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[googlemaps](http://py-googlemaps.sourceforge.net)'
- en: If you sign up with Google or another source to get an API key, you can access
    other services such as step-by-step travel directions or local search.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用Google或其他来源注册API密钥，你可以访问其他服务，比如逐步旅行指南或本地搜索。
- en: 'Here are a few sources of mapping data:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几个地图数据的来源：
- en: '[http://www.census.gov/geo/maps-data](http://www.census.gov/geo/maps-data)'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '[美国人口普查局地图数据](http://www.census.gov/geo/maps-data)'
- en: Overview of the US Census Bureau’s map files
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 美国人口普查局地图文件概述
- en: '[http://www.census.gov/geo/maps-data/data/tiger.html](http://www.census.gov/geo/maps-data/data/tiger)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '[美国人口普查局的TIGER数据](http://www.census.gov/geo/maps-data/data/tiger.html)'
- en: Heaps of geographic and demographic map data
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 大量的地理和人口统计地图数据
- en: '[http://wiki.openstreetmap.org/wiki/Potential_Datasources](http://wiki.openstreetmap.org/wiki/Potential_Datasources)'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '[开放街道地图潜在数据源](http://wiki.openstreetmap.org/wiki/Potential_Datasources)'
- en: Worldwide sources
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 全球资源
- en: '[http://www.naturalearthdata.com](http://www.naturalearthdata.com)'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '[自然地球数据](http://www.naturalearthdata.com)'
- en: Vector and raster map data at three scales
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 三种比例尺下的矢量和栅格地图数据
- en: I should mention the [Data Science Toolkit](http://www.datasciencetoolkit.org)
    here. It includes free bidirectional geocoding, coordinates to political boundaries
    and statistics, and more. You can also download all the data and software as a
    virtual machine (VM) and run it self-contained on your own computer.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 我应该在这里提一下[数据科学工具包](http://www.datasciencetoolkit.org)。它包括免费的双向地理编码、坐标到政治边界和统计数据等功能。你也可以下载所有数据和软件作为虚拟机（VM），在自己的计算机上独立运行。
- en: Coming Up
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 即将到来
- en: We go to a Science Fair and see all the Python exhibits.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 我们参加了一场科学展，看到了所有的Python展品。
- en: Things to Do
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 待办事项
- en: 21.1 Install `geopandas` and run [Example 21-1](#geopandas_example). Try modifying
    things like colors and marker sizes.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 21.1 安装`geopandas`并运行[示例 21-1](#geopandas_example)。尝试修改颜色和标记大小等内容。
