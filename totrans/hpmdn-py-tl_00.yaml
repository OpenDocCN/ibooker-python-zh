- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book is a guide to modern Python developer tools—​the programs that help
    you perform tasks such as:'
  prefs: []
  type: TYPE_NORMAL
- en: Managing Python installations on your system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing third-party packages for your current project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building a Python package for distribution on a package repository
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running a test suite repeatedly across multiple environments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linting and type-checking your code to catch bugs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You don’t strictly need these tools to write Python software. Fire up your system’s
    Python interpreter and get an interactive prompt. Save your Python code as a script
    for later. Why use anything beyond an editor and a shell?
  prefs: []
  type: TYPE_NORMAL
- en: This is not a rhetorical question. Every tool you add to your development workflow
    should have a clear purpose and bring benefits that outweigh the costs of using
    it. Generally, the benefits of development tooling become manifest when you need
    to make development sustainable *over time*. At some point, publishing your module
    on the Python Package Index will be easier than emailing it to your users.
  prefs: []
  type: TYPE_NORMAL
- en: 'Somewhere along the journey from writing one-off scripts to distributing and
    maintaining packages, challenges pop up:'
  prefs: []
  type: TYPE_NORMAL
- en: Supporting multiple versions of Python on multiple operating systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keeping dependencies up-to-date, and scanning them for vulnerabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keeping the code base readable and consistent
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interacting with bug reports and external contributions from the community
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keeping test coverage high to reduce the defect rate in code changes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automating repeated tasks to reduce friction and avoid surprises
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This book will show you how developer tooling can help with such challenges.
    The tools described here greatly benefit the code quality, security, and maintainability
    of Python projects.
  prefs: []
  type: TYPE_NORMAL
- en: But tooling also adds complexity and overhead. The book strives to minimize
    that by forging tools into an easy-to-use toolchain, and by automating workflows
    reliably and repeatably—​whether they execute locally on a developer machine,
    or on a continuous integration server across a range of platforms and environments.
    As much as possible, you should be able to focus your attention on writing software,
    with your toolchain working in the background.
  prefs: []
  type: TYPE_NORMAL
- en: 'Laziness has been called “a programmer’s greatest virtue,”^([1](preface01.html#id231))
    and this saying applies to development tooling, too: Keep your workflow simple
    and don’t adopt tools for their own sake. At the same time, good programmers are
    also curious. Give the tools in this book a try to see what value they may bring
    to your projects.'
  prefs: []
  type: TYPE_NORMAL
- en: Who Should Read This Book?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you’re one of these people, you’ll benefit from reading this book:'
  prefs: []
  type: TYPE_NORMAL
- en: You’re proficient with Python, but you’re not sure how to create a package.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You’ve been doing this for years—​setuptools, virtualenv, and pip are your friends.
    You’re curious about recent developments in tooling and what they bring to the
    table.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You maintain mission-critical code that runs in production. But there must be
    a better way to do all of this. You want to learn about state-of-the art tools
    and evolving best practices.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You want to be more productive as a Python developer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You’re an open source maintainer looking for a robust and modern project infrastructure.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You’re using a bunch of Python tools in your projects, but it’s hard to see
    how everything fits together. You want to reduce the friction that comes with
    all this tooling.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “Things just keep breaking—​why doesn’t Python find my module now? Why can’t
    I import the package I just installed?”
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This book assumes that you have a basic knowledge of the Python programming
    language. The only tooling you need to be familiar with are the Python interpreter,
    an editor or IDE, and the command line of your operating system.
  prefs: []
  type: TYPE_NORMAL
- en: Outline of This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book is arranged into three parts:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Part I, “Working with Python”](part01.html#parti)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 1, “Installing Python”](ch01.html#chapter_installing), teaches you
    how to manage Python installations over time across different platforms. The chapter
    also introduces the Python Launchers for Windows and Unix—​you’ll use them throughout
    the book.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 2, “Python Environments”](ch02.html#chapter_environments), zooms into
    a Python installation and discusses how your code interacts with it. You’ll also
    learn about tools that help you work efficiently with virtual environments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Part II, “Python Projects”](part02.html#partii)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3, “Python Packages”](ch03.html#chapter_packages), teaches you how
    to set up your project as a Python package, and how to build and publish packaging
    artifacts. The chapter also introduces the example application used throughout
    the book.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 4, “Dependency Management”](ch04.html#chapter_dependencies), describes
    how to add third-party packages to a Python project, and how to keep track of
    your project dependencies over time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 5, “Managing Projects with Poetry”](ch05.html#chapter_poetry), teaches
    you how to work with Python projects using Poetry. Poetry lets you manage environments,
    dependencies, and packaging at a higher level.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Part III, “Testing and Static Analysis”](part03.html#partiii)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6, “Testing with pytest”](ch06.html#chapter_testing), discusses how
    to test a Python project, and how to work efficiently with the pytest framework
    and its ecosystem.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 7, “Measuring Coverage with Coverage.py”](ch07.html#chapter_coverage),
    teaches you how to discover untested code by measuring the code coverage of your
    test suite.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 8, “Automation with Nox”](ch08.html#chapter_nox), introduces the Nox
    automation framework. You’ll use it to run tests across Python environments and,
    more generally, to automate checks and other developer tasks in your projects.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 9, “Linting with Ruff and pre-commit”](ch09.html#chapter_linting),
    shows you how to find and fix likely bugs, and how to format your code, with Ruff.
    You’ll also learn about pre-commit, a cross-language linter framework with Git
    integration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 10, “Using Types for Safety and Inspection”](ch10.html#chapter_typing),
    teaches you how to verify type safety with static and runtime type checkers, and
    how to inspect types at runtime to perform actual magic (terms and conditions
    apply).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: References and Further Reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Your first point of reference outside this book should be the official documentation
    of each tool. Besides those, many interesting packaging-related discussions take
    place on the [Python Discourse](https://discuss.python.org/). Discussions in the
    Packaging category are often the place where the future of the Python packaging
    and tooling ecosystem is shaped, in the form of packaging standards using the
    [Python Enhancement Proposal](https://peps.python.org/) (PEP) process. Finally,
    the [Python Packaging Authority](https://pypa.io/) (PyPA) is a working group that
    maintains a core set of software projects used in Python packaging. Their website
    tracks the list of currently active interoperability standards governing Python
    packaging. The PyPA also publishes the [Python Packaging User Guide](https://packaging.python.org/).
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '`Constant width`'
  prefs: []
  type: TYPE_NORMAL
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '**`Constant width bold`**'
  prefs: []
  type: TYPE_NORMAL
- en: Shows commands or other text that should be typed literally by the user.
  prefs: []
  type: TYPE_NORMAL
- en: '*`Constant width italic`*'
  prefs: []
  type: TYPE_NORMAL
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element indicates a warning or caution.
  prefs: []
  type: TYPE_NORMAL
- en: Using Code Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Supplemental material (code examples, exercises, etc.) is available for download
    at [*https://oreil.ly/hmpt-code*](https://oreil.ly/hmpt-code).
  prefs: []
  type: TYPE_NORMAL
- en: If you have a technical question or a problem using the code examples, please
    send email to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  prefs: []
  type: TYPE_NORMAL
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: “*Hypermodern Python
    Tooling* by Claudio Jolowicz (O’Reilly). Copyright 2024 Claudio Jolowicz, 978-1-098-13958-2.”'
  prefs: []
  type: TYPE_NORMAL
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](https://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-889-8969 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-827-7019 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*support@oreilly.com*](mailto:support@oreilly.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://www.oreilly.com/about/contact.html*](https://www.oreilly.com/about/contact.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*https://oreil.ly/hypermodern-python-tooling*](https://oreil.ly/hypermodern-python-tooling).
  prefs: []
  type: TYPE_NORMAL
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on LinkedIn: [*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*https://youtube.com/oreillymedia*](https://youtube.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book covers many open source Python projects. I am very grateful to their
    authors and maintainers, most of whom work on them in their free time, often over
    many years. In particular, I would like to acknowledge the unsung heroes of the
    PyPA, whose work on packaging standards lets the ecosystem evolve towards better
    tooling. Special thanks to Thea Flowers for writing Nox and building a welcoming
    community.
  prefs: []
  type: TYPE_NORMAL
- en: Before this book, there was the Hypermodern Python article series. I would like
    to thank Brian Okken, Michael Kennedy, and Paul Everitt for spreading the word,
    and Brian for giving me the courage to turn it into a book.
  prefs: []
  type: TYPE_NORMAL
- en: For their deep insights and opinionated feedback, I am indebted to my reviewers
    Pat Viafore, Jürgen Gmach, Hynek Schlawack, William Jamir Silva, Ganesh Hark,
    and Karandeep Johar. This book wouldn’t be the same without them. I take responsibility
    for any errors that remain.
  prefs: []
  type: TYPE_NORMAL
- en: Making a book takes a village. I would like to thank my editors Zan McQuade,
    Brian Guerin, Sarah Grey, and Greg Hyman, as well as all the team at O’Reilly.
    My special thanks go out to Sarah for keeping me on track and improving my writing
    during this journey. For giving me time to work on this book, I thank Jakub Borys,
    my manager at Cloudflare.
  prefs: []
  type: TYPE_NORMAL
- en: This book is dedicated to Marianna, the love of my life. Without her support,
    encouragement, and inspiration, I couldn’t have written this book.
  prefs: []
  type: TYPE_NORMAL
- en: '^([1](preface01.html#id231-marker)) Larry Wall, [*Programming Perl*](https://learning.oreilly.com/library/view/programming-perl-4th/9781449321451/),
    (Sebastopol: O’Reilly, 1991).'
  prefs: []
  type: TYPE_NORMAL
