- en: Chapter 16\. DevOps War Stories and Interviews
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第16章。DevOps战斗故事和面试
- en: '*Author: Noah*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*作者：Noah*'
- en: When I was finishing my last year of college at Cal Poly San Louis Obispo, I
    needed to take Organic Chemistry over the summer to graduate on time. Unfortunately,
    there was no financial aid over the summer, so I had to rent a house and get a
    full-time job. I was able to get a part-time job at the library for minimum wage,
    but it still wasn’t enough money. I scoured the help wanted ads and the only job
    popping up was for a bouncer at a vast country-western nightclub.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在加利福尼亚州圣路易斯奥比斯波的最后一年大学时，我需要在夏季修完有机化学才能按时毕业。不幸的是，夏季没有财政援助，所以我不得不租房并找份全职工作。我能在图书馆找到一份时薪工作，但这还不够钱。我搜遍了招聘广告，唯一出现的工作是一个大型乡村西部夜总会的门卫。
- en: At my job interview, the manager who interviewed me was about six feet tall,
    close to three hundred pounds of mostly muscle. He also had a huge black eye.
    He told me that the previous weekend a large pack of people had beat up all the
    bouncers, including him. He told me it was between me and a shot-putter on the
    track team. To help decide between me and the shot-putter, he asked me if I would
    run in the middle of a similar fight. I told him that I wouldn’t run from a brawl
    and I got the job.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的面试中，面试我的经理大约有六英尺高，近三百磅的肌肉大部分。他还有一个巨大的黑眼圈。他告诉我，上个周末一大群人殴打了所有门卫，包括他在内。他告诉我，这是我和田径队的铅球手之间的竞争。为了帮助决定我和铅球手之间的竞争，他问我是否会在类似的斗殴中逃跑。我告诉他我不会逃避打架，然后我得到了这份工作。
- en: Later I started to realize that I may have been a little bit naive in estimating
    my courage and my abilities. There were some massive wrestlers and football players
    that would regularly come in and get into fights, and they were terrifying people.
    At one concert, they called in for backup because they were expecting trouble.
    A new bouncer with a mohawk and Chinese writing tattooed on his skull was my coworker
    for that event. Several years later I saw him on TV winning the UFC Heavyweight
    Championship and put a name to a face, Chuck Liddel. Bouncing was a dangerous
    job. This fact became evident one day when I tried to break up a fight in which
    a drunk 250-pound football player was pummeling a victim in the face. I wanted
    to pull him off but instead I was thrown several feet back, as if the man was
    effortlessly punching a pillow across the room. It dawned on me at that moment
    that I wasn’t invincible, and my martial arts skills were nonexistent. I never
    forgot that lesson.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 后来我开始意识到，我在评估我的勇气和能力时可能有些天真。一些大力士和橄榄球运动员经常来这里打架，他们是可怕的人物。在一场音乐会上，他们叫来了后援，因为他们预料到会有麻烦。一个有着鹰嘴式发型和头上刺着中文的门卫是那个事件的我的同事。几年后，我在电视上看到他赢得UFC重量级冠军，并把名字和面孔对应起来，那人就是查克·利德尔。保镖是一份危险的工作。这一事实在有一天变得明显，当我试图制止一场醉酒的250磅重的橄榄球运动员在殴打一个受害者的脸时。我想拉他开，但结果被他轻而易举地甩开了好几英尺，就像他在轻松地打一个靠在房间对面的枕头一样。在那一刻，我意识到我并不无敌，而我的武术技能根本不存在。我从未忘记那个教训。
- en: One way of describing this overconfidence is the Dunning-Kruger effect. The
    Dunning-Kruger effect is a cognitive bias where people mistakenly assess their
    cognitive ability as more significant than it is. You can see this effect in practice
    on the yearly StackOverflow survey. In 2019, 70% of developers considered themselves
    above average, while 10% considered themselves below average. What is the takeaway
    here? Don’t trust human cognition! Trust automation instead. “Trust me,” “I am
    the boss,” “I have been doing this for X years,” and other statements of confidence
    are nonsense in comparison to the brutal efficiency of automation done correctly.
    The belief that automation is greater than hierarchy is what DevOps is all about.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 描述这种过度自信的一种方式是邓宁-克鲁格效应。邓宁-克鲁格效应是一种认知偏差，人们错误地评估自己的认知能力比实际更重要。你可以在每年的StackOverflow调查中看到这种效应。2019年，70%的开发者认为自己高于平均水平，而10%的人认为自己低于平均水平。这里的教训是什么？不要相信人类的认知！相信自动化！“相信我”，“我是老板”，“我已经做了X年”，以及其他自信的陈述与正确执行的自动化的残酷效率相比，都是无稽之谈。相信自动化优于等级制度，这就是DevOps的全部意义。
- en: 'This chapter links everything in the book about automation together by using
    real people and real case studies to explore the DevOps best practices of:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章通过使用真实人物和真实案例研究，将书中关于自动化的一切联系起来，探索了DevOps的最佳实践：
- en: Continuous Integration
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连续集成
- en: Continuous Delivery
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续交付
- en: Microservices
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微服务
- en: Infrastructure as Code
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基础设施即代码
- en: Monitoring and Logging
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控和日志**'
- en: Communication and Collaboration
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**沟通和协作**'
- en: Film Studio Can’t Make Film
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**电影工作室无法制作电影**'
- en: After living in New Zealand for a year working on the movie *Avatar*, I was
    in a very peaceful frame of mind. I lived on the North Island in a town called
    Miramar, which was a stunningly beautiful peninsula. I would step outside my door
    onto the beach for my daily 14-kilometer daily run. Eventually, the contract ended,
    and I had to get a new job. I accepted a position in the Bay Area at a major film
    studio that employed hundreds of people and was located at a facility covered
    over a hundred thousand square feet. Hundreds of millions of dollars had been
    invested in this company, and it seemed like a cool place to work. I flew in over
    the weekend and arrived on a Sunday (the day before work).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在新西兰为电影《阿凡达》工作了一年后，我心境非常平静。我住在北岛一个名叫米拉马的小镇，那里是一个令人惊叹的美丽半岛。每天早上，我会从家门口走出去沿着海滩跑上14公里。最终，合同到期了，我不得不找新工作。我接受了湾区一个大型电影工作室的职位，那里有数百名员工，工作场所占地十多万平方英尺。这家公司投资了数亿美元，看起来是一个很酷的工作地方。我周末飞来，星期天抵达（工作日前的一天）。
- en: My first day at work was quite shocking. It snapped me right out of my paradise
    mindset. The entire studio was down for the count, and hundreds of employees couldn’t
    work because the central software system, an asset management system, wouldn’t
    work. Out of panic and desperation, I was brought into the secret war room and
    shown the extent of the problem. I could tell my peaceful days of running casually
    along the beach were over. I had entered a war zone. Yikes!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我工作的第一天相当震惊。我从天堂般的心境中猛然醒来。整个工作室瘫痪了，数百名员工因为核心软件系统——资产管理系统——无法工作。在恐慌和绝望中，我被带进了秘密的战斗室，并展示了问题的严重程度。我可以感觉到我在沿着海滩悠闲奔跑的平静日子结束了。我进入了一个战区。天哪！
- en: 'As I learned more about this crisis, it became apparent that it had been a
    slow-burning fire for quite some time. Regular all-day outages and severe technical
    problems were the norm. The list of issues was as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我对这场危机的了解加深，显而易见，这已经是一个慢慢燃烧的大火已有一段时间了。整天的停机和严重的技术问题成为常态。问题清单如下：
- en: The system was developed in isolation without code review.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统是在没有代码审查的情况下独立开发的。
- en: There was no version control.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有版本控制。
- en: There was no build system.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有构建系统。
- en: There were no tests.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有测试。
- en: There were functions over a thousand lines long.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有超过一千行的函数。
- en: It was sometimes hard to get a hold of key people responsible for the project.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时很难联系到负责项目的关键人员。
- en: Outages were costly because highly paid personnel couldn’t work.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停机很昂贵，因为高薪人员无法工作。
- en: Film encourages reckless software development because they “are not a software
    company.”
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电影鼓励不负责任的软件开发，因为他们“不是一个软件公司”。
- en: Remote locations had mysterious connections issues.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程地点存在神秘的连接问题。
- en: There was no real monitoring.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有真正的监控。
- en: Many departments had implemented ad hoc solutions and patches for problems.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多部门为问题实施了临时解决方案和补丁。
- en: The only fix to this standard set of problems is to start doing one right thing
    at a time. The new team formed to solve this problem did precisely that. One of
    the first steps to address the challenge was to set up continuous integration
    and automated load-testing in a staging environment. It is incredible how much
    a simple action like this can lead to considerable gains in understanding.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这一系列问题的唯一解决办法就是一次做一件正确的事情。新组建的团队正是这样做的。解决这个问题的第一步之一是在演练环境中设置持续集成和自动化负载测试。令人惊讶的是，像这样简单的行动可以极大地增进理解。
- en: Note
  id: totrans-29
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: One of the last and more interesting problems we resolved surfaced in our monitoring
    system. After the system performance had stabilized and software engineering best
    practices were applied, we discovered a surprising bug. We had the system perform
    a daily check-in of assets as a basic health check. Several days later, we began
    experiencing severe performance issues daily. When we looked at the spikes in
    CPU on the database, they correlated to the basic health check. Digging further,
    it became apparent that the check-in code (a homegrown ORM, or object-relational
    mapper) was exponentially generating SQL queries. Most workflow processes only
    involved two or three versions of an asset, and our health check monitoring had
    discovered a critical flaw. One more reason for automated health checking.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们解决的最后一个更有趣的问题之一出现在我们的监控系统中。在系统性能稳定并应用软件工程最佳实践之后，我们发现了一个令人惊讶的错误。我们让系统每天检查资产作为基本健康检查。几天后，我们开始每天遇到严重的性能问题。当我们查看数据库上
    CPU 使用率的波动时，它们与基本健康检查相关。进一步挖掘后，显而易见的是，签入代码（自制的 ORM，对象关系映射器）正在指数级地生成 SQL 查询。大多数工作流程只涉及资产的两三个版本，我们的健康检查监控发现了一个关键缺陷。自动健康检查的另一个原因。
- en: When we ran the load test, we discovered a whole host of issues. One issue we
    found immediately was that after a small amount of concurrent traffic, the MySQL
    database would flatline. We found that the exact version of MySQL we were using
    had some severe performance problems. Switching to the latest version dramatically
    improved performance. With that performance issue solved and a way to automatically
    test whether we were making the problem better, we quickly iterated dramatic fixes.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行负载测试时，我们发现了一系列问题。我们立即发现的一个问题是，在少量并发流量之后，MySQL 数据库会变成一条直线。我们发现我们正在使用的 MySQL
    版本具有严重的性能问题。切换到最新版本极大地提高了性能。通过解决了这个性能问题，并找到了一种自动测试是否正在解决问题的方法，我们迅速进行了重大修复。
- en: Next, we got source code into version control, creating a branch-based deployment
    strategy and then running linting and testing, along with code review, on each
    check-in. This action also dramatically improved visibility into our performance
    issues and presented self-evident solutions. In an industrial crisis, automation
    and standards of excellence are two of the essential tools you can deploy.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将源代码放入版本控制中，创建了基于分支的部署策略，然后在每次签入时运行了代码检查和测试，以及代码审查。这个举措也极大地提高了我们对性能问题的可见性，并呈现了不言自明的解决方案。在工业危机中，自动化和卓越标准是您可以部署的两个基本工具。
- en: One final issue we had to resolve was that our remote film studio location was
    having severe reliability problems. Staff at the remote location was sure the
    issue was performance issues related to our API. The crisis was urgent enough
    that the top executives at the company had me and another engineer fly down to
    the location to troubleshoot the problem. When we got there, we called our central
    office and had them look only at requests from that IP range. When we launched
    their application, there was no network traffic observed.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最后需要解决的一个问题是，我们的远程电影工作室位置存在严重的可靠性问题。远程位置的工作人员确信问题与我们的 API 相关的性能问题有关。危机紧急到公司的高层执行官让我和另一位工程师飞到现场排查问题。当我们到达那里时，我们打电话给我们的中央办公室，并让他们仅查看该
    IP 范围的请求。当我们启动他们的应用程序时，没有观察到任何网络流量。
- en: We checked the network infrastructure at the remote location and verified we
    could send traffic between the client machine and the central office. On a hunch,
    we decided to look at both local and network performance on the Windows machine
    using specialized diagnostic software. We then observed thousands of socket connections
    launched over 2 to 3 seconds. After digging into the issue a bit, we discovered
    that the Windows operating system would temporarily shut down the entire network
    stack. If too many network connections spawn within a short window, the OS protects
    itself. The client application was attempting to launch thousands of network connections
    in a `for` loop and eventually shut off its network stack. We went into the code
    and limited the machine so it could only make one network connection, and suddenly,
    things worked.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们检查了远程位置的网络基础设施，并验证了客户机与中央办公室之间可以发送流量。出于直觉，我们决定使用专门的诊断软件检查Windows机器上的本地和网络性能。然后我们观察到在2到3秒内启动了成千上万个套接字连接。经过进一步研究，我们发现Windows操作系统会暂时关闭整个网络堆栈。如果在短时间内生成太多的网络连接，操作系统会保护自己。客户端应用程序试图在一个`for`循环中启动成千上万个网络连接，最终关闭了它的网络堆栈。我们进入代码并限制了机器只能进行一个网络连接，突然之间，一切正常运转起来。
- en: Later we ran pylint on the source code of the client software and discovered
    approximately one-third of the system was not executable. The key issue wasn’t
    a performance problem, but a lack of software engineering and DevOps best practices.
    A few simple modifications to the workflow, such as continuous integration, monitoring,
    and automated load testing, could have flushed this problem out in under a week.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 后来，我们对客户端软件的源代码运行了pylint，并发现大约三分之一的系统无法执行。关键问题不是性能问题，而是缺乏软件工程和DevOps最佳实践。通过一些简单的工作流程修改，如持续集成、监控和自动化负载测试，本可以在不到一周内解决这个问题。
- en: Game Studio Can’t Ship Game
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏工作室无法推出游戏
- en: When I first joined an established game company, they were undergoing a transformational
    change. The existing product was extremely innovative when it first launched,
    but by the time I joined, they had decided they needed to invest in new products.
    The current culture of the company was a very data center-centric culture with
    substantial change management at every step. Many of the tools developed were
    logical extensions of the desire to maintain uptime for a highly successful, but
    dying, game. The introduction of new people, new departments, and new products
    led to inevitable, consistent conflict and also a crisis.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当我第一次加入一家成熟的游戏公司时，它们正在经历一场变革。旧产品在首次推出时非常创新，但在我加入时，他们决定需要投资新产品。公司当前的文化非常注重数据中心，每一步都有大规模的变革管理。许多开发的工具都是对维持一个高度成功但即将消亡的游戏的可用性的逻辑扩展。引入新人、新部门和新产品导致了不可避免的持续冲突和危机。
- en: The initial depth of the crisis became known to me early, even though I was
    working on the legacy product. As I was walking by the new products team on the
    way to another meeting, I heard an interesting conversation. A Spanish developer
    on the flagship new product caught my ear when he said during an Agile standup,
    “It no worketh…” This statement alone was quite shocking, but I was even more
    shocked to hear the response, “Luigi, that is *tech talk*; this is not the forum
    for that.”
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我很早就意识到危机的初步深度，尽管我一直在处理老产品。在我去参加另一个会议的路上，经过新产品团队时，我听到了一个有趣的对话。在敏捷团队会议上，一位西班牙开发者在谈论旗舰新产品时引起了我的注意，他说：“It
    no worketh…” 单这个声明就相当震惊，但更令我震惊的是听到的回应：“Luigi，这是*技术术语*；这不是讨论这个的场合。”
- en: I knew at that point there was, in fact, something wrong. Later, many people
    on the project quit, and I took over a project that was over a year late and was
    on rewrite number three in language number three. One of the key findings was
    that this “canary in the coal mine” developer was precisely correct. Nothing worked!
    On my first day on the project, I checked out the source code on my laptop and
    tried to run the web application. It completely locked up my computer on a few
    refreshes of Chrome. Uh-oh, here I was again.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 从那一刻起，我知道确实出了问题。后来，项目上的许多人都离开了，我接手了一个延迟一年多、第三次重写第三种语言的项目。其中一个关键发现是这位“煤矿里的金丝雀”开发者完全正确。什么都不起作用！在项目的第一天，我在笔记本电脑上检查了源代码，并尝试运行Web应用程序。几次刷新Chrome后，我的电脑完全死机。噢哦，我又碰上了这种情况。
- en: After digging into the project a bit, I realized there were a few critical issues.
    The first was that the core technical crisis needed addressing. There was a “cargo
    cult” Agile process that was very good at creating and closing tickets, but that
    built something that didn’t function. One of the first things I did was isolate
    the core engineers from this project management process, and we designed a fix
    for the core solutions without the overhead of “Agile.” Next, when the core engine
    issue resolved, we created an automated deployment and custom load-testing process.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入研究了项目后，我意识到有几个关键问题。首先是需要解决的核心技术危机。有一个“木乃伊崇拜”的敏捷过程，非常擅长创建和关闭工单，但却构建了一个功能不完善的系统。我做的第一件事是将核心工程师从这个项目管理流程中隔离出来，我们为核心解决方案设计了一个修复方案，而不带有“敏捷”额外开销。接下来，当核心引擎问题解决后，我们创建了自动化部署和定制的负载测试流程。
- en: Because this was the top priority for the company, we reprioritized the work
    of members of some of the other teams working on the core product to build a custom
    load test and custom instrumentation. This initiative was also met with substantial
    pushback because it meant that product managers who were working with these resources
    would be standing idly by. It was an essential point in the project because it
    forced management to decide whether launching this first new product was a top
    priority to the company or not.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这是公司的头等大事，我们重新调整了一些其他团队成员在核心产品上的工作，以构建定制的负载测试和定制的仪器。这个举措也遭遇了相当大的阻力，因为这意味着与这些资源合作的产品经理们将被迫闲置。这是项目中的一个重要节点，因为它迫使管理层决定是否将这个全新产品的首次发布作为公司的首要任务。
- en: The final big hurdle in launching the product was the creation of a continuous
    delivery system. On average, it took around one week to make even a small change
    like changing HTML. The deployment process that worked reasonably well for a C++
    game that had hundreds of thousands of paying customers did not work for a modern
    web application. The legacy game ran out of a traditional data center. It was
    very different than what was ideal for creating a web-based game in the cloud.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 推动产品发布的最后一个重大障碍是创建持续交付系统。平均而言，即使是像更改 HTML 这样的小改动，也需要大约一周的时间。对于拥有数十万付费客户的 C++
    游戏而言，工作相当顺利的部署过程对于现代网络应用程序并不适用。传统游戏是在传统数据中心中运行的，这与在云中创建基于网络的游戏的理想条件大不相同。
- en: One of the things cloud computing also exposes is lack of automation. The very
    nature of cloud computing demands a higher level of DevOps skills and automation.
    Things are not elastic if it requires a human to be involved in scaling up and
    scaling down servers. Continuous delivery means that software runs continuously,
    delivered to environments where it can be deployed quickly as a final step. A
    “release manager” who is involved in a week-long deployment process with many
    manual steps is in direct opposition to DevOps.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算还揭示了自动化的缺乏。云计算的本质要求更高级的 DevOps 技能和自动化。如果需要人工介入来扩展和缩小服务器，事情就不具有弹性。持续交付意味着软件持续运行，并且可以快速部署到环境中作为最后一步。参与一个需要一周时间的部署过程的“发布经理”与
    DevOps 目标直接相悖。
- en: Python Scripts Take 60 Seconds to Launch
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 脚本需要 60 秒才能启动。
- en: Working at one of the top film studios in the world, with one of the largest
    supercomputers in the world, is a great way to see what happens at scale. One
    of the critical issues with open source software is that it may be built on a
    laptop in isolation from the needs of a large company. A developer is trying to
    solve a particular problem. On the one hand, the solution is elegant, but on another
    hand, it creates a problem.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在世界顶级电影工作室之一，并拥有世界上最大的超级计算机之一，是了解大规模运作的好方法。开源软件的一个关键问题是，它可能是在孤立的笔记本电脑上构建的，与大公司的需求无关。开发者试图解决一个特定的问题。一方面，解决方案很优雅，但另一方面，它又带来了问题。
- en: 'One of these problems in Python surfaced at this film studio because they had
    to deal with petabytes of data on a centralized file server. Python scripts were
    the currency of the company, and they ran just about everywhere. Unfortunately,
    they took around 60 seconds to launch. A few of us got together to solve the issue,
    and we used one of our favorite tools, `strace`:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这个电影工作室遇到的 Python 问题之一是，它们不得不在集中文件服务器上处理宠字节的数据。Python 脚本是公司的主要工具，它们几乎在所有地方运行。不幸的是，它们需要大约
    60 秒才能启动。我们几个人聚在一起解决这个问题，我们使用了我们最喜欢的工具，`strace`：
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The Python 2 is O(nlogn) or “Super Linear time” for module lookup. The number
    of directories in your path would at least linearly increase the time it took
    to launch the script. This performance penalty became a real problem at the film
    studio because this often meant more than one hundred thousand calls to the filesystem
    to launch a Python script. This process was not only slow but incrementally destructive
    to the performance of the file server. Eventually, this started to crush the centralized
    multimillion dollar file server completely.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Python 2的模块查找是O(nlogn)或者称为“超线性时间”。路径中目录的数量至少会线性增加启动脚本的时间。这种性能惩罚在电影工作室成为了一个真正的问题，因为这经常意味着超过十万次的文件系统调用来启动Python脚本。这个过程不仅速度慢，而且逐步破坏了文件服务器的性能。最终，这开始完全击垮中央化的数百万美元文件服务器。
- en: The solution was a combination of doing a deep dive with `strace`, i.e., using
    the right tool for the job, and also hacking Python to stop looking up imports
    by using paths. Later versions of Python have addressed this issue through caching
    lookups, but it pays to learn tools that enable you to do a deep dive on performance.
    A final touch is to always run profiling as a part of the continuous integration
    process to catch these types of performance bugs.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案是深入使用`strace`进行详细分析，即使用适合工作的正确工具，同时通过修改Python停止使用路径查找导入。Python的后续版本通过缓存查找已解决了这个问题，但学会使用能够深入分析性能的工具是非常重要的。最后一个要点是始终将性能分析作为连续集成过程的一部分，以捕捉这些类型的性能错误。
- en: Note
  id: totrans-50
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Two other situations at film studios involving bad UX design combined with lousy
    architecture come to mind. One day an animator came over to the main engineering
    section and asked for advice on solving a problem with a Filemaker Pro database
    that had been set up. The Filemaker Pro database that kept track of shots for
    the animation department kept getting deleted. When I asked to look at the database,
    there was a UI with two buttons next to each other. One was a medium-sized green
    button that said “Save Entry,” and another was a large red button that said, “Delete
    Database.”
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 想起了电影工作室中另外两种与糟糕的用户体验设计和糟糕的架构结合的情况。一天，一名动画师来到主工程部门，寻求解决设置的Filemaker Pro数据库问题的建议。动画部门跟踪镜头的Filemaker
    Pro数据库一直被删除。当我要求查看数据库时，发现了一个UI界面，其中有两个相邻的按钮。一个是中等大小的绿色按钮，上面写着“保存条目”，另一个是大红色按钮，上面写着“删除数据库”。
- en: At a completely different company, we noticed that one particular IP address
    was sending a tremendous amount of load toward the production MySQL database.
    When we tracked down the developer, they seemed a bit hesitant to talk to us.
    We asked if their department was doing anything special. They said they had a
    PyQt GUI that performed automation tasks. When we looked at the GUI, there were
    several buttons of normal size, and then a large button labeled “GO.” We asked
    what the “GO” button did, and the developer sheepishly said that everyone knows
    you don’t press that button. I opened up an SSH connection to our database and
    ran top on the MySQL server. Next, I did press that button, despite his protests
    not to. Sure enough, the database immediately went to 100% CPU sustained for several
    minutes.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一家完全不同的公司，我们注意到一个特定IP地址向生产MySQL数据库发送了大量负载。当我们追踪开发人员时，他们似乎有些犹豫与我们交谈。我们询问他们的部门是否在做任何特殊的事情。他们说他们有一个PyQt
    GUI执行自动化任务。当我们查看GUI时，发现了几个正常大小的按钮，然后是一个标有“GO”的大按钮。我们问“GO”按钮的作用，开发人员羞怯地说每个人都知道不要按下那个按钮。我打开了一个SSH连接到我们的数据库，并在MySQL服务器上运行了top命令。尽管他坚决反对，我还是按下了那个按钮。果然，数据库立即持续100%的CPU使用率数分钟。
- en: Putting Out a Fire with a Cache and Intelligent Instrumentation
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用缓存和智能仪器灭火
- en: At a Sports Social network where I was CTO, we were experiencing substantial
    problems with the performance from our relational database. We started to reach
    the limits of vertical scaling. We were running the biggest version of SQL Server
    that Amazon RDS (Amazon’s managed relational database service) provided. To make
    things worse, we couldn’t easily switch to horizontal scaling because, at that
    time, SQL Server didn’t integrate read slaves into RDS.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在我担任CTO的体育社交网络中，我们的关系型数据库性能出现了严重问题。我们开始接近垂直扩展的极限。我们使用了Amazon RDS提供的最大版本的SQL
    Server。更糟糕的是，由于当时SQL Server没有将读从服务器整合到RDS中，我们无法轻松切换到水平扩展。
- en: 'There are many ways to solve a crisis like this. One method could have involved
    rewriting key queries, but we were experiencing so much traffic and a shortage
    of engineers that we had to get creative. One of our DevOps-centric engineers
    came up with a critical solution by doing the following:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这类危机的方法有很多种。一种方法可能涉及重写关键查询，但我们正面临大量流量和工程师短缺的情况，所以我们必须寻找创造性的解决方案。我们其中一位以DevOps为中心的工程师提出了一个关键性的解决方案，做了以下几步：
- en: Added more instrumentation via an APM that traced the time SQL calls took and
    mapped those to routes
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加更多的仪表盘，通过一个应用性能管理工具（APM），跟踪 SQL 调用所花费的时间，并将其映射到路由。
- en: Added Ngnix as a cache to read-only routes
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Nginx 作为缓存添加到只读路由。
- en: Load-tested this solution in a dedicated staging environment
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在专门的测试环境中对这个解决方案进行负载测试。
- en: This engineer saved our bacon, and he implemented the solution through minimal
    modifications to the application. It dramatically increased our performance and
    allowed us to eventually scale to millions of monthly users, becoming one of the
    largest sports sites in the world. DevOps principles aren’t just important in
    the abstract; they can figurately saving you from drowning in a sea of deliberate
    technical debt.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这位工程师拯救了我们的后路，他通过对应用程序进行最小修改来实施解决方案。这显著提高了我们的性能，并最终让我们能够扩展到每月数百万用户，成为世界上最大的体育网站之一。DevOps原则不仅仅是抽象的重要性；它们可以象征性地帮助你避免在技术债务的海洋中陷入困境。
- en: You’ll Automate Yourself Out of a Job!
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你将自动化自己的工作！
- en: In my early twenties, I got a job at one of the top film studios in the world
    and was pretty excited to use my combination of skills in video, film, programming,
    and IT. It was also a union job, which I had never experienced before working
    in technology. The upside of a union job was that it had incredible benefits and
    pay, but I later discovered that there were some downsides involving automation.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 20 多岁时，我在世界顶级电影工作室之一找到了工作，并且非常兴奋能够运用我在视频、电影、编程和信息技术方面的综合技能。这也是一个工会工作，这在我之前从事技术工作时从未有过的经历。工会工作的好处是，它拥有极好的福利和薪酬，但后来我发现，其中涉及到自动化方面的一些缺点。
- en: After working there for a couple of months, I realized that one of my tasks
    was pretty silly. I would walk around the film studio on a Saturday (for overtime
    pay), place a CD into high-end editing systems, and “do maintenance.” The general
    premise was a good one; do weekly preventative maintenance so that these expensive
    machines would have minimal downtime during the week. The implementation was flawed,
    though. Why would I do anything manually if I could automate it? After all, it
    was a computer.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在那里工作了几个月后，我意识到我的一个任务相当愚蠢。我会在星期六（加班工资）在电影工作室里走动，把CD放入高端编辑系统中，并“进行维护”。总体的想法是好的；每周进行预防性维护，以确保这些昂贵的设备在工作日几乎没有停机时间。然而，实施方式有缺陷。如果一切都可以自动化，我为什么还要手动操作呢？毕竟，这是一台电脑。
- en: 'After my second Saturday “doing maintenance,” I constructed a secret plan to
    automate my job. Because it was a union job, I had to be a bit careful, though,
    and keep it a secret until I had validated that it would work. If I asked for
    permission, you could forget about it. I first wrote down a series of steps that
    were necessary to automate this:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个“维护”星期六之后，我构思了一个秘密计划来自动化我的工作。因为这是一个工会工作，所以我必须小心谨慎，并保密直到验证其可行性。如果我请求批准，那就别想了。我首先写下了一系列必要的步骤来实现自动化：
- en: Connect the OS X machines to the company LDAP servers. This step would allow
    multiple users and allow me to mount NFS home directories.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接OS X机器到公司的LDAP服务器。这一步将允许多个用户，并允许我挂载NFS主目录。
- en: Reverse engineer the editing software to let multiple users access the software.
    I had applied group-level permissions to several lists to hack it, allowing various
    users to use the same machine.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 反向工程编辑软件，以允许多个用户访问该软件。我对几个列表应用了组级权限进行了修改，以此来“黑客”它，允许各种用户使用同一台机器。
- en: Create an image of the software in the state I would want it to install.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建软件的镜像，使其处于我想要安装的状态。
- en: Write a script to “NetBoot,” i.e., boot the machine from a networking operating
    system and then reimage the machines.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个脚本来进行“NetBoot”，即从网络操作系统引导计算机，然后重新映像这些计算机。
- en: Once I got this sorted out, I was able to walk over to any machine, reboot it,
    and hold down the “N” key. It then wholly reimaged the software (and still preserved
    user data because it was on the network). It took 3.5 to 5 minutes to completely
    reinstall the entire machine because of the fast system and because I was doing
    block-level copying.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我解决了这个问题，我就能够走到任何一台机器旁边，重新启动它，并按住“N”键。然后完全重新安装软件（并且保留了用户数据，因为它在网络上）。由于系统速度快，并且我在做块级复制，所以整个机器的重新安装只需
    3.5 到 5 分钟。
- en: In my first test run, I was able to complete my “maintenance” in 30 minutes.
    The only bottleneck was walking over to the machines and rebooting them while
    holding down the “N” key. Additionally, I then told the film editors first to
    try restoring their machines by resetting them and holding the “N” key, and this
    eliminated support calls dramatically. Yikes, my job and my whole department’s
    job got way more manageable. This automation wasn’t entirely good at the union
    shop.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的第一次测试中，我能够在 30 分钟内完成我的“维护”工作。唯一的瓶颈是走到机器旁边，按住“N”键重启它们。此外，我告诉了电影编辑们首先尝试通过重置并按住“N”键来恢复他们的机器，这显著减少了支持电话。天哪，我的工作以及整个部门的工作都变得更加容易处理了。这种自动化在工会工厂并非完全适用。
- en: Soon an older union worker pulled me into a surprise meeting with my boss. He
    was unhappy with what I did. The meeting ended with him screaming at me while
    pointing a finger at me and saying, “You will script yourself out of a job, kid!”
    The boss’s boss was also unhappy. He had advocated to management for months to
    get a maintenance team approved, and then I wrote a script that eliminated much
    of what our department did. He also yelled at me profusely.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 不久，一位老工会工人突然把我拉到与我的老板的一次意外会议中。他对我所做的不满意。会议结束时，他对我大声吼叫，并指着我说：“你这个小子会把自己脚本化而失去工作的！”老板的上司也不高兴。几个月来，他一直向管理层倡导批准一个维护团队，然后我写了一个脚本，消除了我们部门大部分工作。他也对我大声斥责。
- en: The word spread, and everyone liked the new automated process, including the
    stars and the film editors. I did not get fired because of this. Later, word spread
    about what I was doing, and I did script myself out of a job. I got recruited
    to work at Sony Imageworks and was hired to do what I almost got fired for doing.
    It was a fun job, too. I got to play basketball at lunch with Adam Sandler and
    the cast of his movies quite frequently. So, yes, you can script yourself out
    of a job and right into a better one!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 消息传开了，每个人都喜欢这个新的自动化流程，包括明星和电影编辑。因此，我没有因此被解雇。后来，关于我的做法传开了，我因此把自己脚本化而从一份工作中脱颖而出。我被招募到索尼影像工作室工作，并被聘用来做我几乎因为这个而被解雇的事情。这也是一份有趣的工作。我经常在午餐时和亚当·桑德勒以及他电影的演员们一起打篮球。所以，是的，你可以通过脚本化把自己从一份工作中解脱出来，而且正好转移到一个更好的工作中！
- en: DevOps Antipatterns
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 反模式
- en: Let’s dive into some clear examples of what not to do. It is often much easier
    to learn from mistakes than to learn from perfection. This section dives into
    many horror stories and antipatterns to avoid.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入一些明确的例子，说明不应该做的事情。通常，从错误中学习要比追求完美容易得多。本节详细介绍了许多可怕的故事和应避免的反模式。
- en: No Automated Build Server Antipattern
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无自动化构建服务器反模式
- en: It never ceased to amaze me how many troubled projects or companies had no build
    server. This fact is perhaps the most significant red flag that exists for a software
    company. If your software isn’t put through a build server, you can pretty much
    guarantee minimal other forms of automation are occurring. This problem is a canary
    in the coal mine. Build servers are a foundational piece that must be in place
    to ensure you can reliably deliver software. Often, the first thing I would do
    in a crisis would be to immediately set up a build server. Just running code through
    pylint makes things better quickly.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 令我惊讶的是，有多少麻烦项目或公司根本没有构建服务器。这一事实可能是软件公司存在的最重要的警示标志。如果你的软件没有经过构建服务器的检验，你几乎可以肯定几乎没有其他形式的自动化正在进行。这个问题就像煤矿中的金丝雀一样。构建服务器是确保您能够可靠交付软件的基础组成部分。通常，在危机中我会立即设置一个构建服务器。仅仅通过
    pylint 运行代码就能迅速改善情况。
- en: Somewhat related to this is the “almost working” build server. It is shocking
    how some organizations do the same thing they do with DevOps and say, “that isn’t
    my job…that is the build engineer.” This dismissive attitude, just like the attitude
    of “this is not my job; this is DevOps,” is cancer. Every job in automation is
    your job if you work in a software company. There is no more critical or virtuous
    task than making sure things are automated. It is frankly ridiculous to say automation
    tasks are not your job. Shame on anyone who says this.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 与此有些相关的是“几乎工作”的构建服务器。有些组织竟然对待 DevOps 也是这样做，“这不是我的工作…那是构建工程师的工作。” 这种不屑一顾的态度，就像“这不是我的工作；这是
    DevOps 的工作”一样，是癌症。如果你在软件公司工作，那么自动化的每一个工作都是你的工作。没有比确保事情自动化更关键或更高尚的任务了。说自动化任务不是你的工作，简直荒谬。任何说这种话的人都应该受到谴责。
- en: Flying Blind
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 飞行盲目
- en: Are you logging your code? If you are not, why? Do you drive your car without
    headlights, too? Application visibility is another problem that is quite easy
    to remedy. For production software, it is technically possible to have too much
    logging, but more often than not in a troubled project, there is zero! For distributed
    systems, it is critical to have it logged. No matter how skilled the developers,
    no matter how simple the problem, no matter how good the operations team, you
    need logging. If you don’t include logging in your application, your project is
    dead on arrival.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 你有记录你的代码吗？如果没有，为什么？你开车时也不开车灯吗？应用程序可见性是另一个很容易解决的问题。对于生产软件，技术上有可能记录过多，但在困扰项目中，往往是没有！对于分布式系统，有记录是至关重要的。无论开发人员有多么熟练，问题多么简单，运维团队有多么优秀，你都需要记录。如果你的应用程序不包括记录，你的项目注定会失败。
- en: Difficulties in Coordination as an Ongoing Accomplishment
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 协调困难作为一项持续的成就
- en: 'One of the difficulties in working in DevOps teams is the status differences
    among the cofounder/CTO, the cofounder/CEO, and other members of the group. This
    conflict causes coordination difficulties in getting: a more reliable infrastructure,
    better instrumentation, proper backups, testing and QA, and ultimate resolution
    of any ongoing stability crisis.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 团队中工作的一个困难是创始人/CTO、创始人/CEO和团队其他成员之间的地位差异。这种冲突导致在获取更可靠的基础设施、更好的仪器设备、适当的备份、测试和质量保证以及最终解决任何持续稳定危机方面存在协调困难。
- en: Another ordinary organization dynamic that erodes the integrating conditions
    and causes coordination breakdowns is status differences in groups, because high-status
    groups may feel no need to recognize the task contributions of members of low-status
    groups. For instance, Metiu shows how, in software production, high-status programmers
    refuse to read the notes and comments that low-status programmers provide to document
    the progress of work. Because accountability requires an acknowledgment of mutual
    responsibilities, status differences that prevent such acknowledgment limit the
    development of liability.^([1](ch16.html#idm46691311834120))
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个影响整合条件并导致协调失败的普通组织动态是团体中的状态差异，因为高地位的团体可能觉得没有必要承认低地位团体成员的任务贡献。例如，Metiu 在软件开发中展示了高地位程序员拒绝阅读低地位程序员提供的注释和进度文档的情况。因为问责要求承认相互责任，阻碍这种承认的状态差异限制了责任的发展。
- en: In situations where substantial status differences exist, members of groups
    may not be able to trust one another. When working interdependently, low-status
    individuals in these situations will ask fewer questions and give less feedback,
    for fear of offending others and possible repercussions. Such a situation leads
    to less sharing of knowledge, limiting common understanding in the group.”
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在存在显著状态差异的情况下，团体成员可能无法彼此信任。在互相依赖的工作中，这些情况下的低地位个体会少问问题，少提反馈意见，因为担心冒犯他人和可能的后果。这种情况导致知识分享减少，限制了团体的共同理解。
- en: 'In organizational behavior, there is a concept called “closure.” Closure is
    defined as the act of monopolizing goods or opportunities based on status. According
    to Metiu, a typical high-status group of software developers will use the following
    techniques to practice closure:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在组织行为学中，有一个概念叫做“封闭”。封闭被定义为基于地位垄断商品或机会的行为。根据Metiu，典型的高地位软件开发团体会使用以下技术来实行封闭：
- en: Lack of interaction
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏互动
- en: Use of geographical distance or proximity (in the case of an office)
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用地理距离或接近程度（办公室的情况）
- en: Nonuse of work
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不使用工作成果
- en: Criticism
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批评
- en: Code-ownership transfer
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码所有权转移
- en: Having observed interactions inside companies, my belief is that executive management
    often engages in closure for projects they work on with staff. For example, even
    though a CTO may ask a DevOps engineer to work on an instrumentation task, the
    CTO may then refuse to use it. By not using it, it infers the DevOps engineer
    could never be in the same high-status group as the CTO. This behavior is textbook
    “closure” according to research in software development teams by Metiu.^([2](ch16.html#idm46691311825400))
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在公司内部的互动观察中，我认为高管经常会为他们与员工合作的项目做出决策。例如，即使CTO要求DevOps工程师参与一个仪表化任务，但CTO后来可能会拒绝使用它。通过不使用，可以推断出DevOps工程师永远无法进入与CTO同一高地位组的情况。这种行为根据Metiu在软件开发团队研究中被称为“封闭”[^2]。
- en: This behavior is one of the most substantial challenges to overcome in fixing
    pervasive problems within engineering in organizations. When a high-status individual
    “owned” a component, it has historically not worked until several “low status”
    team members got involved and took joint responsibility. These projects included
    UI, logging, data-center migration, infrastructure, and more. Admittedly this
    is a complex problem and not the only factor, but it is a factor with some unknown,
    yet significant, weight.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这种行为是组织中解决工程普遍问题中最大的挑战之一。当一个高地位的个人“拥有”一个组件时，历史上直到几个“低地位”的团队成员介入并共同承担责任后，它才能正常运作。这些项目包括UI界面、日志记录、数据中心迁移、基础设施等等。诚然，这是一个复杂的问题，并非唯一因素，但它是一个具有一定未知但显著权重的因素。
- en: If the leadership in an organization “is better” than other people, you will
    never implement true DevOps principles. You will be applying Highest Paid Person’s
    Opinon (HIPO) principles. While DevOps can quite literally save lives and save
    your company, HIPOs are ferocious animals that can and do kill everything in their
    path.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果组织中的领导比其他人“更优”，你将永远无法实施真正的DevOps原则。你将只会应用最高薪人士的观点（HIPO原则）。尽管DevOps可以直接挽救生命并拯救你的公司，但HIPOs是凶猛的动物，它们可以并且确实会摧毁它们路径上的一切。
- en: No Teamwork
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缺乏团队合作
- en: It is ubiquitous at martial arts studios to have the students help mop the floor.
    There are a lot of obvious reasons for doing this. It shows respect to the instructor
    and teaches students self-discipline. However, there are also some more subtle
    reasons as well.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在武术馆中，让学生帮忙拖地是司空见惯的。这样做有很多明显的原因。这显示了对教练的尊重，教给了学生自律。然而，还有一些更微妙的原因。
- en: There is a game theory problem at work here. Being exposed to a staph infection
    can cause serious health concerns. If you are offered an opportunity to mop the
    floor at the gym you train at, think very carefully about how you respond. People
    will watch how well you clean the floor, and if you do it well, they will do it
    well because they respect you. If you treat the task as something “beneath you”
    and don’t perform it well, you could cause two problems. One, you have not cleaned
    the floor well, which could cause other members of the gym to get sick. Two, you
    have “infected” the mindset of others, who will in turn not clean the floor. Your
    actions have actions in the present and the future.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这里涉及一个博弈论问题。接触到葡萄球菌感染可能会导致严重的健康问题。如果你被提供在你训练的健身房里拖地的机会，务必认真考虑你如何回应。人们会观察你清洁地板的效果，如果你做得好，他们也会因为尊重你而做得好。如果你把这个任务看作“低人一等”的事情，不认真执行，你可能会造成两个问题。首先，你没有清洁好地板，这可能会导致健身房的其他成员生病。其次，你“感染”了其他人的思维方式，他们反过来也不会认真清洁地板。你的行为在现在和未来都会有后果。
- en: So by “winning” and not mopping the floor correctly, you actually “lose” because
    you have played a part in encouraging unsanitary conditions that can be life-threatening.
    What is the moral of the story? If you train at a martial arts gym regularly and
    are asked to mop the floor, make sure you do an incredible job with a happy face.
    Your life could depend on it.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，通过“赢得”而没有正确清洁地板，实际上是“输掉”了，因为你在鼓励可能会危及生命的不卫生条件中扮演了角色。这个故事的寓意是什么？如果你经常在武术馆训练，并被要求拖地，请确保你以愉快的面孔做出出色的工作。你的生命可能取决于此。
- en: 'Let’s look at the same situation at a software company. Many critical tasks
    fit this same profile: adding proper logging, creating a continuous deployment
    of your project, load testing your project, linting your code, or doing a code
    review. If you show a poor attitude or don’t complete these tasks, your company
    may get a life-threating disease, just like staph. Approach and completion both
    are important. What is the message you are sending to your coworkers?'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看软件公司的同样情况。许多关键任务都符合相同的特征：添加适当的日志记录、创建项目的持续部署、负载测试项目、linting你的代码，或进行代码审查。如果你态度消极或者不完成这些任务，你的公司可能会得到一种像葡萄球菌一样的致命疾病。方法和完成都很重要。你传达给同事的信息是什么？
- en: 'There is an excellent book on teamwork by Larson and LaFast^([3](ch16.html#idm46691311816760))
    that covers a comprehensive and scientific study of teams. There are eight characteristics
    they identified that explain how and why effective teams develop:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 有一本由拉森和拉法斯特^([3](ch16.html#idm46691311816760))撰写的关于团队合作的优秀书籍，涵盖了对团队进行全面和科学研究的详细内容。他们确定了八个特征，解释了有效团队如何以及为什么发展：
- en: A clear, elevating goal
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个明确的、激励人心的目标
- en: A results-driven structure
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个以结果为导向的结构
- en: Competent team members
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有能力的团队成员
- en: Unified commitment
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 统一的承诺
- en: A collaborative climate
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个协作的氛围
- en: Standards of excellence
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卓越的标准
- en: External support and recognition
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外部支持与认可
- en: Principled leadership
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有原则的领导力
- en: Let’s review some examples of how these have worked or not worked in organizations.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一些这些在组织中是如何有效或无效的例子。
- en: A clear, elevating goal
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个明确的、激励人心的目标
- en: 'If your organization doesn’t have a clear, elevating goal, you’re in trouble,
    full stop! As an engineer, I wanted the goal to be to make excellent, reliable
    software that worked. At troubled companies, though, I was told about many goals:
    going after whales, letting Amazon “burn down” while we moved to a data center,
    getting the company sold to “X” or “Y.”'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的组织没有一个明确的、激励人心的目标，那就麻烦了，完全停下来！作为一名工程师，我希望目标是制作优秀、可靠的软件。然而，在问题多多的公司里，我听到了许多目标：追逐大鱼，让亚马逊“烧毁”，我们搬到数据中心，将公司卖给“X”或“Y”。
- en: A results-driven structure
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个以结果为导向的结构
- en: 'Is your organization a R.O.W.E, or results-only work experience? Many of the
    tools and processes used in companies are questionable if they are not directly
    attributable to results: Skype, email, extremely long meetings, working “late.”
    Ultimately, none of this helps the company by itself. More of a focus on results,
    versus “face time” or a “quick response on Skype” or email could be a breakout
    change in an organization. What about “fake Agile”? Is your company doing a cargo-cult
    agile? Does this process accomplish nothing but burn hours of developers’ time
    in meetings while you talk about burndown charts, story points, and use lots of
    other process buzzwords?'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你的组织是否采用了结果导向的工作体验（R.O.W.E）？许多公司使用的工具和流程如果不能直接归因于结果，则其可取性存疑：Skype、电子邮件、非常长的会议、“加班”。但最终，这些都无法单独帮助公司。更多地关注结果，而不是“面对面的时间”或者“Skype上的快速响应”或电子邮件，可能会在组织中引发突破性变化。“假敏捷”呢？你的公司是否在做仪式主义的敏捷？这种流程除了在会议中消耗开发人员的时间讨论燃尽图、故事点以及使用大量流程术语外，实际上一无所获。
- en: Competent team members
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有能力的团队成员
- en: It should go without saying that you need competent team members at your organization
    to be successful. Competency doesn’t mean “elite” schooling or “leet code,” though,
    it means the ability and desire to perform tasks as part of a team.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无疑问，要想组织成功，你需要有能力的团队成员。能力并不意味着“精英”学校或者“leet code”，而是指作为团队一部分执行任务的能力和愿望。
- en: Unified commitment
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 统一的承诺
- en: Do you have self-serving people on your team? Are they looking out only for
    themselves? Do they push a last-minute change to the database, then walk out the
    door without testing because it was 4:35? They need to catch the bus (not caring
    if they burned down production). This behavior is cancer that destroys your team
    quicker than anything else. You cannot have self-serving people in a high-performing
    team; they will ruin it.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 你的团队中有自私的人吗？他们只关心自己吗？他们在最后一刻对数据库进行了更改，然后在下班前没有测试就走了，因为已经是下午4点35分？他们需要赶公交车（不在乎他们是否烧毁了生产）。这种行为比任何其他事情都更快地摧毁了你的团队。在高效团队中，你不能有自私的人；他们会毁掉它。
- en: A collaborative climate
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一个协作的氛围
- en: Is there an appropriate level of task conflict? Everyone cannot merely agree
    with each other, because you won’t catch mistakes. At the same time, you cannot
    have people yelling at each other. It needs to be a respectful environment where
    people are open and expect feedback. If the scale falls too far in either direction,
    you’re doomed. Achieving this balance is easier said than done.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 任务冲突的适当水平是多少？每个人不能仅仅同意彼此，因为你不会发现错误。同时，也不能让人们彼此大声争吵。这需要一个尊重的环境，人们在这样的环境中开放并期待反馈。如果天平倾向任何一方，你注定会失败。实现这种平衡说起来容易做起来难。
- en: Another example is the hiring process. Many companies complain about the inability
    to hire, hire for diversity, and generally get good candidates. The real issue
    is that their hiring process is “fugly:”
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是招聘流程。许多公司抱怨不能雇用、为多样性而雇用，并且普遍得到优秀的候选人。真正的问题是他们的招聘流程是“**fugly**”：
- en: First, the company FLATTERs candidates to apply.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，公司 **FLATTERs** 候选人申请。
- en: Next, they WASTE their time with bespoke irrelevant tests.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，他们 **WASTE** 时间进行定制的无关紧要的测试。
- en: Then they HAZE them with a round of interviews that have worse predictive value
    than random.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后他们通过一轮面试 **HAZE** 他们，其预测价值比随机还差。
- en: Then they GHOST the candidate and don’t give them any feedback.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后他们 **GHOST** 候选人，并且不给他们任何反馈。
- en: They LIE and say they are trying to hire people when they have a broken process.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 他们 **LIE** 并且说他们正在尝试雇佣人员，而实际上他们的流程已经损坏。
- en: They then YELL on social media about how hard it is to engage diverse, or any,
    candidate.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后他们在社交媒体上 **YELL** 关于多样化，或任何候选人难以参与的问题。
- en: The reason you cannot hire is your process is FUGLY! Treat people with respect,
    and you will get respect. The connection will manifest itself in being able to
    retain many great employees who have been needlessly disregarded by a hiring practice
    that optimizes for the wrong thing.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能雇用的原因是你的流程 **FUGLY**！尊重他人，你将得到尊重。联系将体现在能够留住许多优秀员工身上，他们被一个优化错误事项的招聘实践毫无必要地忽视了。
- en: Standards of excellence
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 卓越标准
- en: This step is a significant challenge for organizations. Most IT professionals
    work very hard but could improve their standards of excellence and craftsmanship.
    One other way of stating this is to say that a higher degree of self-discipline
    is required. Higher standards for writing software, testing, and deploying are
    necessary. More stringent measures are required for reading the documentation
    on new technologies before they deploy.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步对组织来说是一个重大挑战。大多数IT专业人员工作非常努力，但可以提高卓越和工艺水平。另一种说法是需要更高程度的自律。需要更高的软件编写、测试和部署标准。在部署新技术之前，需要对文档阅读有更严格的要求。
- en: One example is the software life cycle. At every stage, Higher standards are
    necessary. Write a technical overview and create a diagram before work starts.
    It is important to never release code that hasn’t been through a proper DevOps
    life cycle.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子是软件生命周期。在每个阶段，需要更高的标准。在工作开始之前，撰写技术概述并创建图表是很重要的。绝不能发布未经过适当DevOps生命周期的代码。
- en: In terms of infrastructure, best practices need to be followed at many steps,
    whether a zookeeper configuration, EC2 storage configuration, or mongo or serverless.
    Every single component in the technology stack needs to be revisited and looked
    at for best-practice compliance. Many situations exist where documentation stated
    a proper way to configure an element, but it was never read! It would be safe
    to assume over 50% of the technology stacks at many companies are still improperly
    configured, despite significant technology improvements.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在基础设施方面，需要在许多步骤上遵循最佳实践，无论是动物管理员配置、EC2存储配置，还是mongo或serverless。技术堆栈中的每个组件都需要重新审视并符合最佳实践。许多情况下，文档中规定了正确配置元素的方法，但从未被阅读过！可以安全地假设，在许多公司，超过50%的技术堆栈仍然配置不正确，尽管技术有了显著改进。
- en: Please note that I am making a clear distinction between working “long hours,
    nights, and weekends,” versus being highly disciplined at work and following standards
    of excellence. There are too many nights and weekends worked, and not enough discipline,
    by an order of magnitude in the software industry. It would be a grave mistake
    to underestimate how significant the lack of standards and controls is versus
    merely telling someone to work longer and harder.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我在“长时间工作、夜晚和周末工作”与工作高度纪律性及遵循卓越标准之间作了明确区分。在软件行业，通常有太多的夜晚和周末工作，却缺乏纪律性，这相差一个数量级。低估缺乏标准和控制的重要性，仅仅告诉某人工作更长时间更努力将是一个严重错误。
- en: Finally, there needs to be a higher standard for gathering quantitative data
    when recommending strategic directions for many companies. The lack of any real
    quantitative analysis of “migrating to a new data center” or “pursuing whales,”
    speaks to a lack of discipline and process for many in management. It simply isn’t
    good enough to have an opinion, often stated as a fact by a member of a management
    team, without having the data to back it up. Management needs high standards.
    Everyone in the company can see when data, not opinion, hierarchy, aggression,
    or a desire for a commission, is used to make decisions.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，对于许多公司在推荐战略方向时收集定量数据，需要设定更高的标准。许多管理人员在“迁移到新数据中心”或“追求大客户”方面缺乏任何真正的定量分析，这反映了许多管理层的缺乏纪律和流程。仅凭意见来作为事实陈述的管理团队成员，而不具备数据支持，这是不够的。管理层需要高标准。公司中的每个人都可以看到，决策使用数据而非意见、等级制度、攻击性或对佣金的渴望。
- en: External support and recognition
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 外部支持和认可
- en: Historically, there have been some real issues with external support and recognition
    for DevOps professionals. A readily evident example is being on call. Things have
    improved dramatically in the tech world. But even today, many people on pager
    duty are not recognized for how hard they work and how challenging it is to be
    on call.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 历史上，DevOps专业人士在外部支持和认可方面确实存在一些真实问题。一个显而易见的例子是值班。在科技界，情况有了显著改善。但即使在今天，许多值班人员仍然没有得到应有的认可，他们工作的辛苦和值班的挑战性并未受到重视。
- en: At many organizations, there appears to be no tangible reward for working hard,
    such as volunteering to be on call. If anything, there is a clear precedent that
    shirking your duty could get you promoted because you were crafty enough to get
    out of lower-status work. In the case of one employee I worked with, he said it
    “wasn’t smart” (his words) to agree to be on call. He refused to go on call when
    he was in engineering. Shirking his duty then led to a promotion. It is challenging
    to ask for extraordinary contributions when leaders show below average commitment
    and below average integrity.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多组织中，似乎没有为努力工作（比如主动承担值班）提供明显的奖励。如果有的话，明显的先例表明逃避责任可能会让你得到晋升，因为你足够狡猾地摆脱了低地位的工作。在我一起工作的某位员工的案例中，他说同意值班“不明智”（他的话）。他在工程部门时拒绝值班。逃避责任随后导致了晋升。当领导展示低于平均水平的承诺和诚信时，要求非凡贡献是具有挑战性的。
- en: 'Another example of a lack of external support is when one department drops
    the hard tasks on another. They commonly say, “This is DevOps; this isn’t my job.”
    I have seen sales engineering teams set up many environments: a data center environment,
    a Rackspace environment, AWS environment. They continuously paged the people on
    call, even though they hadn’t set these environments up. When the sales engineer
    confronts this problem, he mentions he is in sales, and this “wasn’t his job.”
    Engineering didn’t have access to the machines he had set up. They were misconfigured
    and paging people. The clear message here is “don’t be a sucker” and get stuck
    on call. The “smart” people shirk this responsibility and delegate it to the lower
    status “suckers.”'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个缺乏外部支持的例子是，当一个部门将艰难的任务转嫁给另一个部门时。他们常说，“这是DevOps的事情，不是我的工作。” 我见过销售工程团队设置了许多环境：数据中心环境、Rackspace环境、AWS环境。他们不断地呼叫值班人员，尽管他们并没有设置这些环境。当销售工程师面对这个问题时，他提到自己是销售部门的，这“不是他的工作”。工程部门无法访问他设置的机器。这些机器配置错误，并不断呼叫人员。这里传达的明确信息是“不要当冤大头”，把值班的工作推卸给地位较低的“冤大头们”。
- en: Yet another example of a lack of external support is when I was working at a
    company where customer data was deleted accidentally. A sales engineer initially
    misconfigured the machine without enough storage to support the customer’s desired
    retention period. The responsibility, though, of continually cleaning up the data
    was in the hands of DevOps, the “suckers.”
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个缺乏外部支持的例子是，我曾在一家公司工作，在那里客户数据被意外删除了。一名销售工程师最初错误地配置了机器，存储空间不足以支持客户期望的保留期。然而，持续清理数据的责任却落在了
    DevOps 的手中，成了“替罪羊”。
- en: The maintenance of the machine required running dangerous Unix commands multiple
    times a day, and often in the middle of the night. Unsurprisingly, one member
    of the DevOps team mistyped one of the commands and deleted the customer data.
    The sales engineer got angry and refused to let the customer know; instead, he
    attempted to force the DevOps engineer to call the customer and perform a “mea
    culpa.” It is problematic that companies have weak external support, and management
    has allowed individuals to behave in a way that is not supportive. This behavior
    sends a clear message that the administration will not tackle the “tough” problems
    like addressing immature or unprincipled behavior and instead will shift it to
    DevOps.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 机器的维护需要每天多次运行危险的 Unix 命令，而且通常是在深夜。毫不奇怪，DevOps 团队的一名成员误输入了其中一个命令，导致客户数据被删除。销售工程师生气了，拒绝让客户知道；相反，他试图强迫
    DevOps 工程师致电客户并进行“自我承认”。公司外部支持薄弱，管理层允许个人行为不支持的情况是有问题的。这种行为清楚地传达了管理层不会解决“棘手”问题的信息，比如解决不成熟或不道德的行为，而是将其转嫁给
    DevOps。
- en: Principled leadership
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原则领导力
- en: There have been some great examples of principled leadership at companies I
    have worked at, as well as some unfortunate cases. Larson and LaFasto mention
    that a transformative leader, “establishes trust through positioning—assuring
    that the leader’s behavior exemplifies the ideals and course of the vision.” A
    CTO, for example, was on call for months during a crisis to show solidarity with
    everyone. This situation is an example of not asking someone to do something you
    wouldn’t do yourself. Responsibility occurs when it is a personal sacrifice and
    inconvenient.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在我工作过的公司里，也有一些展现原则领导力的极好例子，也有一些不幸的情况。Larson 和 LaFasto 提到，一位转型领导者通过定位来建立信任——确保领导者的行为体现了愿景的理想和方向。例如，某位首席技术官在危机期间连续几个月值班，以示与所有人的团结。这种情况是不要求别人做自己不愿意做的事情的一个例子。当个人付出了个人牺牲并且不方便时，责任感就会产生。
- en: Another excellent example of principled leadership was with a product manager
    and the front-end team. She “required” that the front-end team use the ticket
    system and led by example, actively working with the queue and culling it. As
    a result, UX engineers learn this skill and how important it was for planning.
    She could have just said, “use the system,” but instead used it herself. This
    situation has led to a real success that can be measured quantitatively. The ticket
    turnover rate, which the product manager closely monitored, improved.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个展现原则领导力的优秀例子是与产品经理和前端团队的合作。她“要求”前端团队使用工单系统，并以身作则，积极与队列合作并处理其中的问题。结果，用户体验工程师学会了这项技能，以及规划中的重要性。她本可以只是说：“使用系统”，但她选择亲自使用。这种情况导致了一个可以量化衡量的真正成功。产品经理密切监控的工单周转率有所改善。
- en: On the other hand, some of the practices that startup CEOs promoted were unprincipled.
    Some would frequently send emails out about people needing to “work late,” then
    go home at 4 P.M. Teams pick up on this behavior, and some of these repercussions
    remain forever. Another way to phrase this would be to call this “inauthentic
    leadership.”
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，一些初创公司的 CEO 提倡的做法是不道德的。有些人经常发送电子邮件，称需要“加班加点”，然后在下午 4 点就回家了。团队会注意到这种行为，其中一些后果将永远留下。另一种表述方式是称这种行为为“不真实的领导力”。
- en: I have seen situations where a DevOps team was harassed and it was quite damaging.
    This harassment was created by saying the team didn’t work hard, or was incompetent.
    This can be particularly damaging if it comes from someone who often leaves early
    and refuses to do challenging engineering tasks. Harassment is terrible enough,
    but when it comes from a legitimate slacker who is allowed to terrorize people,
    it becomes insufferable.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾见过一些情况，其中DevOps团队受到了骚扰，这对他们非常有害。这种骚扰是通过说这个团队工作不努力或者无能来制造的。如果这种言论来自于一个经常早退并且拒绝做具有挑战性工程任务的人，那么情况就变得更加难以忍受。骚扰本身已经够糟糕了，但如果这种骚扰来自于一个合法的懒汉，而且他们被允许恐吓人们，那就更加难以忍受。
- en: 'Larson and LaFasto also mention that any team that rated itself as low performing
    in these three categories didn’t last long::'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 拉森和拉法斯托还提到，任何自认为在这三个类别中表现低劣的团队最终都不会长久存在：
- en: Clear, elevating goal
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确而高远的目标
- en: Competent team members
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有能力的团队成员
- en: Standards of excellence
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卓越的标准
- en: Interviews
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 面试
- en: Glenn Solomon
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Glenn Solomon
- en: '*What are some brief pieces of wisdom you can offer to Python and DevOps folks?*'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '*你能给Python和DevOps从业者提供一些简短的智慧吗？*'
- en: All companies will become software companies. There will be four or five companies
    that will be fundamental in this growth. DevOps is a critical aspect of this evolution.
    The velocity of change is important. New and different jobs will be created.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 所有公司都将成为软件公司。在这种增长中，将会有四到五家公司起到基础性作用。DevOps是这种演进的关键方面。变化的速度很重要。将会创造出新的不同的工作。
- en: '*Personal website*'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '*个人网站*'
- en: '[*https://goinglongblog.com*](https://goinglongblog.com)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://goinglongblog.com*](https://goinglongblog.com)'
- en: '*Company website*'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '*公司网站*'
- en: '[*https://www.ggvc.com*](https://www.ggvc.com)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://www.ggvc.com*](https://www.ggvc.com)'
- en: '*Public contact information*'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '*公共联系信息*'
- en: '[*https://www.linkedin.com/in/glennsolomon*](https://www.linkedin.com/in/glennsolomon)'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://www.linkedin.com/in/glennsolomon*](https://www.linkedin.com/in/glennsolomon)'
- en: Andrew Nguyen
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Andrew Nguyen
- en: '*Where do you work and what do you do there?*'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '*你在哪里工作，以及你在那里做什么工作？*'
- en: I am the Program Director of Health Informatics and the Chair of the Department
    of Health Professions at the University of San Francisco. My research interests
    involve the application of machine/deep learning to healthcare data with a specific
    focus on unstructured data. This includes text using NLP as well as sensor data
    using signal processing and analysis, both of which highly benefit from advances
    in deep learning. I am also the founder and CTO of qlaro, Inc., a digital health
    startup focused on using machine learning and NLP to empower cancer patients from
    diagnosis through survival. We help patients prioritize what they need to do next
    and how best to ask questions of their physicians and care team.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我是旧金山大学健康信息学项目主任和健康专业系主任。我的研究兴趣包括将机器/深度学习应用于医疗数据，特别关注非结构化数据。这包括使用自然语言处理处理文本以及使用信号处理和分析处理传感器数据，这两者都极大地受益于深度学习的进展。我还是qlaro,
    Inc.的创始人兼首席技术官，这是一家专注于利用机器学习和自然语言处理来帮助癌症患者从诊断到存活的数字健康创业公司。我们帮助患者优先考虑下一步需要做什么以及如何最好地向他们的医生和护理团队提问。
- en: '*What is your favorite cloud and why?*'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢的云是什么，为什么？*'
- en: While I started exploring cloud services (primarily from the perspective of
    IaaS) using AWS, I’d most recently been using GCP for my work. I made the switch
    early on purely due to the cost saving when deploying a HIPAA-compliant solution.
    Since then, I’ve been using GCP out of convenience since it’s what I have the
    most experience with. However, where possible, I do my work using platform-agnostic
    tools to minimize impact, should I need to make the change.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我最初是从AWS的基础设施即服务的角度探索云服务的，但最近我主要在我的工作中使用GCP。我早期的转换纯粹是因为在部署符合HIPAA法规的解决方案时节省了成本。从那时起，我一直在使用GCP，因为这是我最有经验的平台。然而，尽可能地，我会使用平台无关的工具来减少影响，以防需要进行更改。
- en: From a machine learning perspective, I’m much more agnostic and happy to use
    either AWS or GCP, depending on the particulars of the machine learning project.
    That said, for my next project (which will involve collecting, storing, and processing
    a significant amount of data), I am planning on using GCP given the ease of developing
    and running Apache Beam jobs on various runners, including Google Dataflow.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 从机器学习的角度来看，我更加中立，愿意根据具体的机器学习项目使用AWS或者GCP。话虽如此，对于我接下来的项目（将涉及收集、存储和处理大量数据），我打算使用GCP，因为在各种执行器上（包括Google
    Dataflow）开发和运行Apache Beam作业非常方便。
- en: '*When did you start using Python?*'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '*你是什么时候开始使用Python的？*'
- en: I started using Python about 15 years ago as a web development language when
    Django was first released. Since then, I’ve used it as a general-purpose programming/scripting
    language as well as a data science language.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我大约15年前开始使用Python作为Web开发语言，当时Django刚刚发布。自那时起，我把它用作通用编程/脚本语言，也用作数据科学语言。
- en: '*What is your favorite thing about Python?*'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢Python的哪一点？*'
- en: My favorite thing is that it’s a ubiquitous, interpretable, object-oriented
    language. It runs on pretty much any system and provides the power of OOP with
    the simplicity of an interpreted scripting language.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢的是它是一种无处不在的、可解释的、面向对象的语言。它几乎可以在任何系统上运行，并提供面向对象编程的强大性能，同时保持解释脚本语言的简洁性。
- en: '*What is your least favorite thing about Python?*'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最不喜欢Python的哪一点？*'
- en: Whitespace. I understand the reasoning behind using whitespace the way Python
    does. However, it gets annoying when trying to determine the scope of a function
    that spans more than the screen can display.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 空白符。我理解Python使用空白符的理由。然而，当试图确定一个函数的作用域跨越屏幕无法显示的范围时，这种方式变得很烦人。
- en: '*What is the software industry going to look like in 10 years?*'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '*10年后软件行业会是什么样子？*'
- en: I think we will see more and more people doing “software development” without
    writing as much code. Similar to how Word and Google Docs make it easy for anyone
    to format a document without manual word processing, I think folks will be able
    to write small functions or use GUIs to take care of simple business logic. In
    some sense, as tools like AWS Lambda and Google Cloud Functions become the norm,
    we’ll see an increasing amount of turnkey functions that don’t require formal
    computer science training to use effectively.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为我们会看到越来越多的人在不写太多代码的情况下进行“软件开发”。类似于Word和Google Docs如何使任何人能够轻松格式化文档而无需手动文字处理，我认为人们将能够编写小函数或使用GUI处理简单的业务逻辑。在某种意义上，随着AWS
    Lambda和Google Cloud Functions等工具成为常态，我们将看到越来越多的即插即用的函数，无需正式的计算机科学培训即可有效使用。
- en: '*What technology would you short?*'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会短什么技术？*'
- en: I would short MLaaS (machine learning as a service) companies—that is, companies
    that focus purely on machine learning algorithms. Just as we don’t see companies
    that provide word processing services, tools and platforms such as AutoML or SageMaker
    will make it easy enough for most companies to bring the ML capability in-house.
    While we can’t solve all ML problems using such tools, we can probably solve 80
    to 90% of them. So, there will still be companies creating new ML approaches or
    providing ML as a service, but we’ll see immense consolidation around major cloud
    providers (versus the endless stream of companies “doing machine learning” that
    we see today).
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为机器学习即服务（MLaaS）公司会被短期化——也就是说，那些专注于机器学习算法的公司。正如我们不会看到提供文字处理服务的公司一样，自动ML工具或平台如AutoML或SageMaker将使大多数公司能够轻松地将ML能力内部化。虽然我们不能使用这些工具解决所有ML问题，但我们可能能解决80到90%的问题。因此，仍然会有公司创建新的ML方法或提供ML作为服务，但我们将看到围绕主要云提供商的巨大整合（而不是今天看到的无数“做机器学习”的公司）。
- en: '*What is the most important skill you would recommend someone interested in
    Python DevOps learn?*'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐对Python DevOps感兴趣的人学习什么最重要的技能？*'
- en: Learn the concepts, not just the tools and tooling. New paradigms will come
    and go; but for every paradigm, we’ll see dozens of competing tools and libraries.
    If you’re only learning the specific tool or library, you’ll quickly fall behind
    as a new paradigm starts to materialize and take over.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 学习概念，而不仅仅是工具和工具链。新的范式会来去，但对于每一个范式，我们会看到数十种竞争的工具和库。如果你只学习特定的工具或库，当新的范式开始显现并接管时，你很快就会落后。
- en: '*What is the most important skill you would recommend someone learn?*'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐别人学习什么最重要的技能？*'
- en: Learn how to learn. Figure out how you learn and how you can learn quickly.
    As with Moore’s Law, where we saw the doubling of processor speeds with each generation,
    we are seeing accelerating growth of DevOps tools. Some build on existing approaches,
    while others attempt to supplant them. In any case, you’ll need to know how you
    learn so that you can quickly and efficiently learn about the ever-increasing
    number of tools out there—and then quickly decide if it’s worth pursuing.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 学会如何学习。弄清楚你如何学习以及如何快速学习。与摩尔定律类似，我们看到每一代处理器速度翻倍，我们正在看到DevOps工具的加速增长。有些构建在现有方法的基础上，而其他人试图取而代之。无论如何，你需要知道如何学习，以便快速有效地了解越来越多的工具，然后迅速决定是否值得追求。
- en: '*Tell the readers something cool about you.*'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '*告诉读者一些关于你的酷事情*。'
- en: I enjoy hiking, backpacking, and generally being outside. In my free time, I
    also volunteer with the search and rescue team of my local Sheriff’s Office, usually
    searching for missing people in the woods, but also during disasters such as the
    Camp Fire that hit Paradise, California.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢徒步旅行，背包旅行，总之喜欢待在户外。空闲时间里，我也在当地警长办公室的搜救队做志愿者，通常在森林中寻找失踪的人，也会在像加利福尼亚天堂镇的“野火”等灾难期间参与搜救工作。
- en: Gabriella Roman
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Gabriella Roman
- en: '*What is your name and current profession?*'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '*你叫什么名字，目前从事什么职业？*'
- en: Hello! My name is Gabriella Roman, and I’m currently an undergraduate student
    studying computer science at Boston University.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 你好！我的名字是Gabriella Roman，我目前是波士顿大学的计算机科学本科生。
- en: '*Where do you work and what do you do there?*'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '*你在哪里工作，以及你在那里做什么？*'
- en: I’m an intern at Red Hat, Inc., where I work on the Ceph team. I mainly work
    with ceph-medic, a python tool that performs checks against Ceph clusters, either
    by fixing bugs in old checks or resolving issues with new checks. I also work
    with the DocUBetter team to update Ceph’s documentation.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 我是红帽公司的实习生，主要在Ceph团队工作。我主要与ceph-medic这个Python工具合作，用于对Ceph集群进行检查，无论是修复旧检查中的错误还是解决新检查中的问题。我还与DocUBetter团队合作更新Ceph的文档。
- en: '*What is your favorite cloud and why?*'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢的云是什么，为什么？*'
- en: Though I’ve only ever really used Google Cloud Storage, I can’t really make
    a point as to why it’s my favorite. I just happened to try it out and without
    much reason to dislike it, I have stayed loyal to it for the past 10 years. I
    do like its simple interface, and as someone who does not like to keep much digital
    clutter, the 15-GB limit does not bother me.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我只用过Google Cloud Storage，但我实在找不出它成为我最喜欢的理由。我只是碰巧试用了它，而且没有理由讨厌它，所以过去10年来我一直忠于它。我喜欢它简洁的界面，作为一个不喜欢保留太多数字杂乱的人，它的15GB限制并不困扰我。
- en: '*When did you start using Python?*'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '*你是什么时候开始使用Python的？*'
- en: I first learned Python in an introductory computer science course I took in
    the second half of my sophomore year.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 我第一次学习Python是在大二下学期的一门计算机科学导论课上。
- en: '*What is your favorite thing about Python?*'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢Python的什么地方？*'
- en: Its readability. Python’s syntax is among the simplest of the programming languages,
    making it a great choice for beginners.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 它的可读性。Python的语法是所有编程语言中最简单的之一，这使得它成为初学者的绝佳选择。
- en: '*What is your least favorite thing about Python?*'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最不喜欢Python的什么地方？*'
- en: I don’t have enough experience with other programming languages yet for comparison.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 我对其他编程语言的经验还不足以进行比较。
- en: '*What is the software industry going to look like in 10 years?*'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '*软件行业未来10年会是什么样子？*'
- en: It’s nearly impossible to know what the future will hold, especially in a field
    that is constantly changing. All I can say is that I hope the software industry
    continues to evolve in a positive direction, and that software is not used wrongfully.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎不可能预知未来会带来什么，尤其是在这个不断变化的领域。我唯一能说的是，我希望软件行业能继续朝着积极的方向发展，并且软件不被不当使用。
- en: '*What is the most important skill you would recommend to someone interested
    in learning Python?*'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会向有兴趣学习Python的人推荐最重要的技能是什么？*'
- en: Practicing good code style, especially when working with a team, helps avoid
    a lot of unnecessary headache. As a Python newbie myself, I find it especially
    helpful when I read through code that is well organized and has detailed documentation.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循良好的代码风格，特别是在团队协作时，有助于避免很多不必要的头疼。作为一个Python新手，我发现当我阅读整理有序并有详细文档的代码时特别有帮助。
- en: '*What is the most important skill you would recommend someone learn?*'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会向别人推荐学习的最重要的技能是什么？*'
- en: 'This one isn’t exactly a skill, but more of a state of mind: be willing to
    learn new things! We’re constantly learning, even when we least expect it, so
    keep an open mind and allow others to share their knowledge with you!'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这不完全是一种技能，更像是一种心态：要愿意学习新东西！我们一直在学习，即使在最意想不到的时候，所以保持开放的心态，允许他人与你分享知识！
- en: '*Tell the readers something cool about you.*'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '*告诉读者一些关于你的酷事情*。'
- en: I really enjoy playing video games! Some of my favorites are *The Last of Us*,
    *Hollow Knight*, and *League of Legends*.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我非常喜欢玩视频游戏！我最喜欢的一些游戏包括《最后的生还者》、《空洞骑士》和《英雄联盟》。
- en: '*Professional website*'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '*专业网站*'
- en: '[*https://www.linkedin.com/in/gabriellasroman*](https://www.linkedin.com/in/gabriellasroman)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://www.linkedin.com/in/gabriellasroman*](https://www.linkedin.com/in/gabriellasroman)'
- en: Rigoberto Roche
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Rigoberto Roche
- en: '*Where do you work and what do you do there?*'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '*你在哪里工作，以及你在那里做什么？*'
- en: I work at NASA Glenn Research Center as Lead Engineer for the Meachine Learning
    and Smart Algorithms Team. My job is to develop decision-making algorithms to
    controll all aspects of space communication and navigation.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 我在NASA Glenn Research Center担任机器学习和智能算法团队的首席工程师。我的工作是开发决策算法来控制空间通信和导航的所有方面。
- en: '*What is your favorite cloud and why?*'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢的云平台是什么，为什么？*'
- en: Amazon Web Services, because it is the one I have the most experience with due
    to its availability in my work flow.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它在我的工作流程中的可用性，我最熟悉的是Amazon Web Services。
- en: '*When did you start using Python?*'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '*你什么时候开始使用Python？*'
- en: '2014'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '2014'
- en: '*What is your favorite thing about Python?*'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢Python的什么？*'
- en: Easy-to-read code and quick development time.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 易于阅读的代码和快速的开发时间。
- en: '*What is your least favorite thing about Python?*'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最不喜欢Python的什么？*'
- en: Whitespace delineation.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 空白分隔。
- en: '*What is the software industry going to look like in 10 years?*'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '*软件行业未来10年会是什么样子？*'
- en: It is hard to tell. It seems there is a drive to cloud computing and decentralized
    programming that will drive developers to work as independent contractors for
    everything. It’ll be a gig economy, not a large business industry. The biggest
    shift will be the use of automatic coding tools to separate the creative development
    from the syntax learning tasks. This can open the door to more creative professionals
    to develop new things and new systems.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 很难说。似乎有一股推动云计算和分散式编程的潮流，将开发者推向作为一切的独立承包商。这将成为一个零工经济，而不是一个大型商业产业。最大的转变将是使用自动编码工具来分离创造性开发与语法学习任务。这可以为更多的创意专业人士开发新事物和新系统打开大门。
- en: '*What technology would you short?*'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会短暂什么技术？*'
- en: 'Uber and Lyft. Anything that has manual labor that can be automated by narrow
    AI: driving, warehousing, paralegal work. Problems that can be solved by deep
    learning.'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: Uber和Lyft。任何可以由狭义AI自动化的体力劳动：驾驶、仓储、法律助理工作。可以通过深度学习解决的问题。
- en: '*What is the most important skill you would recommend someone interested in
    Python DevOps learn?*'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会建议对Python DevOps感兴趣的人学习的最重要的技能是什么？*'
- en: The ability to learn quickly, with a benchmark of “Can you be dangerous in one
    month or less?” Another is the ability to understand and build from basic principles
    “like a physicist,” by doing the actual work yourself and understanding more than
    the theory.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 快速学习的能力，标准是“一个月内你能成为危险人物吗？”另一个是理解和从基本原理构建的能力，“像一名物理学家”，通过自己的实际工作理解比理论更多。
- en: '*What is the most important skill you would recommend someone learn?*'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会建议某人学习的最重要的技能是什么？*'
- en: Brain hooks (memory palace), the pomodoro technique, and spaced recall self-testing
    for content absorption.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 脑钩（记忆宫殿）、番茄工作法和间隔回忆自测用于内容吸收。
- en: '*Tell the readers something cool about you.*'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '*告诉读者一些有趣的事情关于你。*'
- en: I love combat training systems like Rickson Gracie’s style JiuJitsu and Mussad
    Krav Maga (not the sport one). My passion in this world is to build a truly thinking
    machine.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢像Rickson Gracie的柔术风格和Mussad Krav Maga（不是运动类的）。我在这个世界上的激情是建立一个真正思考的机器。
- en: '*Personal website*'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '*个人网站*'
- en: Just google my name.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 只需谷歌我的名字。
- en: '*Personal Blog*'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '*个人博客*'
- en: Don’t have one.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 没有一个。
- en: '*Company website*'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '*公司网站*'
- en: '[www.nasa.gov](https://www.nasa.gov)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.nasa.gov](https://www.nasa.gov)'
- en: '*Public contact information*'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '*公开联系信息*'
- en: '[rigo.j.roche@gmail.com](mailto:rigo.j.roche@gmail.com)'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '[rigo.j.roche@gmail.com](mailto:rigo.j.roche@gmail.com)'
- en: Jonathan LaCour
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Jonathan LaCour
- en: '*Where do you work and what do you do there?*'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '*你在哪里工作，做什么工作？*'
- en: I am the CTO for Mission, a cloud consulting and managed service provider focused
    on AWS. At Mission, I direct the creation and definition of our service offerings
    and lead our platform team, which focuses on driving efficiency and quality via
    automation.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 我是Mission的CTO，一家专注于AWS的云咨询和托管服务提供商。在Mission，我负责制定和定义我们的服务提供和领导我们的平台团队，专注于通过自动化推动效率和质量。
- en: '*What is your favorite cloud and why?*'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢的云平台是什么，为什么？*'
- en: I have deep roots in public cloud, both as a consumer and a builder of public
    cloud services. That experience has led me to understand that AWS provides the
    deepest, broadest, and most widespread public cloud available. Because AWS is
    the clear market leader, they also have the largest community of open source tools,
    frameworks, and projects.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 我在公共云领域有深厚的根基，既是公共云服务的消费者，也是构建者。这些经验让我深知AWS提供了最深、最广泛、最广泛的公共云服务。因为AWS是市场的领导者，他们也拥有最大的开源工具、框架和项目社区。
- en: '*When did you start using Python?*'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '*你什么时候开始使用Python？*'
- en: I first started programming in Python in late 1996 around the release of Python
    1.4\. At the time, I was in high school, but was working in my spare time as a
    programmer for an enterprise healthcare company. Python instantly felt like “home,”
    and I have been using Python as my language of choice ever since.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 我在 1996 年底第一次开始使用 Python，当时是在 Python 1.4 发布时。那时候，我还在高中，但在空闲时间里为一家企业医疗保健公司工作作为程序员。Python
    立即让我感到“如鱼得水”，从那时起，我一直把 Python 作为我的首选语言。
- en: '*What is your favorite thing about Python?*'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '*Python 中你最喜欢的是什么？*'
- en: Python is a very low-friction language that happily fades into the background,
    allowing the developer to focus on solving problems rather than fighting with
    unnecessary complexity. Python is just so much fun to use as a result!
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一种非常低摩擦的语言，愉快地淡化到背景中，使开发者能够专注于解决问题，而不是与不必要的复杂性作斗争。正因为如此，使用 Python 简直太有趣了！
- en: '*What is your least favorite thing about Python?*'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '*Python 中你最不喜欢的是什么？*'
- en: Python applications can be more difficult to deploy and distribute than I’d
    like. With languages like Go, applications can be built into portable binaries
    that are easy to distribute, whereas Python programs require significantly more
    effort.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: Python 应用程序的部署和分发比我想象中更困难。像 Go 这样的语言可以构建成便于分发的便携式二进制文件，而 Python 程序则需要更多的努力。
- en: '*What is the software industry going to look like in 10 years?*'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '*十年后的软件行业会是什么样子？*'
- en: The last 10 years have been about the rise of public cloud services, with a
    focus on infrastructure as code, and infrastructure automation. I believe that
    the next 10 years will be about the rise of serverless architectures and managed
    services. Applications will no longer be built around the concept of “servers,”
    and will instead be built around services and functions. Many will transition
    off of servers into container orchestration platforms like Kubernetes, while others
    will make the leap directly to serverless.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 过去的十年见证了公共云服务的兴起，专注于基础设施即代码和基础设施自动化。我相信接下来的十年将会见证无服务器架构和托管服务的兴起。应用程序将不再围绕“服务器”的概念构建，而是围绕服务和函数构建。许多人将从服务器转向容器编排平台，如
    Kubernetes，而其他人将直接跨越到无服务器。
- en: '*What technology would you short?*'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐对技术感兴趣的人做什么？*'
- en: Blockchain. While an interesting technology, the overreach of its applicability
    is astounding, and the space is filled with hucksters and snake oil salesmen peddling
    blockchain as the solution to all problems.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 区块链。虽然是一种有趣的技术，但其适用性的过度扩展令人震惊，该领域充斥着忽悠者和兜售区块链作为解决所有问题的解决方案的推销员。
- en: '*What is the most important skill you would recommend someone interested in
    Python DevOps learn?*'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐对 Python DevOps 感兴趣的人学习哪些最重要的技能？*'
- en: Since I first started using Python in 1996, I’ve found that the most important
    driver for learning has been curiosity and the drive to automate. Python is an
    incredible tool for automation, and a curious mind can constantly find new ways
    to automate everything from our business systems to our homes. I’d encourage anyone
    getting started with Python to look for opportunities to “scratch your own itches”
    by solving real problems with Python.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 自从 1996 年开始使用 Python 以来，我发现学习的最重要动力是好奇心和自动化的驱动力。Python 是一种极好的自动化工具，一个好奇的头脑可以不断找到新的方法来自动化从我们的业务系统到我们的家庭的一切。我鼓励任何刚开始学习
    Python 的人寻找机会通过用 Python 解决真正的问题来“解决你自己的问题”。
- en: '*What is the most important skill you would recommend someone learn?*'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐有兴趣学习的人学习哪些最重要的技能？*'
- en: Empathy. Too often, technologists embrace technology without considering the
    impact on humanity and on each other. Empathy is a personal core value for me,
    and it helps me to be a better technologist, manager, leader, and human.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 同理心。技术人员往往会在不考虑其对人类和彼此影响的情况下接受技术。同理心对我来说是一种核心价值观，它帮助我成为更好的技术人员、经理、领导和人类。
- en: '*Tell the readers something cool about yourself.*'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '*向读者介绍一些关于你自己的酷炫事情。*'
- en: I have spent the last three years resurrecting my personal website, pulling
    in content from as far back as 2002\. Now, my website is my personal archive of
    memories, photos, writing, and more.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的三年里，我一直在重建我的个人网站，汇集了从 2002 年以来的内容。现在，我的网站成为了我个人的记忆、照片、文章等的档案馆。
- en: '*Personal website*'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '*个人网站*'
- en: '[*https://cleverdevil.io*](https://cleverdevil.io)'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://cleverdevil.io*](https://cleverdevil.io)'
- en: '*Personal blog*'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '*个人博客*'
- en: '[*https://cleverdevil.io*](https://cleverdevil.io)'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://cleverdevil.io*](https://cleverdevil.io)'
- en: '*Company website*'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '*公司网站*'
- en: '[*https://www.missioncloud.com*](https://www.missioncloud.com)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://www.missioncloud.com*](https://www.missioncloud.com)'
- en: '*Public contact information*'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '*公开联系信息*'
- en: '[*https://cleverdevil.io*](https://cleverdevil.io)'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://cleverdevil.io*](https://cleverdevil.io)'
- en: Ville Tuulos
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ville Tuulos
- en: '*Where do you work and what do you do there?*'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '*你在哪里工作，做什么工作？*'
- en: I work at Netflix where I lead our machine learning infrastructure team. Our
    job is to provide a platform for data scientists that allows them to prototype
    end-to-end ML workflows quickly and deploy them to production confidently.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 我在 Netflix 工作，负责领导我们的机器学习基础设施团队。我们的工作是为数据科学家提供一个平台，使他们能够快速原型化端到端的机器学习工作流，并有信心将其部署到生产环境中。
- en: '*What is your favorite cloud and why?*'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢的云是什么，为什么?*'
- en: I am a shameless fan of AWS. I have been using AWS since the EC2 beta in 2006\.
    AWS continues to impress me both technically and as a business. Their core pieces
    of infrastructure, like S3, scale and perform extremely well, and they are very
    robust. From a business point of view they have done two things right. They have
    embraced open source technologies, which has made adoption easier in many cases,
    and they are very sensitive to customer feedback.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 我是 AWS 的铁杆粉丝。我从 2006 年 EC2 beta 版本开始使用 AWS。AWS 技术上和商业上仍然给我留下深刻印象。他们的核心基础设施，如
    S3，具有极好的扩展性和性能，并且非常稳定。从商业角度来看，他们做对了两件事情。他们拥抱开源技术，在许多情况下使采纳变得更容易，并且他们非常重视客户的反馈。
- en: '*When did you start using Python?*'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '*你什么时候开始使用 Python?*'
- en: I started using Python around 2001\. I remember being very excited about the
    release of generators and generator expressions soon after I had started using
    Python.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 我大约在 2001 年开始使用 Python。我记得当时我刚开始使用 Python 不久，就对生成器和生成器表达式的发布感到非常兴奋。
- en: '*What is your favorite thing about Python?*'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '*你对 Python 最喜欢的是什么?*'
- en: I am fascinated by programming languages in general. Not only technically, but
    also as a medium of human communication and as a culture. Python is an extremely
    well-balanced language. In many ways it is a simple and easily approachable language,
    but at the same time expressive enough to handle even complex applications. It
    is not a high-performance language, but in most cases it is performant enough,
    especially when it comes to I/O. Many other languages are better optimized for
    particular use cases, but only a few are as well-rounded as Python.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 我对编程语言非常着迷。不仅在技术上，而且作为人类沟通的媒介和文化。Python 是一种非常平衡的语言。在许多方面，它是一种简单且易于上手的语言，但同时又足够表达复杂的应用程序。它并不是高性能语言，但在大多数情况下性能足够好，特别是在涉及
    I/O 时。许多其他语言更适合特定的使用场景优化，但只有少数语言像 Python 一样全面。
- en: Also, the CPython implementation is a straightforward piece of C code and much
    simpler than JVM, V8, or the Go runtime, which makes it easy to debug and extend
    when needed.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，CPython 实现是一段简单直接的 C 代码，比起 JVM、V8 或 Go 运行时要简单得多，这使得在需要时易于调试和扩展。
- en: '*What is your least favorite thing about Python?*'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '*你对 Python 最不喜欢的是什么?*'
- en: The other side of being a well-rounded generalist language is that Python is
    not an optimal language for any particular use case. I miss C when I work on anything
    performance-critical. I miss Erlang when I am building anything requiring concurrency.
    And when hacking algorithms, I miss the type inference of OCaml. Paradoxically,
    when using any of these languages, I miss the generality, pragmatism, and the
    community of Python.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: Python 作为一个全面的通用语言的另一面是，它并不是任何特定用例的最佳语言。在处理任何性能关键的工作时，我会想念 C 语言。在构建需要并发性的任何项目时，我会想念
    Erlang。在进行算法编程时，我会想念 OCaml 的类型推断。讽刺的是，当使用这些语言中的任何一种时，我会想念 Python 的通用性、务实性和社区。
- en: '*What is the software industry going to look like in 10 years?*'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '*软件行业 10 年后会是什么样子?*'
- en: The trend is clear if you look at the past 50 years of computing. Software is
    eating the world and the software industry keeps moving upward in the tech stack.
    Relatively speaking, we have fewer people focusing on hardware, operating systems,
    and low-level coding than ever before. Correspondingly, we have an increasing
    number of people writing software who don’t have much experience or knowledge
    of the lower levels of the stack, which is OK. I think this trend has massively
    contributed to the success of Python this far. I predict that we will see more
    and more human-centered solutions like Python in the future, so we can empower
    an ever-increasing group of people to build software.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看过过去50年的计算机发展，趋势是显而易见的。软件正在改变世界，软件行业在技术栈中不断向上移动。相对而言，我们关注硬件、操作系统和低级编程的人越来越少。相应地，我们有越来越多的写软件的人缺乏底层技术栈的经验或知识，这是可以接受的。我认为这一趋势在很大程度上促成了Python的成功至今。我预计我们将看到越来越多像Python这样以人为本的解决方案，这样我们就能赋予越来越多的人构建软件的能力。
- en: '*What technology would you short?*'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会缩短哪种技术？*'
- en: I tend to short technologies that assume that technical factors trump human
    factors. The history is littered with technologies that were technically brilliant
    but failed to appreciate the actual needs of their users. Taking this stance is
    not always easy, since it is a natural engineering instinct to feel that technically
    elegant solutions should deserve to win.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 我倾向于对那些认为技术因素胜过人文因素的技术进行缩短。历史上有许多技术在技术上很出色，但未能体察到用户实际需求。采取这种立场并不总是容易的，因为工程师的本能是认为技术上优雅的解决方案应该胜出。
- en: '*What is the most important skill you would recommend someone interested in
    Python DevOps learn?*'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '*您会推荐有兴趣学习Python DevOps的人学习哪个最重要的技能？*'
- en: 'I would recommend anyone serious about Python, DevOps in particular, to learn
    a bit about functional programming. Nothing hardcore, just the mindset around
    idempotency, function composition, and the benefits of immutability. I think the
    functional mindset is very useful for large-scale DevOps: how to think about immutable
    infrastructure, packaging, etc.'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议任何严肃对待Python的人，特别是DevOps领域的人，了解一些关于函数式编程的知识。没有什么非常深入的内容，只是关于幂等性、函数组合以及不可变性的思维方式。我认为函数式思维对于大规模DevOps非常有用：如何考虑不可变基础设施、打包等等。
- en: '*What is the most important skill you would recommend someone learn?*'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '*您会推荐有兴趣学习的人学习哪个最重要的技能？*'
- en: Learning to identify what problems are worth solving is critical. So many times
    I have observed software projects where an almost infinite amount of resources
    has been put into solving problems that ultimately don’t matter. I have found
    Python to be a good way to hone this skill, since it allows you to quickly prototype
    fully functional solutions that can help you see what is relevant.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 学会识别哪些问题值得解决是至关重要的。我经常观察到有些软件项目几乎投入了无限的资源来解决最终并不重要的问题。我发现Python是一个很好的工具来磨练这种技能，因为它可以让您快速原型化完全功能的解决方案，帮助您看清什么是相关的。
- en: '*Tell the readers something cool about you.*'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '*向读者介绍一些有趣的事情。*'
- en: With a friend of mine, I hacked an urban game that was played in NYC. Players
    took photos with their phones that were projected on a giant billboard in the
    Times Square in real time. A nerdy cool thing about this is that the whole game,
    including the client running on the phones, was written in Python. What’s even
    cooler is that the game took place in 2006, in the Jurassic era of smartphones,
    predating the iPhone.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 我和一个朋友一起破解了一个在纽约市进行的城市游戏。玩家用手机拍摄的照片实时投射到时代广场的巨大广告牌上。关于这个游戏的一个酷炫的事情是，整个游戏，包括手机上运行的客户端，都是用Python编写的。更酷的是，这个游戏是在2006年举行的，在智能手机的侏罗纪时代，早于iPhone。
- en: '*Personal website*'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '*个人网站*'
- en: '[*https://www.linkedin.com/in/villetuulos*](https://www.linkedin.com/in/villetuulos)'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://www.linkedin.com/in/villetuulos*](https://www.linkedin.com/in/villetuulos)'
- en: '*Company website*'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '*公司网站*'
- en: '[*https://research.netflix.com*](https://research.netflix.com)'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://research.netflix.com*](https://research.netflix.com)'
- en: '*Public contact information*'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '*公共联系信息*'
- en: '@vtuulos on Twitter'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '@vtuulos 在 Twitter 上'
- en: Joseph Reis
  id: totrans-287
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 约瑟夫·赖斯
- en: '*Where do you work and what do you do there?*'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '*您在哪里工作以及您在那里做什么？*'
- en: I’m the cofounder of Ternary Data. Mostly I work in sales, marketing, and product
    development.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 我是 Ternary Data 的联合创始人。我主要从事销售、市场营销和产品开发。
- en: '*What is your favorite cloud and why?*'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '*您最喜欢的云平台是什么？为什么？*'
- en: It’s a toss up between AWS and Google Cloud. I find AWS better for apps, but
    Google Cloud superior for data and ML/AI.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在AWS和Google Cloud之间取舍很难。我发现AWS更适合应用程序，但Google Cloud在数据和ML/AI方面更为优越。
- en: '*When did you start using Python?*'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '*你何时开始使用Python？*'
- en: '2009'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 2009年
- en: '*What is your favorite thing about Python?*'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢Python的什么？*'
- en: There’s (usually) one way to do things, so that cuts down on the mental overhead
    needed to figure out the best solution to the problem at hand. Just do it the
    Python way and move on.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 通常只有一种方法可以解决问题，因此在减少解决问题最佳解决方案所需的心理负担方面有所帮助。按照Python的方式去做，然后继续前进。
- en: '*What is your least favorite thing about Python?*'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最不喜欢Python的什么？*'
- en: The GIL is my least favorite thing. Though thankfully, the world seems to be
    moving toward a resolution of the GIL.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: GIL是我最不喜欢的东西。不过幸运的是，世界似乎正在朝着解决GIL的方向发展。
- en: '*What is the software industry going to look like in 10 years?*'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '*10年后，软件行业会是什么样子？*'
- en: Probably much like it does now, though with faster iteration cycles of best
    practices and new tools. What’s old is new again, and what’s new is old. The thing
    that doesn’t change is people.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 可能很像现在这样，尽管采用了更快的迭代周期、最佳实践和新工具。新的就是旧的，旧的就是新的。不变的是人。
- en: '*What technology would you short?*'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会卖空哪种技术？*'
- en: I’d short AI in the short term, but very long AI over the coming decades. A
    lot of hype around AI poses a risk of some broken hearts in the short term.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 我会短期做空AI，但在未来几十年内会非常看好AI。围绕AI的大量炒作可能会导致短期内一些人心碎。
- en: '*What is the most important skill you would recommend someone interested in
    Python DevOps learn?*'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐对Python DevOps感兴趣的人学习什么技能？*'
- en: Automate EVERYTHING possible. Python is an awesome language for simplifying
    your life, and your company’s processes. Definitely take advantage of this great
    power.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 尽可能自动化一切。Python是一个极好的语言，可以简化你的生活和公司的流程。一定要充分利用这种强大的力量。
- en: '*What is the most important skill you would recommend someone learn?*'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐别人学习什么最重要的技能？*'
- en: Learn to have a growth mindset. Being flexible, adaptable, and able to learn
    new things will keep you relevant for a very long time. With the hyper-fast changes
    in tech—and the world in general—there will be endless opportunities to learn…mostly
    because you’ll have to :).
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 学会保持成长的心态。灵活、适应性强和能够学习新事物将使您在很长一段时间内保持相关性。随着技术和世界的超快变化，学习的机会将是无穷无尽的...主要是因为你必须要学习
    :).
- en: '*Tell the readers something cool about you.*'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '*告诉读者关于你的一些酷炫事情。*'
- en: I’m a former rock climbing bum, club DJ, and adventurer. Now I’m a rock climber
    with a job, I still DJ, and I go on as many adventures as possible. So, not much
    has changed, but the itch to explore and do dangerous things still continues.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾经是一个攀岩狂人、俱乐部DJ和冒险家。现在虽然我有了一份攀岩工作，依然当DJ，并尽可能多地冒险。所以，没有太多改变，但探索和做危险的事情的冲动仍在持续。
- en: '*Personal website and blog*'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '*个人网站和博客*'
- en: '[*https://josephreis.com*](https://josephreis.com)'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://josephreis.com*](https://josephreis.com)'
- en: '*Company website*'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '*公司网站*'
- en: '[*https://ternarydata.com*](https://ternarydata.com)'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://ternarydata.com*](https://ternarydata.com)'
- en: '*Public contact information*'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '*公共联系信息*'
- en: '[josephreis@gmail.com](mailto:josephreis@gmail.com)'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '[josephreis@gmail.com](mailto:josephreis@gmail.com)'
- en: Teijo Holzer
  id: totrans-314
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Teijo Holzer
- en: '*Where do you work and what do you do there?*'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '*你在哪里工作，你在那里做什么？*'
- en: I have been working as a Senior Software Engineer at Weta Digital, New Zealand,
    for 12 years. My responsibilities include software development (mainly Python
    and C++), but I also occasionally perform System Engineering and DevOps tasks.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 我在新西兰Weta Digital担任高级软件工程师已有12年。我的职责包括软件开发（主要是Python和C ++），但偶尔也会执行系统工程和DevOps任务。
- en: '*What is your favorite cloud and why?*'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢的云是什么，为什么？*'
- en: It has to be AWS.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 一定是AWS。
- en: One of the main features they offer is the support for continous integration
    and delivery. In software engineering, you want to automate as many mundane tasks
    as possible so you can concentrate on the fun parts of innovative software development.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 他们提供的主要特性之一是支持持续集成和交付。在软件工程中，您希望自动化尽可能多的单调任务，这样您就可以集中精力进行创新软件开发中有趣的部分。
- en: Things that you usually don’t want to think about are code builds, running existing
    automated tests, releasing and deploying new versions, restarting services, etc.
    So you want to rely on tools like Ansible, Puppet, Jenkins, etc., to perform these
    tasks automatically at certain defined points (e.g., when you merge a new feature
    branch into master).
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 通常你不想考虑的事情是代码构建、运行现有的自动化测试、发布和部署新版本、重新启动服务等。因此，你希望依赖像Ansible、Puppet、Jenkins等工具，在特定的定义点（例如，当你将新功能分支合并到主分支时）自动执行这些任务。
- en: Another big plus is the amount of available support in online forums like Stack
    Overflow, etc. Being the current market leader in the cloud platform space naturally
    leads to a larger user base asking questions and solving problems.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的优点是在线论坛如Stack Overflow等提供的大量支持。作为云平台领域的当前市场领导者，自然会拥有更大的用户群体提出问题和解决问题。
- en: '*When did you start using Python?*'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '*你是什么时候开始使用 Python 的？*'
- en: I started using Python more than 15 years ago and have more than 12 years of
    professional Python experience.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 我开始使用Python超过15年，并且有超过12年的专业Python经验。
- en: '*What is your favorite thing about Python?*'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '*关于Python，你最喜欢的是什么？*'
- en: That there is no need to reformat your source code, ever. The choice to have
    whitespace carry syntactical/grammatical meaning means that other people’s Python
    code immediately has a very high readability score. I also like the Python license,
    which led to a huge uptake of Python as a scripting language in many third-party
    commercial applications.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 永远不需要重新格式化你的源代码。选择让空白符号具有语法/语法意义意味着其他人的Python代码立即具有非常高的可读性评分。我也喜欢Python许可证，这导致Python作为脚本语言在许多第三方商业应用程序中广泛使用。
- en: '*What is your least favorite thing about Python?*'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '*关于Python，你最不喜欢的是什么？*'
- en: The difficulty of performing highly concurrent tasks in a reliable and effective
    fashion. In Python, efficient and reliable threading and multiprocessing are still
    difficult to achieve in complex environments.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 在复杂环境中执行高度并发任务的困难程度。在Python中，实现高效可靠的线程和多进程仍然是困难的。
- en: '*What is the software industry going to look like in 10 years?*'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '*未来10年软件行业会是什么样子？*'
- en: In my opinion, more emphasis will be placed on being able to integrate and deliver
    customer-centric solutions based on existing infrastructure and tooling within
    an aggressive time frame. There is no need to constantly reinvent the same wheel.
    So system engineering and DevOps skills will become more important in the software
    industry. You need to be able to scale fast if required.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，更加重视在现有基础设施和工具基础上，能够在紧迫时间框架内集成和提供以客户为中心的解决方案。没有必要不断重新发明轮子。因此，在软件行业中，系统工程和DevOps技能将变得更加重要。如果需要的话，你需要能够快速扩展。
- en: '*What technology would you short?*'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会对什么技术感到不安？*'
- en: Any system that has a single point of failure. Building robust systems requires
    you to acknowledge that all systems will eventually fail, so you need to cater
    for that at every level. That starts by not using assert statements in your code,
    and goes all the way up to providing high-availability, multimaster DB servers.
    Building fault-tolerant systems is especially important when there are many users
    relying on your systems 24/7\. Even AWS only offers 99.95% uptime.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 任何有单点故障的系统。构建健壮的系统需要你承认所有系统最终都会失败，因此你需要在每个层次上为此做好准备。首先，不要在你的代码中使用断言语句，然后提供高可用性、多主数据库服务器。当有许多用户全天候依赖你的系统时，构建容错系统尤为重要。即使AWS也只提供99.95%的正常运行时间。
- en: '*What is the most important skill you would recommend someone interested in
    Python DevOps learn?*'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐对Python DevOps感兴趣的人学习的最重要的技术是什么？*'
- en: 'Speedy automation. Every time you find yourself repeating the same tasks over
    and over, or you find yourself again waiting for a long-running task to complete,
    ask yourself: How can I automate and speed up those tasks ? Having a quick turnaround
    time is essential for effective DevOps work.'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 快速的自动化。每当你发现自己一遍又一遍地重复相同的任务，或者你再次发现自己在等待长时间运行的任务完成时，问问自己：我怎么能自动化并加快这些任务？快速的周转时间对于有效的DevOps工作至关重要。
- en: '*What is the most important skill you would recommend someone learn?*'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐别人学习的最重要的技能是什么？*'
- en: Speedy automation, as discussed above.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，快速的自动化。
- en: '*Tell the readers something cool about you.*'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '*告诉读者一些有趣的关于你的事情。*'
- en: I like presenting at Python conferences. Look for my most recent talk about
    Python, Threading and Qt at the Kiwi PyCon X.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢在Python会议上做演讲。请关注我在Kiwi PyCon X关于Python、线程和Qt的最新演讲。
- en: '*Recent talk*:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '*最近的演讲*：'
- en: '[*https://python.nz/kiwipycon.talk.teijoholzer*](https://python.nz/kiwipycon.talk.teijoholzer)'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://python.nz/kiwipycon.talk.teijoholzer*](https://python.nz/kiwipycon.talk.teijoholzer)'
- en: '*Company website*'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '*公司网站*'
- en: '[*http://www.wetafx.co.nz*](http://www.wetafx.co.nz)'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '[*http://www.wetafx.co.nz*](http://www.wetafx.co.nz)'
- en: Matt Harrison
  id: totrans-342
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Matt Harrison
- en: '*Where do you work and what do you do there?*'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '*你在哪里工作？你在那里做什么？*'
- en: I work at a company I created called MetaSnake. It provides corporate training
    and consulting in Python and data science. I spend about half of my time teaching
    engineers how to be productive with Python or how to do data science. The other
    half is consulting and helping companies leverage these technologies.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 我在一家名为MetaSnake的公司工作，这是我创建的公司。它提供Python和数据科学的企业培训和咨询服务。我大约一半的时间用来教工程师如何提高Python的生产力或如何进行数据科学。另一半时间用于咨询和帮助公司利用这些技术。
- en: '*What is your favorite cloud and why?*'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢的云平台是什么？为什么？*'
- en: I’ve used both Google and AWS in the past. They (and others) have excellent
    Python support, which I love. I don’t know that I have a favorite, but I’m glad
    there are multiple clouds, as I believe competition gives us better products.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 我过去使用过Google和AWS。它们（及其他公司）都有出色的Python支持，这点我很喜欢。我不知道我有没有最喜欢的，但我很高兴有多个云平台，因为我相信竞争会带给我们更好的产品。
- en: '*When did you start using Python?*'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '*你何时开始使用Python？*'
- en: I started using Python in 2000, when working at a small startup doing search.
    A colleague and I needed to build a small prototype. I was pushing for using Perl
    and he wanted to use TCL. Python was a compromise, as neither of us wanted to
    use the other’s preferred technology. I believe both of us promptly forgot what
    we were using before and have leveraged Python since.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 我是在2000年开始使用Python的，当时在一家小型初创公司做搜索。我和一个同事需要建立一个小型原型。我倾向于使用Perl，他想使用TCL。Python是一个妥协，因为我们都不想使用对方喜欢的技术。我相信我们当时都迅速忘记了之前使用的是什么，此后我一直在使用Python。
- en: '*What is your favorite thing about Python?*'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢Python的什么？*'
- en: Python fits my brain. It is easy to start from something simple to build an
    MVP and then productionize it. I’m really enjoying using notebook environments
    like Jupyter and Colab. They make data analysis really interactive.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: Python非常适合我。从简单的东西开始构建MVP，然后再将其投入生产。我非常喜欢使用Jupyter和Colab这样的笔记本环境。它们使数据分析变得非常互动。
- en: '*What is your least favorite thing about Python?*'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最不喜欢Python的什么？*'
- en: The built-in docstrings for the classes, such as lists and dictionaries, need
    some cleanup. They are hard for newcomers to understand.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 类的内置文档字符串，如列表和字典，需要进行一些清理。它们对新手来说很难理解。
- en: '*What is the software industry going to look like in 10 years?*'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '*软件行业10年后会是什么样子？*'
- en: I don’t have a crystal ball. For me, the main difference between now and 10
    years ago is leveraging the cloud. Otherwise, I use many of the same tools. I
    expect programming in the next 10 years to be very similar, off-by-one errors
    will still pop up, CSS will still be hard, maybe deployment might be slightly
    easier.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 我没有水晶球。对我来说，现在和10年前的主要区别是利用云。否则，我使用许多相同的工具。我预计未来10年的编程将非常相似，仍然会出现一些错位错误，CSS仍然很难，也许部署会稍微容易些。
- en: '*What technology would you short?*'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会短线哪种技术？*'
- en: I imagine that proprietary tools for data analysis will go the way of the dinosaur.
    There might be an effort to save them by open sourcing them, but it will be too
    little, too late.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 我想象专有的数据分析工具将会像恐龙一样灭绝。也许会有努力将其开源以拯救它们，但为时已晚。
- en: '*What is the most important skill you would recommend someone interested in
    Python DevOps learn?*'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐对Python DevOps感兴趣的人学习的最重要的技能是什么？*'
- en: I think curiosity and a willingness to learn are very important, especially
    as many of these tools are fast-moving targets. There seems to always be a new
    offering or new software.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为好奇心和学习意愿非常重要，特别是因为许多工具都在快速发展。似乎总是有新的产品或新的软件出现。
- en: '*What is the most important skill you would recommend someone learn?*'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐别人学习的最重要的技能是什么？*'
- en: I have two. One, learning how you learn. People learn in different ways. Find
    what way works for you.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 我有两个答案。首先，学习如何学习。人们有不同的学习方式。找到适合自己的方式。
- en: The other skill is not technical. It is learning how to network. This doesn’t
    have to be a dirty word and is very useful for people in tech. Most of my jobs
    and work have come from networking. This will pay huge dividends.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 另一项技能不是技术性的。那就是学习如何建立人际网络。这不必是个贬义词，对科技行业的人非常有用。我大部分的工作和工作机会都来自于人际网络。这将带来巨大的回报。
- en: '*Tell the readers something cool about you.*'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '*向读者介绍一些关于你的酷事。*'
- en: I like to get outside. That might be running, ultimate hiking, or skiing.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢外出活动。这可能是跑步、究极徒步旅行或滑雪。
- en: '*Personal website/blog*'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '*个人网站/博客*'
- en: '[*https://hairysun.com*](https://hairysun.com)'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://hairysun.com*](https://hairysun.com)'
- en: '*Company website*'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: '*公司网站*'
- en: '[*https://www.metasnake.com*](https://www.metasnake.com)'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '[*https://www.metasnake.com*](https://www.metasnake.com)'
- en: '*Public contact information*'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '*公开联系信息*'
- en: '[matt@metasnake.com](mailto:matt@metasnake.com)'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '[matt@metasnake.com](mailto:matt@metasnake.com)'
- en: Michael Foord
  id: totrans-370
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 迈克尔·福德
- en: '*Where do you work and what do you do there?*'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '*你在哪里工作，做什么工作?*'
- en: My last two jobs have been working on DevOps tools, which has led to a reluctant
    passion for the topic on my part. Reluctant because I was long skeptical of the
    DevOps movement, thinking that it was mostly managers wanting developers to do
    sysadmin work as well. I’ve come to see that the part of DevOps I really care
    about is the systems-level thinking and having development processes be fully
    aware of that.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 我过去的两份工作都是在DevOps工具上工作，这导致我对这个主题产生了不情愿的热情。不情愿是因为我曾长期怀疑DevOps运动，认为这主要是管理者希望开发人员也做系统管理员的工作。我现在看到，我真正关心的DevOps部分是系统级的思维，以及开发过程完全意识到这一点。
- en: I worked for three years on Juju for Canonical, an interesting foray into programming
    with Go, and then for a year for Red Hat building a test automation system for
    Ansible Tower. Since then I’ve been self-employed with a mixture of training,
    team coaching, and contracting, including an AI project I’m working on now.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 我在Canonical为Juju工作了三年，在那里我尝试了使用Go进行编程，然后在Red Hat为Ansible Tower构建了一个测试自动化系统。从那以后，我一直是自由职业者，同时进行培训、团队指导和合同工作，包括我现在正在进行的一个AI项目。
- en: I’m my copious spare time I work on Python itself as part of the Python Core
    Dev team.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 在我丰富的空闲时间里，我作为Python核心开发团队的一员工作在Python本身上。
- en: '*What is your favorite cloud and why?*'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢的云是什么，为什么?*'
- en: I’m going to throw this question sideways a little. My favorite cloud is all
    of them, or at least not having to care (too much) which cloud I’m on.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 我要稍微侧面回答这个问题。我的最爱云是所有云，或者至少不用太担心我使用的是哪个云。
- en: The Juju model describes your system in a backend agnostic way. It provides
    a modelling language for describing your services and the relationships between
    them, which can then be deployed to any cloud.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: Juju模型以与后端无关的方式描述您的系统。它提供了一种描述您的服务及其之间关系的建模语言，然后可以部署到任何云。
- en: This allows you to start on, say, AWS or Azure, and for cost or data security
    reasons migrate to an on-prem private cloud like Kubernetes or OpenStack without
    having to change your tooling.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 这使您可以从AWS或Azure等平台开始，并出于成本或数据安全原因迁移到像Kubernetes或OpenStack这样的本地私有云，而无需更改工具。
- en: I like to control my major dependencies, so I prefer to work with something
    like OpenStack than a public cloud. I’m also a fan of Canonical’s MaaS (Metal
    As A Service), which is a bare-metal provisioner. It started life as a fork of
    Cobbler, I believe. You can use it directly, or as a substrate for managing the
    hardware with a private cloud. I wrote the Juju code to connect to the MaaS 2
    API, and I was very impressed with it.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢控制我的主要依赖项，因此我更喜欢使用类似OpenStack的东西而不是公共云。我也是Canonical的MaaS（金属即服务）的粉丝，这是一个裸金属提供程序。我相信它最初是作为Cobbler的一个分支启动的。您可以直接使用它，或者作为管理硬件的私有云的基础。我编写了连接到MaaS
    2 API的Juju代码，并对其印象深刻。
- en: I’m much more of a fan of LXC/LXD or KVM virtualization than I am of Docker
    (virtually heresy these days), so Kubernetes or OpenShift wouldn’t be my first
    port of call.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 我更喜欢LXC/LXD或KVM虚拟化，而不是Docker（在今天几乎是异端邪说），因此Kubernetes或OpenShift不会是我的首选。
- en: For commercial projects I sometimes recommend VMware cloud solutions, simply
    because of the availability of sysadmins used to running these systems.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 对于商业项目，我有时会推荐VMware的云解决方案，主要是因为这些系统的管理员使用情况。
- en: '*When did you start using Python?*'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '*你什么时候开始使用Python?*'
- en: I started programming with Python as a hobby in about 2002\. I enjoyed it so
    much that I started full-time programming around 2006\. I was lucky enough to
    get a job with a London fintech startup where I really learned the craft of software
    engineering.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 我大约在2002年开始以Python作为业余爱好进行编程。我非常喜欢它，以至于在2006年左右全职从事编程工作。我很幸运地在伦敦的一家金融科技初创公司找到了一份工作，那里我真正学到了软件工程的技艺。
- en: '*What is your favorite thing about Python?*'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '*你最喜欢Python的哪个方面?*'
- en: It’s pragmatism. Python is enormously practical, which makes it useful for real
    world tasks. This stretches right into the object system that strives to make
    the theory match the practice.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 这是实用主义。Python非常实用，这使得它在处理实际任务时非常有用。这种实用性延伸到了力求使理论与实践相匹配的对象系统。
- en: This is why I love teaching Python. For the most part, the theory is the same
    as the practice, so you get to teach them in the same breath.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我喜欢教Python。大部分情况下，理论与实践是一致的，所以你可以同时教授它们。
- en: '*What is your least favorite thing about Python?*'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '*你对Python最不喜欢的是什么？*'
- en: Python is old, and if you include the standard library, big. Python has quite
    a few warts, such as the lack of symmetry in the descriptor protocol, meaning
    you can’t write a setter for a class descriptor. Those are largely minor.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: Python已经很老了，如果包括标准库的话，就更加庞大了。Python有一些缺陷，比如描述符协议中的对称性不足，这意味着你不能为类描述符编写设置器。但这些大多数都是小问题。
- en: The big wart for me, which many will agree with, is the lack of true free-threading.
    In a multicore world, this has been getting more and more important, and the Python
    community was in denial about it for years. Thankfully we’re now seeing the core-devs
    make practical steps to fix this. Subinterpreter support has several PEPs and
    is actively being worked on. There are also people looking at [possibly] moving
    away from reference counting for garbage collection, which will make free-threading
    much easier. In fact, most of the work has already been done by Larry Hastings
    in his Gilectomy experiment, but it’s still hampered by reference counting.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，最大的问题是缺乏真正的自由线程。在多核世界中，这变得越来越重要，而Python社区多年来一直对此视而不见。幸运的是，我们现在看到核心开发人员正在采取实际步骤来解决这个问题。子解释器支持已经有几个PEP在积极地工作中。也有人正在考虑[可能]放弃引用计数的垃圾回收，这将使得自由线程变得更加容易。事实上，Larry
    Hastings在他的Gilectomy实验中已经完成了大部分工作，但仍受到引用计数的限制。
- en: '*What is the software industry going to look like in 10 years?*'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: '*软件行业未来十年会是什么样子？*'
- en: I think we’re in the early part of an AI gold rush. That’s going to spawn thousands
    of short-lived and useless products, but also completely change the industry.
    AI will be a standard part of most large-scale systems.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为我们现在正处于人工智能的早期热潮中。这将会产生成千上万个短命和无用的产品，但也将彻底改变整个行业。人工智能将成为大多数大型系统的标准组成部分。
- en: In addition, DevOps is providing a way for us to think about system development,
    deployment, and maintenance. We’ve already seen the effects of that in microservices
    and polyglot environments. I think we’ll see a rise of a new generation of DevOps
    tooling that democratises system-level thinking, making it much easier to build
    and maintain larger-scale systems. These will become more “solved problems,” and
    the frontiers will expand into new challenges that haven’t yet been described.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，DevOps正在为我们提供一种思考系统开发、部署和维护的方式。我们已经在微服务和多语言环境中看到了其影响。我认为我们将会看到新一代DevOps工具的兴起，这些工具将民主化系统级思维，使得构建和维护大规模系统变得更加容易。这些问题将变得更加“解决”，而前沿领域将扩展到尚未描述的新挑战。
- en: '*What technology would you short?*'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会对哪种技术进行空头交易？*'
- en: Ooh, a challenging question. I’m going to say the current generation of DevOps
    tooling.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，这是一个具有挑战性的问题。我要说的是当前一代的DevOps工具。
- en: The genius of DevOps is codifying arcane deployment and configuration knowledge;
    for example, playbooks with Ansible, and Charms for Juju.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps的天才在于将复杂的部署和配置知识编码化；例如，使用Ansible编写的playbooks和Juju的Charms。
- en: The ideal DevOps tooling would allow you to describe and then orchestrate your
    system, in a backend agnostic way, but also incorporate monitoring and an awareness
    of the system state. This would make deployment, testing, reconfiguring, scaling,
    and self healing straightforward and standard features.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 理想的DevOps工具将允许您以一种与后端无关的方式描述和编排系统，并且还将整合监控和对系统状态的感知。这将使得部署、测试、重新配置、扩展和自我修复变得简单且成为标准功能。
- en: Perhaps we need an App Store for the cloud. I think a lot of people are trying
    to get there.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 或许我们需要一个面向云的应用商店。我认为很多人都在努力朝这个方向发展。
- en: '*What is the most important skill you would recommend someone interested in
    Python DevOps learn?*'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: '*你会推荐对Python DevOps有兴趣的人学习什么技能？*'
- en: I tend to learn by doing, so I resent being told what to learn. I’ve definitely
    taken jobs just to learn new skills. When I started with Canonical, it was because
    I wanted to learn web development.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 我倾向于通过实践学习，所以我反感被告知学习什么。我肯定是为了学习新技能而接受工作的。我加入Canonical的初衷是因为我想学习Web开发。
- en: So practical experience trumps learning. Having said that, virtual machines
    and containers are likely to remain the base unit of system design and deployment.
    Being comfortable slinging containers around is really powerful.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，实际经验胜过学习。话虽如此，虚拟机和容器很可能仍然是系统设计和部署的基本单位。熟练地操作容器具有非常强大的能力。
- en: Networking is hard, important, and a very valuable skill. Combine that with
    containers through software-defined networking layers, and it makes a potent combination.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 网络技能很难，也很重要，是一项非常宝贵的技能。结合软件定义网络层中的容器，这将是一个强大的组合。
- en: '*What is the most important skill you would recommend someone learn?*'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '*你推荐别人学习的最重要的技能是什么？*'
- en: You’ll never know enough, so the most important skill is to be able to learn
    and to change. If you can change, you’re never stuck. Being stuck is the worst
    thing in the world.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 你永远不会知道足够多，所以最重要的技能是学习和改变的能力。如果你能够改变，你永远不会被困住。被困住是世界上最糟糕的事情。
- en: '*Tell the readers something cool about you.*'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '*告诉读者关于你的一些酷炫事情。*'
- en: I dropped out of Cambridge University, I’ve been homeless, I’ve lived in a community
    for a number of years, I sold bricks for 10 years, and I taught myself to program.
    Now I’m on the Python core development team and have the privilege of traveling
    the world to speak about and teach Python.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 我从剑桥大学辍学，曾经无家可归，多年来生活在社区中，我卖过砖十年，自学编程。现在我是Python核心开发团队的一员，并有幸游历世界演讲和教授Python。
- en: '*Personal website/blog*'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '*个人网站/博客*'
- en: '[*http://www.voidspace.org.uk*](http://www.voidspace.org.uk)'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: '[*http://www.voidspace.org.uk*](http://www.voidspace.org.uk)'
- en: '*Public contact information*'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '*公开联系信息*'
- en: '[michael@voidspace.org.uk](mailto:michael@voidspace.org.uk)'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '[michael@voidspace.org.uk](mailto:michael@voidspace.org.uk)'
- en: Recommendations
  id: totrans-410
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐
- en: '“All models are wrong…but some are useful,” certainly applies to any general
    piece of advice on DevOps. Some elements of my analysis will be absolutely wrong,
    but some of it will be useful. It is impossible that my own personal bias doesn’t
    play a role in my analysis. Despite being potentially wrong in some of my analysis
    and being very biased, there are clearly some urgent issues to fix in the management
    of most companies. Some of the highest priority issues are:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: “所有模型都是错误的……但有些是有用的”，这当然适用于任何关于DevOps的一般建议。我的分析中有些部分肯定是错误的，但有些部分是有用的。我个人的偏见不可避免地在我的分析中起作用。尽管在一些分析中可能是错误的并且存在极大的偏见，但大多数公司管理中显然存在一些紧迫的问题需要解决。其中一些最优先的问题包括：
- en: Status differences have lead to accountability problems, with software stability
    being a highly visible example. Engineering managers (especially startup founders),
    in particular, need to acknowledge how informal status closure affected software
    quality and fix it.
  id: totrans-412
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 地位差异导致了责任问题，软件稳定性是一个非常显著的例子。工程经理（特别是创业公司的创始人）特别需要承认非正式地位封闭如何影响软件质量，并加以修复。
- en: There is a culture of meaningless risk (firing silver bullets versus fixing
    broken windows) at many organizations.
  id: totrans-413
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 许多组织存在一种无意义风险的文化（发射银子弹对比修复破窗），这是一个问题。
- en: There are ineffective or meaningless standards of excellence, and there is a
    general lack of discipline in engineering at many organizations.
  id: totrans-414
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 许多组织在卓越标准上存在无效或无意义，并且在工程领域普遍缺乏纪律。
- en: Culturally, data has not been used to make decisions. The highest paid person’s
    opinion (HIPO), status, aggression, intuition, and possibly even the roll of the
    dice have been the reasons for a decision.
  id: totrans-415
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文化上，数据并未被用来做出决策。最高薪水者的意见（HIPO），地位、攻击性、直觉，甚至是掷骰子可能都是决策的原因。
- en: True understanding of the concept of “opportunity cost” eludes executive management.
    This lack of understanding then trickles down the ranks.
  id: totrans-416
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 高管对“机会成本”概念的真正理解依然难以达成。这种理解的缺乏随后影响了各个层级。
- en: The need to increase focus on meritocracy over “snake oil and bullshit,” as
    senior data scientist Jeremy Howard at Kaggle says.
  id: totrans-417
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 需要增加对“精英主义”而非“蛇油和胡扯”的关注，正如Kaggle的高级数据科学家杰里米·霍华德所言。
- en: 'The “right” things can be put in place in a few months in engineering: a ticket
    system, code review, testing, planning, scheduling, and more. Executive leadership
    in companies can agree these are the right things to do, but their actions must
    match their words. Instead of focusing on execution, consistency and accountability,
    executive leadership is often focused on firing silver bullets from a high-powered
    elephant gun. Unfortunately, they often miss every elephant they shoot at. Executive
    teams would be wise to learn from these mistakes and avoid the negative culture
    around these mistakes.'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 几个月内在工程领域可以落实的“正确”事情：工单系统、代码审查、测试、规划、调度等。公司的高级领导团队可以同意这些是正确的事情，但是他们的行动必须与他们的话语一致。而不是专注于执行、一致性和问责制，高级领导层通常专注于用高性能象枪射银子弹。不幸的是，他们经常错过每头大象。高级管理团队应该从这些错误中吸取教训，避免围绕这些错误产生负面文化。
- en: Exercises
  id: totrans-419
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: What are the core components necessary for a capable team?
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个高效团队所需的核心组成部分是什么？
- en: Describe three areas you could improve as a team member.
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述你作为团队成员可以改进的三个领域。
- en: Describe three areas you excel at as a team member.
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述你作为团队成员擅长的三个领域。
- en: What is right about all companies in the future?
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未来所有公司都正确的是什么？
- en: Why does DevOps need external support and recognition?
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么DevOps需要外部支持和认可？
- en: Challenges
  id: totrans-425
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战
- en: Create a detailed analysis of your current team using the teamwork framework
    by Larson and LaFast.
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Larson和LaFasto的团队合作框架，对你当前的团队进行详细分析。
- en: Have everyone on your team fill out anonymous index cards that have three positive
    things and three valuable feedback items for each member of your small group (must
    have negative and positive issues). Get into a room and have each person read
    the index cards from their teammates. (*Yes, this does work and can be a life-changing
    experience for individuals in your team*.)
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让团队的每个人填写匿名索引卡，上面列出每个小组成员的三个积极和三个有价值的反馈项目（必须包括积极和负面问题）。让每个人在房间里读出来来自队友的索引卡。（*是的，这确实有效，并且可能是团队成员的一次改变人生的经历。*）
- en: Capstone Project
  id: totrans-428
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 毕业项目
- en: 'Now that you have reached the end of this book, there is a Capstone Project
    that you can build that demonstrates mastery of the concepts covered:'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经读完这本书，可以完成一个毕业项目，展示你掌握的概念：
- en: 'Using the ideas explored in the book, create a scikit-learn, PyTorch, or TensorFlow
    application that servers out predictions via Flask. Deploy this project to a primary
    cloud provider while completing all of these tasks:'
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用书中探讨的思想，创建一个通过Flask提供预测的scikit-learn、PyTorch或TensorFlow应用程序。在完成所有这些任务的同时将该项目部署到主要的云提供商：
- en: Endpoint and health-check monitoring
  id: totrans-431
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 终端和健康检查监控
- en: Continuous delivery to multiple environments
  id: totrans-432
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连续交付到多个环境
- en: Logging to a cloud-based service such as Amazon CloudWatch
  id: totrans-433
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录到像Amazon CloudWatch这样的云服务
- en: Load-test the performance and create a scalability plan
  id: totrans-434
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行性能负载测试并创建可伸缩性计划
- en: '^([1](ch16.html#idm46691311834120-marker)) Anca Metiu, “Owning the Code: Status
    Closure in Distributed Groups,” *Organization Science*, (Jul-Aug. 2006).'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch16.html#idm46691311834120-marker)) Anca Metiu，《掌控代码：分布式团队中的状态封闭》，《组织科学》，（2006年7-8月）。
- en: '^([2](ch16.html#idm46691311825400-marker)) Anca Metiu, “Owning the Code: Status
    Closure in Distributed Groups,” *Organization Science*, (Jul-Aug. 2006).'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch16.html#idm46691311825400-marker)) Anca Metiu，《掌控代码：分布式团队中的状态封闭》，《组织科学》，（2006年7-8月）。
- en: '^([3](ch16.html#idm46691311816760-marker)) Larson, C. E., & LaFasto, F. M.
    J. (1989). *Sage series in interpersonal communication, Vol. 10\. Teamwork: What
    must go right/what can go wrong*. Thousand Oaks, CA, US: Sage Publications, Inc.'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch16.html#idm46691311816760-marker)) Larson, C. E., & LaFasto, F. M. J.（1989）。《人际交流中的智慧系列，第10卷：团队合作：什么必须做对/什么可能出错》。千橡市，加利福尼亚州，美国：Sage出版公司。
