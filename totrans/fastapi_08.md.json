["```py\nfrom fastapi import FastAPI, Depends, Params\n\napp = FastAPI()\n\n# the dependency function:\ndef user_dep(name: str = Params, password: str = Params):\n    return {\"name\": name, \"valid\": True}\n\n# the path function / web endpoint:\n@app.get(\"/user\")\ndef get_user(user: dict = Depends(user_dep)) -> dict:\n    return user\n```", "```py\ndef *pathfunc*(*name*: *depfunc* = Depends(*depfunc*)):\n```", "```py\ndef *pathfunc*(*name*: *depfunc* = Depends()):\n```", "```py\nfrom fastapi import FastAPI, Depends, Params\n\napp = FastAPI()\n\n# the dependency function:\ndef user_dep(name: str = Params, password: str = Params):\n    return {\"name\": name, \"valid\": True}\n\n# the path function / web endpoint:\n@app.get(\"/user\")\ndef get_user(user: dict = Depends(user_dep)) -> dict:\n    return user\n```", "```py\n@*app*.*method*(*url*, dependencies=[Depends(*depfunc*)])\n```", "```py\nfrom fastapi import FastAPI, Depends, Params\n\napp = FastAPI()\n\n# the dependency function:\ndef check_dep(name: str = Params, password: str = Params):\n    if not name:\n        raise\n\n# the path function / web endpoint:\n@app.get(\"/check_user\", dependencies=[Depends(check_dep)])\ndef check_user() -> bool:\n    return True\n```", "```py\nfrom fastapi import FastAPI, Depends, APIRouter\n\nrouter = APIRouter(..., dependencies=[Depends(*`depfunc`*)])\n```", "```py\nfrom fastapi import FastAPI, Depends\n\ndef depfunc1():\n    pass\n\ndef depfunc2():\n    pass\n\napp = FastAPI(dependencies=[Depends(depfunc1), Depends(depfunc2)])\n\n@app.get(\"/main\")\ndef get_main():\n    pass\n```"]